{"version":3,"sources":["utils/api.js","slice/UserSlice.jsx","slice/RepondreQuestionsSlice.jsx","components/InputAwait.jsx","slice/FormulesSlice.jsx","components/formules/ItemFormule.jsx","components/PopUp.jsx","components/formules/TodoListFormule.jsx","components/formules/ItemCategorie.jsx","components/use/useContructor.jsx","components/use/useUnload.jsx","slice/VariablesAleatoiresSlice.jsx","slice/EnoncesSlice.jsx","slice/UniteSlice.jsx","slice/ModeleSlice.jsx","components/SelectionModele.jsx","components/Enregistrement.jsx","components/use/useKeyPressCtrlS.jsx","components/formules/EnregistrementFormule.jsx","pages/Prof/Formules.jsx","components/ParticulesFond.jsx","pages/Prof/AccueilProf.jsx","components/DropFile.jsx","pages/Prof/Architecture.jsx","slice/ConsulterSlice.jsx","slice/PromoSlice.jsx","components/correction/TableConsulter.jsx","pages/Prof/Correction.jsx","components/enonce/QuestionEnonce.jsx","components/unite/UniteFunctions.jsx","components/unite/ChoixUnite.jsx","components/enonce/SlideBarMarge.jsx","components/enonce/ItemReponse.jsx","components/enonce/ListeReponses.jsx","components/enonce/EnTete.jsx","components/enonce/EnregistrementEnonce.jsx","pages/Prof/Enonces.jsx","components/variable/SlideBarVariable.jsx","components/variable/ItemVariableAleatoire.jsx","components/variable/EnregistrementVariableAleatoires.jsx","pages/Prof/VariablesAleatoires.jsx","components/correction/EssaiEtudiant.jsx","components/correction/Message.jsx","pages/Prof/ConsulterEtudiant.jsx","components/promo/DialogAssociationModele.jsx","components/promo/AjoutListeEtu.jsx","components/promo/TableEtudiant.jsx","pages/Prof/Promo.jsx","pages/Prof/GestionUnites.jsx","components/reponses/ItemReponse.jsx","components/reponses/ItemQuestion.jsx","pages/Etu/RepondreQuestions.jsx","components/MenuProfil.jsx","pages/Etu/AccueilEtu.jsx","components/InputPassword.jsx","pages/Profil.jsx","components/ParticulesBackLogin.jsx","pages/Login.jsx","components/Navbar.jsx","components/PrivateRoute.jsx","utils/store.jsx","App.js","reportWebVitals.js","index.js"],"names":["host","window","port","credentials","withCredentials","protocol","location","href","split","getInfoUserAPI","axios","get","logoutAPI","getImageUserAPI","username","loginAPI","password","post","setImageUserAPI","image","setPwdUserAPI","passwords","getCategoriesFormulesAPI","idModele","addCategorieFormuleAPI","tabFormules","deleteModeleAPI","getAllModeleAPI","addModeleAPI","nomModele","getModele3DAPI","idAuth","addModele3DAPI","archi","sujet","images","addArchiAPI","excel","getVariablesArchiAPI","addPromoAPI","nomPromo","getAllPromoAPI","getInfoPromoAPI","idPromo","attributionSujetAPI","deletePromoAPI","desatributionSujetAPI","getModelPromoAPI","addVariableAPI","tabVariables","getVariablesAPI","setQuestionsAPI","enonce","tabQuestions","addUniteAPI","tabUnites","getAllUniteAPI","etudiantNewAPI","fileUploaded","etudiantReponsesNewAPI","etudiantVariablesAPI","getSujetAPI","getReponsesCorrigees","getEssaisEtudiant","userDetails","createAsyncThunk","a","response","data","logoutUser","loginUser","user","name","setUserImage","props","FormData","append","getUserImage","myStorage","localStorage","userSlice","createSlice","initialState","undefined","isProf","isLogin","error","justLogin","reducers","setUser","state","action","payload","setError","setJustLogin","extraReducers","rejected","disconnect","fulfilled","connect","pending","URL","createObjectURL","meta","arg","reader","FileReader","readAsDataURL","onloadend","base64data","result","setItem","imageBase64","Buffer","from","profilepic","toString","getItem","actions","changePassword","changeUserName","selectUserName","selectIsLogin","selectError","selectIsProf","selectJustLogin","getEtudiantModele","getSujet","enregistrerReponses","etudiantVariables","getModele3D","idArchi","reponseSlice","indexQuestion","justification","nbMaxReponses","tabReponses","value","tabUnite","abr","puissance","sujetEnregistre","id_auth","image1","image2","addReponse","indexReponseAvantDernier","length","push","_","cloneDeep","changeReponse","indexReponse","isNaN","deleteReponse","splice","changeUniteForAllReponses","tab","map","i","changeUniteReponses","changeJustification","justif","setUnite","newTab","questions","forEach","question","reponsesTab","reponse","reponses","element","id_question","contenu","variable","regx","RegExp","nom","replaceAll","valeur","selectReponses","peutSupprimer","selectSujetEnregistre","DebounceInput","label","typeNumber","onChange","delay","style","rows","useState","userdata","setUserdata","delayeddata","useRef","debounce","e","current","onChangeIn","target","TextField","multiline","variant","size","getCategoriesFormules","enregistrerFormules","formuleSlice","modif","tabFormule","nomFormule","formule","saveElement","elem","indexCategorie","indexFormule","actualise","enregistre","changement","addCategorie","changeNom","index","event","removeCategorie","changeModifCategorie","addFormule","changeNomFormule","changeFormule","changeModifFormule","removeFormule","undoFormule","changePositionFormule","up","save","message","array","formules","elemForm","saveTabFormule","setActualise","selectCategorieFormule","selectActualiseFormule","selectEnregistreFormule","selectTabCategorieLength","selectPremiereFormule","selectChangement","ItemFomrule","onRemove","classes","makeStyles","theme","affichageFormule","display","nomForm","width","center","margin","marginLeft","buttonSave","backgroundColor","palette","primary","light","typoNomFormule","overflowWrap","typoFormule","buttonModif","containerFormules","gridTemplateColumns","gridTemplateRows","gap","breakpoints","down","fabDelete","color","main","dark","useStyles","dispatch","useDispatch","matches","useMediaQuery","item","useSelector","indexCat","selectFormule","changeModif","className","Fab","clsx","disabled","aria-label","onClick","Button","Typography","React","memo","PopUp","open","handleClose","actionName","severity","pos","snackbar","zIndex","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","IconButton","fontSize","TodoListFormule","buttonAjouterFormule","openPopUpSave","setOpenPopUpSave","tabFormuleLength","ajout","useCallback","Array","fill","ItemCategorie","fieldNomCategorie","textNomCategorie","marginTop","fabModif","divItemAccordeon","minWidth","borderRadius","padding","boxShadow","enteteItemAccordeon","justifyContent","buttonDelete","accordion","accordionDetails","flexDirection","expanded","setExpanded","setOpen","selectCategorie","change","remove","delayTimeout","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Accordion","square","AccordionSummary","expandIcon","AccordionDetails","useConstructor","initializer","useUnload","active","useEffect","handleBeforeUnload","preventDefault","addEventListener","removeEventListener","getAllVariables","setVariables","variablesAleatoiresReducer","min","max","precision","addVariable","changeMin","changeMax","removeVariable","changePrecision","undoVariable","selectVariablesAleatoires","variableAleatoire","selectActualise","selectEnregistreVariable","selectTabLength","setQuestions","enoncesReducer","enonceContenu","selectCat","selectForm","margeErreur","unite","addQuestion","removeQuestion","handleChangeQuestion","handleChangeSelect","handleChangeUnite","idQuestion","idReponse","id","formule1","handleChangeCat","handleChangeForm","handleChangeMargeErreur","marge","handleChangeEnonce","removeReponse","selectEnonce","selectActualiseEnonce","selectEnregistreEnonce","selectTabQuestionLength","selectContenuEnonce","getAllUnite","enregistreUnites","uniteSlice","indexEnModif","addUnite","abrev","changeNomComplet","changeAbreviation","deleteUnite","setIndexEnModif","setEnregistre","setTest","sansUnite","o","selectUnites","selectIndexEnMofid","selectEnregistreUnite","getModele","removeModele","addNewModele","modeleSlice","tabName","idModeleSelectionne","selectionnerModele","id_modele","nom_modele","chargementSuppression","insertId","selectModele","modele","selectIdModeleSelectionne","selectModeleActuel","SelectionModele","setClose","tard","divNouveauModele","gridGap","fabAdd","form","marginBottom","divSelectModele","menuItem","dialogActions","buttonLater","select","setSelect","etat","nouveauModele","setNouveauModele","openConfirm","setOpenConfirm","disableBackdropClick","disableEscapeKeyDown","FormControl","InputLabel","Select","input","Input","MenuItem","css","required","onChangeNouveauModele","includes","console","log","Enregistrement","isEnregistre","openPopUp","setOpenPopUp","openDialog","setOpenDialog","listePromo","setListePromo","touche","keyPressed","setKeyPressed","downHandler","navigator","platform","match","metaKey","ctrlKey","keyCode","setInterval","useKeyPress","envoyer","then","requestStatus","nom_promo","id_promo","tempTab","indexOf","suppAsso","EnregistrementFormule","tabCatFormule","some","cat","TodoListAccordeon","hr","fab","tabCatLength","Particules","position","opacity","top","height","params","Accueil","isEnregistreVariable","isEnregistreFormule","isEnregistreEnonce","isEnregistreUnite","DropFile","divDrop","secondary","border","borderColor","textAlign","cursor","cloudIcon","onDrop","acceptedFiles","file","compressImage","imageCompression","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","changeFile","useDropzone","accept","typeFile","maxFiles","getRootProps","getInputProps","files","path","substring","Architecture","root","paddingBottom","divImportModele","divDropModele","flexWrap","divNumSujet","saveButton1","saveButton2","button","buttonVariable","setSujet","setImage1","setImage2","setExcel","catch","erreur","envoieArchi","envoieModele3D","getReponsesCorDB","idEtudiant","getEssaisDB","consulterSlice","etudiant","prenom","id_etudiant","tabEssais","tabReponsesJustes","changeReponseJuste","indexE","indexQ","indexR","justeProf","setEssaisForTest","dateEssai","corrige","num","commentProf","note","justeApp","ecart","changeMessage","changeCommentaire","commentaire","changeNote","setCorrigeTrue","setEtudiantConsulter","setAvisApplication","essai","questionJuste","find","repCor","Math","abs","filter","rep","essaisDB","essaiQuestionDB","date","taille","reponseDB","selectEssais","consulter","selectMessage","selectReponsesJustes","selectEtudiantConsulter","getEtudiantsPromo","getAllPromo","addPromo","removePromo","PromoSlice","tabPromo","tabEtudiants","setEtudiantsForTests","avancement","setIdPromo","promo","selectEtudiants","selectIdPromo","selectPromo","selectEnregistrePromo","StickyHeadTable","linkConsulter","textDecoration","page","setPage","columns","align","columnConsulterSujet","affichageEnplus","string","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","tabIndex","to","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","onChangePage","newPage","Correction","divTable","choixPromoDiv","choixPromoField","isEnregistrePromo","tabPromos","handleChangePromo","helperText","QuestionEnonce","handleChange","divQuestion","selectQuestion","defaultValue","setOptions","buttonList","lang","placeholder","setDefaultStyle","afficherUnites","ChoixUnite","alignementHorizontal","columnGap","alignItems","buttonGap","choixInput","setUnites","unitesReference","changePuissance","supprimerIterationsSansUnite","partieUnite","handleDeleteUnite","handleChangePuissance","onBlur","pow","parseInt","handleBlurUnite","InputProps","startAdornment","InputAdornment","maxWidth","fullWidth","title","setTabUnite","SliderBar","divSlideBar","selectMargeErreur","handleClickAway","gutterBottom","Slider","marks","step","onChangeCommitted","valueLabelDisplay","aria-labelledby","Reponse","divReponse","maxHeight","divUniteMarge","gridColumn","affichageUnite","bottom","divMarge","buttonAjouterUnite","selectReponse","tabCatForm","changeCat","changeForm","ListeReponses","divListeReponses","buttonSupprimerReponse","right","tabReponse","selectTabReponse","tabReponseLength","selectReponseLength","premierFormule","add","MyEditor","EnregistrementEnonce","Enonces","enonceSujet","divQuestionReponse","buttonAddQuestion","float","actualiseEnonce","tabQuestionLength","enTete","changementFormule","deleteQuestion","SlideBar","precisionSlice","selectPrecision","valueLabelFormat","getAriaValueText","ItemVariable","typo","containerVariables","fabSave","selectElement","parseFloat","tableauVariables","variables","VariablesAleatoires","divItemvariable","openPopUpUndo","setOpenPopUpUndo","openModele","setOpenModele","lengthTab","isActualise","EnregistrementVariableAleatoires","boxReponses","paddingTop","noteTextField","noteInput","fontWeight","EssaiEtudiant","indexEssai","setActu","moment","format","Question","IconeJuste","juste","numQuestion","questionCorrigee","handleChangeCommentaire","nbReponsesJuste","nb","boutonJustePourProf","handleClickJuste","colSpan","Collapse","in","timeout","unmountOnExit","Box","ReactHtmlParser","Message","messageField","destinataire","handleChangeMessage","handleSend","Consulter","messageBouton","indexEssaiDialog","setIndexEssai","openDetails","setOpenDetails","openMessage","setOpenMessage","nbQuestionsJustes","findIndex","List","Divider","ListItem","handleClickDetails","ListItemText","ListItemAvatar","revu","Avatar","DialogAssociationModele","selectionModele","setSelectionModele","AjoutListeEtu","fichier","err","envoieExcel","displayColumn","startIcon","filtre","setFiltre","EnhancedTableToolbar","Toolbar","Tooltip","Promo","mapDisplayEtu","divNomPromo","divPromo","formControl","divSelectPromo","labelSelectPromo","nouvellePromo","setNouvellePromo","assoModele","setAssoModele","listEtu","setListEtu","changePromo","GestionUnites","tableauUnite","addButton","deleteButton","modifButton","marginRight","tableCell","tableRow","modifIsUnique","enregistrer","buttonsUniteSansModif","handleModifUnite","afficherUnite","handleChangeNomComplet","handleChangeAbreviation","Item","inputAdornmentReponse","choixUniteOpen","canDelete","handleDeleteReponse","endAdornment","listeReponses","rowGap","listeQuestions","buttonAjouterReponse","h2","RepondreQuestions","contenant","buttonFixed","modeles","alert","handleEnvoyerReponses","MARGE_COTE","sujetForPdf","doc","jsPDF","options","pagesplit","LARGEUR_A4","HAUTEUR_A4","fromHTML","MARGE_HAUT","addPage","Image","src","number_of_pages","internal","getNumberOfPages","text","setLineWidth","line","alt","MenuProfil","divMenuProfil","avatar","openLocation","setOpenLocation","actualiseModele","disableHoverListener","aria-controls","aria-haspopup","currentTarget","toUpperCase","Menu","transformOrigin","disableScrollLock","anchorEl","keepMounted","Boolean","Link","ListItemIcon","divProgress","info","LinearProgress","InputPwd","onKeyPress","divInputPassword","spacing","textField","showMdp","setShowMdp","htmlFor","OutlinedInput","type","Profile","carteProfil","imageProfil","backgroundSize","backgroundPosition","wrapper","dropPhotoProfil","buttonEnvoyerImageProfil","divPasswordChange","buttonChangePwd","oldPassword","newPassword","setPassword","setImage","backgroundImage","charAt","particles","line_linked","number","Login","divLogin","backgroundLogin","buttonConnexion","fieldLogin","iconLogin","iconPwd","pwd","loginConnect","setLoginConnect","connectClick","onChangeUserName","code","onChangePassword","NavBar","divNavigation","divider","deconnexionNav","deconnexionText","deconnexionIcon","divNavBar","burger","left","menu","setMenu","listeProf","icon","route","listeEtudiant","liste","SwipeableDrawer","onOpen","PrivateRoute","forProf","Component","rest","render","selection","configureStore","reducer","userReducer","formuleReducer","modeleReducer","reponseReducer","promoReducer","consulterReducer","uniteReducer","middleware","getDefaultMiddleware","serializableCheck","App","createMuiTheme","warning","success","typography","fontFamily","h1","textTransform","frFR","store","CssBaseline","exact","AccueilProf","Formules","VariableAleatoires","AccueilEtu","Profil","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddad74a9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst { host } = window;\r\nconst { port } = window;\r\nconst credentials = { withCredentials: true };\r\nconst protocol = window.location.href.split(\"/\")[0];\r\n\r\n// User\r\n\r\nexport function getInfoUserAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/auth`, credentials);\r\n}\r\n\r\nexport function logoutAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/auth/logout`, credentials);\r\n}\r\n\r\nexport function getImageUserAPI(username) {\r\n    return axios.get(`${protocol}//${host}:${port}/auth/${username}/profilepic`, credentials);\r\n}\r\n\r\nexport function loginAPI(username, password) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/login`, { username, password }, credentials);\r\n}\r\n\r\nexport function setImageUserAPI(username, image) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/${username}/profilepic/new`, image, credentials);\r\n}\r\n\r\nexport function setPwdUserAPI(username, passwords) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/${username}/changepwd`, { passwords }, credentials);\r\n}\r\n\r\n// Formules\r\n\r\nexport function getCategoriesFormulesAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/categories`, credentials);\r\n}\r\n\r\nexport function addCategorieFormuleAPI(idModele, tabFormules) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/categories/new`, tabFormules, credentials);\r\n}\r\n\r\n// Modele\r\n\r\nexport function getInfoModeleAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}`, credentials);\r\n}\r\n\r\nexport function deleteModeleAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/delete`, credentials);\r\n}\r\n\r\nexport function getAllModeleAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/modele`, credentials);\r\n}\r\n\r\n// renvoie ausi le numéro modele\r\n\r\nexport function addModeleAPI(nomModele) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/new`, { \"nommodele\" : nomModele }, credentials);\r\n}\r\n\r\n// Modeles 3D\r\n\r\nexport function getModele3DAPI(idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/modeles`, credentials);\r\n}\r\n\r\nexport function addModele3DAPI(archi) {\r\n    return axios.post(`${protocol}//${host}:${port}/architecture/${archi.sujet}/modeles/new`, archi.images, credentials);\r\n}\r\n\r\n// Architectures\r\n\r\nexport function addArchiAPI(excel) {\r\n    return axios.post(`${protocol}//${host}:${port}/architecture/new`, excel, credentials);\r\n}\r\n\r\nexport function getVariablesArchiAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/architecture/attribued_without_modeles/excel`, credentials);\r\n}\r\n\r\n// Promotion\r\n\r\nexport function addPromoAPI(nomPromo) {\r\n    return axios.post(`${protocol}//${host}:${port}/promo/new`, { nomPromo : nomPromo }, credentials);\r\n}\r\n\r\nexport function getAllPromoAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/`, credentials);\r\n}\r\n\r\nexport function getInfoPromoAPI(idPromo) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}`, credentials);\r\n}\r\n\r\nexport function attributionSujetAPI(idPromo, idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/${idModele}/attribution`, credentials);\r\n}\r\n\r\nexport function deletePromoAPI(idPromo){\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/delete`, credentials);\r\n}\r\n\r\nexport function desatributionSujetAPI(idPromo) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/desatribution`, credentials);\r\n}\r\n\r\nexport function getModelPromoAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/modele`, credentials);\r\n}\r\n\r\n// Variables aléatoires\r\n\r\nexport function addVariableAPI(idModele, tabVariables) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/variables/new`, tabVariables, credentials);\r\n}\r\n\r\nexport function getVariablesAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/variables`, credentials);\r\n}\r\n\r\n// Enonces\r\n\r\nexport function setQuestionsAPI(idModele, enonce, tabQuestions) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/questions/new`, { tabQuestions, enonce }, credentials);\r\n}\r\n\r\nexport function addUniteAPI(tabUnites) {\r\n    return axios.post(`${protocol}//${host}:${port}/unite/new`, { tabUnites }, credentials);\r\n}\r\n\r\nexport function getAllUniteAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/unite/`, credentials);\r\n}\r\n\r\n// Etudiant \r\n\r\nexport function etudiantNewAPI(idPromo, fileUploaded) {\r\n    return axios.post(`${protocol}//${host}:${port}/etudiant/${idPromo}/new`, fileUploaded, credentials);\r\n}\r\n\r\nexport function etudiantReponsesNewAPI(tabQuestions) {\r\n    return axios.post(`${protocol}//${host}:${port}/etudiant/reponses/new`, { tabQuestions }, credentials);\r\n}\r\n\r\nexport function etudiantVariablesAPI(idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/variables`, credentials);\r\n}\r\n\r\n// Sujet \r\n\r\nexport function getSujetAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/sujet`, credentials);\r\n}\r\n\r\n//Correction\r\n\r\nexport function getReponsesCorrigees(idPromo, idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/correction/${idPromo}/${idAuth}`, credentials);\r\n}\r\n\r\nexport function getEssaisEtudiant(idAuth){\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/reponses`, credentials);\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  getInfoUserAPI,\r\n  logoutAPI,\r\n  setImageUserAPI,\r\n  getImageUserAPI,\r\n  loginAPI,\r\n} from \"../utils/api.js\";\r\n\r\nexport const userDetails = createAsyncThunk(\"users/getInfoUser\", async () => {\r\n  const response = await getInfoUserAPI();\r\n  return response.data;\r\n});\r\n\r\nexport const logoutUser = createAsyncThunk(\"users/logout\", async () => {\r\n  const response = await logoutAPI();\r\n  return response.data;\r\n});\r\n\r\nexport const loginUser = createAsyncThunk(\"users/login\", async (user) => {\r\n  const response = await loginAPI(user.name, user.password);\r\n  return response.data;\r\n});\r\n\r\nexport const setUserImage = createAsyncThunk(\r\n  \"users/setUserImage\",\r\n  async (props) => {\r\n    const data = new FormData();\r\n    data.append(\"profilePic\", props.image);\r\n    const response = await setImageUserAPI(props.name, data);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const getUserImage = createAsyncThunk(\r\n  \"users/getUserImage\",\r\n  async (name) => {\r\n    const response = await getImageUserAPI(name);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nlet myStorage = window.localStorage;\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    name: \"\",\r\n    password: \"\",\r\n    image: undefined,\r\n    isProf: false,\r\n    isLogin: undefined,\r\n    error: false,\r\n    justLogin : false\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      const { name, password, isProf } = action.payload;\r\n      state.name = name;\r\n      state.password = password;\r\n      state.isProf = isProf;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    setJustLogin: (state, action) =>{\r\n      state.justLogin = action.payload;\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [userDetails.rejected]: (state) => {\r\n      disconnect(state);\r\n    },\r\n    [userDetails.fulfilled]: (state, action) => {\r\n      connect(state, action);\r\n    },\r\n    [loginUser.rejected]: (state) => {\r\n      state.error = true;\r\n    },\r\n    [loginUser.fulfilled]: (state, action) => {\r\n      connect(state, action);\r\n      state.justLogin = true;\r\n    },\r\n    [logoutUser.rejected]: (state) => {\r\n      disconnect(state);\r\n    },\r\n    [logoutUser.fulfilled]: (state) => {\r\n      disconnect(state);\r\n    },\r\n    [setUserImage.pending]: (state, action) => {\r\n      state.image = URL.createObjectURL(action.meta.arg.image);\r\n      let reader = new FileReader();\r\n      const name = state.name;\r\n      reader.readAsDataURL(action.meta.arg.image);\r\n      reader.onloadend = function () {\r\n        let base64data = reader.result;\r\n        myStorage.setItem(name, base64data);\r\n      };\r\n    },\r\n    [getUserImage.fulfilled]: (state, action) => {\r\n      const imageBase64 =\r\n        \"data:image/jpeg;base64,\" +\r\n        Buffer.from(action.payload.profilepic).toString(\"base64\");\r\n      state.image = imageBase64;\r\n      myStorage.setItem(state.name, imageBase64);\r\n    },\r\n  },\r\n});\r\n\r\nconst disconnect = (state) => {\r\n  state.name = \"\";\r\n  state.password = \"\";\r\n  state.isLogin = false;\r\n  state.isProf = undefined;\r\n  state.image = undefined;\r\n};\r\n\r\nconst connect = (state, action) => {\r\n  state.name = action.payload.username;\r\n  state.isProf = action.payload.isProf === 1 ? true : false;\r\n  state.isLogin = true;\r\n  if (state.image === undefined){\r\n    state.image = myStorage.getItem(action.payload.username) === null\r\n      ? undefined\r\n      : myStorage.getItem(action.payload.username)\r\n  }\r\n};\r\n\r\nexport const {\r\n  setUser,\r\n  changePassword,\r\n  changeUserName,\r\n  setError,\r\n  setJustLogin,\r\n} = userSlice.actions;\r\n\r\nexport const selectUserName = (state) => state.user;\r\n\r\nexport const selectIsLogin = (state) => state.user.isLogin;\r\n\r\nexport const selectError = (state) => state.user.error;\r\n\r\nexport const selectIsProf = (state) => state.user.isProf;\r\n\r\nexport const selectJustLogin = (state) => state.user.justLogin;\r\n\r\nexport default userSlice.reducer;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getSujetAPI, etudiantVariablesAPI, etudiantReponsesNewAPI, getModele3DAPI, getModelPromoAPI } from \"../utils/api.js\";\r\nimport _ from \"lodash\"\r\n\r\nexport const getEtudiantModele = createAsyncThunk(\"etudiant/getEtudiantModele\", \r\nasync () => {\r\n    const response = await getModelPromoAPI();\r\n    return response.data;\r\n});\r\n\r\nexport const getSujet = createAsyncThunk(\"etudiant/getSujet\", \r\nasync (idModele) => {\r\n    const response = await getSujetAPI(idModele);\r\n    return response.data;\r\n});\r\n\r\nexport const enregistrerReponses = createAsyncThunk(\"etudiant/enregistrerReponses\", \r\nasync (tabQuestions) => {\r\n    const response = await etudiantReponsesNewAPI(tabQuestions);\r\n    return response.data;\r\n});\r\n\r\nexport const etudiantVariables = createAsyncThunk(\"etudiant/etudiantVariables\", \r\nasync (idAuth) => {\r\n    const response = await etudiantVariablesAPI(idAuth);\r\n    return response.data;\r\n});\r\n\r\nexport const getModele3D = createAsyncThunk(\"etudiant/getModele3D\", \r\nasync (idArchi) => {\r\n    const response = await getModele3DAPI(idArchi);\r\n    return response.data;\r\n});\r\n\r\nexport const reponseSlice = createSlice({\r\n    name: \"reponse\",\r\n    initialState: { \r\n        tabQuestions : [{\r\n            indexQuestion : 0,\r\n            enonce : \"\",\r\n            justification : \"\",\r\n            nbMaxReponses : 5,\r\n            tabReponses : [{\r\n                value : \"\",\r\n                tabUnite : [{\r\n                    abr : \" \",\r\n                    puissance : 1\r\n                }]\r\n            }]\r\n        }],\r\n        sujet : \"\",\r\n        sujetEnregistre : false,\r\n        id_auth : \"\",\r\n        image1 : \"\",\r\n        image2 : \"\"\r\n    },\r\n    reducers: {\r\n\r\n        //ajoute une réponse pour une question\r\n        //paramètre : indexQuestion\r\n        addReponse : (state, action) =>{\r\n            let indexQuestion = action.payload\r\n            let indexReponseAvantDernier = state.tabQuestions[action.payload].tabReponses.length - 1\r\n            state.tabQuestions[indexQuestion].tabReponses.push({\r\n                value : '',\r\n                tabUnite : _.cloneDeep(state.tabQuestions[indexQuestion].tabReponses[indexReponseAvantDernier].tabUnite)\r\n            })\r\n        },\r\n\r\n        //change la valeur d'une réponse pour une question\r\n        //paramètres : indexQuestion, index Réponse, valeurReponse\r\n        changeReponse : (state, action) =>{\r\n            /*const reg = '#-?[1-9]*(\\.[1-9]*)?(\\*10\\^[1-9]*)?#'\r\n            const reg = '[a-z]'\r\n            \r\n            if(value.match(reg)){\r\n                state.tabQuestions[indexQuestion].tabReponses[indexReponse].value = value\r\n            }*/\r\n\r\n            let {indexQuestion, indexReponse, value} = action.payload\r\n            if(!isNaN(value) || value==='-'){\r\n                state.tabQuestions[indexQuestion].tabReponses[indexReponse].value = value\r\n            }\r\n        },\r\n\r\n        //supprime une réponse pour une question\r\n        //paramètres : indexQuestion, index Réponse\r\n        deleteReponse : (state, action) => {\r\n            let {indexQuestion, indexReponse} = action.payload\r\n            if(state.tabQuestions[indexQuestion].tabReponses.length > 1){\r\n                state.tabQuestions[indexQuestion].tabReponses.splice(indexReponse, 1);\r\n            }\r\n        },\r\n\r\n        //change les tableaux d'unités de toutes les réponses assignées à une question\r\n        //paramètres : indexQuestion, tabUnité\r\n        changeUniteForAllReponses : (state, action) =>{\r\n            let {indexQuestion, tab} = action.payload \r\n            state.tabQuestions[indexQuestion].tabReponses.map((i) => \r\n                i.tabUnite = _.cloneDeep(tab)\r\n            )\r\n        },\r\n\r\n        //change le tableau d'unité en entier d'une réponse\r\n        //paramètres : indexQuestion, indexReponse, tabUnité\r\n        changeUniteReponses :(state, action) =>{\r\n            let {indexQuestion, indexReponse, tab} = action.payload\r\n            state.tabQuestions[indexQuestion].tabReponses[indexReponse].tabUnite = tab\r\n        },\r\n\r\n        changeJustification: (state, action) => {\r\n            state.tabQuestions[action.payload.indexQuestion].justification = action.payload.justif;\r\n        },\r\n\r\n        //change le tableau d'unités d'une réponse\r\n        //paramètres : indexQuestion, indexReponse, tabUnité\r\n        setUnite : (state, action) =>{\r\n            let {indexQuestion, indexReponse, newTab} = action.payload\r\n            state.tabQuestions[indexQuestion].tabReponses[indexReponse].tabUnite = newTab\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getSujet.fulfilled]: (state, action) => {\r\n            state.tabQuestions = []\r\n            state.sujet = action.payload.enonce;\r\n            action.payload.questions.forEach((question) => {\r\n\r\n                const reponsesTab = [];\r\n                if (question.reponse !== undefined){\r\n                    question.reponses.forEach(element => {\r\n                        reponsesTab.push({\r\n                            value : element.value,\r\n                            tabUnite : element.tabUnite\r\n                        })   \r\n                    });\r\n                } else reponsesTab.push({value : \"\", tabUnite : []});   \r\n\r\n                state.tabQuestions.push({\r\n                    indexQuestion : question.id_question,\r\n                    enonce : question.contenu,\r\n                    nbMaxReponses : 5,\r\n                    justification : \"\", //question.justification A AJOUTER !!!!\r\n                    tabReponses : reponsesTab\r\n                });\r\n            });\r\n            state.id_auth = action.payload.id_auth;\r\n            state.sujetEnregistre = true;\r\n        },\r\n        [enregistrerReponses.fulfilled] : (state) => {\r\n            state.sujetEnregistre = true;\r\n        },\r\n        [etudiantVariables.fulfilled] : (state, action) => {\r\n            let enonce = state.sujet;\r\n            action.payload.forEach(variable => {\r\n                const regx = new RegExp(\"\\\\$\\\\{\\\\s*\" + variable.nom + \"\\\\s*\\\\}\", 'g');\r\n                enonce = enonce.replaceAll(regx, variable.valeur);\r\n                state.tabQuestions.forEach(question => {\r\n                    question.enonce = question.enonce.replaceAll(regx, variable.valeur)\r\n                });\r\n            });\r\n            state.sujet = enonce;\r\n        },\r\n        [getModele3D.rejected] : (state, action) => {\r\n            //console.log(action.payload)\r\n        },\r\n        [getModele3D.fulfilled] : (state, action) => {\r\n            state.image1 = \"data:image/jpeg;base64,\" + Buffer.from(action.payload.image1).toString(\"base64\");\r\n            state.image2 = \"data:image/jpeg;base64,\" + Buffer.from(action.payload.image2).toString(\"base64\");\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addReponse, changeReponse, deleteReponse, changeUniteReponses, changeUniteForAllReponses, setUnite, changeJustification } = reponseSlice.actions;\r\n\r\n//renvoie l'ensemble d'un tableau de questions\r\nexport const selectReponses = state => state.reponse;\r\n\r\n//renvoie un bouleen pour dire si l'on peut supprimer une réponse pour une question\r\nexport const peutSupprimer = indexQuestion => state => state.reponse.tabQuestions[indexQuestion].tabReponses.length > 1;\r\n\r\nexport const selectSujetEnregistre = state => state.reponse.sujetEnregistre;\r\n\r\nexport default reponseSlice.reducer;","import React, {useRef, useState} from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport _ from \"lodash\";\r\n\r\nexport default function DebounceInput({label, typeNumber, onChange, delay, value, style, rows}) {\r\n  \r\n    const [userdata, setUserdata] = useState(value);\r\n\r\n    const sendData = (data) => onChange(data);\r\n\r\n    const delayeddata = useRef(_.debounce(e => sendData(e), delay)).current;\r\n\r\n    const onChangeIn = e => {\r\n      setUserdata(e.target.value);\r\n      delayeddata(e.target.value);\r\n    };\r\n\r\n    return (\r\n      <TextField \r\n          style={style}\r\n          multiline \r\n          rows={rows}\r\n          variant=\"outlined\" \r\n          size=\"small\" \r\n          label={label} \r\n          onChange={(e) =>{\r\n            if (typeNumber === undefined || typeNumber === false){\r\n              onChangeIn(e);\r\n            } else {\r\n              if (!isNaN(e.target.value) || e.target.value === '-') onChangeIn(e);\r\n            }\r\n          }} \r\n          value={userdata}\r\n        />\r\n    );\r\n\r\n  }","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getCategoriesFormulesAPI, addCategorieFormuleAPI } from \"../utils/api.js\";\r\n\r\nexport const getCategoriesFormules = createAsyncThunk(\r\n  \"formule/getCategoriesFormules\", \r\n  async (idModele) => {\r\n    const response = await getCategoriesFormulesAPI(idModele);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const enregistrerFormules = createAsyncThunk(\r\n  \"formule/enregistrerFormules\",\r\n  async (props) => {\r\n    const response = await addCategorieFormuleAPI(props.idModele, props.tab);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const formuleSlice = createSlice({\r\n  name: \"formule\",\r\n  initialState: {\r\n    tab: [\r\n      {\r\n        nom: \"\",\r\n        modif: true,\r\n        tabFormule: [\r\n          {\r\n            nomFormule: \"\",\r\n            formule: \"\",\r\n            modif: true,\r\n          },\r\n        ],\r\n        saveElement : {elem : null, indexCategorie : undefined, indexFormule : undefined}\r\n      },\r\n    ],\r\n    actualise: false,\r\n    enregistre: false,\r\n    changement: false\r\n  },\r\n  reducers: {\r\n    addCategorie: (state) => {\r\n      state.tab.push({\r\n        nom: \"\",\r\n        modif: true,\r\n        tabFormule: [\r\n          {\r\n            nomFormule: \"\",\r\n            formule: \"\",\r\n            modif: true,\r\n          },\r\n        ],\r\n      });\r\n      state.enregistre = false;\r\n    },\r\n    changeNom: (state, action) => {\r\n      state.tab[action.payload.index].nom = action.payload.event;\r\n      state.enregistre = false;\r\n    },\r\n    removeCategorie: (state, action) => {\r\n      state.tab.splice(action.payload, 1);\r\n      state.enregistre = false;\r\n      state.changement = true;\r\n    },\r\n    changeModifCategorie: (state, action) => {\r\n      state.tab[action.payload].modif = !state.tab[action.payload].modif;\r\n      state.enregistre = false;\r\n    },\r\n    addFormule: (state, action) => {\r\n      state.tab[action.payload].tabFormule[\r\n        state.tab[action.payload].tabFormule.length - 1\r\n      ].modif = false;\r\n      state.tab[action.payload].tabFormule.push({\r\n        nomFormule: \"\",\r\n        formule: \"\",\r\n        modif: true,\r\n      });\r\n      state.enregistre = false;\r\n    },\r\n    changeNomFormule: (state, action) => {\r\n      const { indexCategorie, indexFormule, event } = action.payload;\r\n      state.tab[indexCategorie].tabFormule[indexFormule].nomFormule = event;\r\n    },\r\n    changeFormule: (state, action) => {\r\n      const { indexCategorie, indexFormule, event } = action.payload;\r\n      state.tab[indexCategorie].tabFormule[indexFormule].formule = event;\r\n    },\r\n    changeModifFormule: (state, action) => {\r\n      const { indexCategorie, indexFormule } = action.payload;\r\n      state.tab[indexCategorie].tabFormule[indexFormule].modif = !state.tab[\r\n        indexCategorie\r\n      ].tabFormule[indexFormule].modif;\r\n      state.enregistre = false;\r\n    },\r\n    removeFormule: (state, action) => {\r\n      const { indexCategorie, indexFormule } = action.payload;\r\n      state.saveElement = {elem : state.tab[indexCategorie].tabFormule[indexFormule], indexCategorie : indexCategorie, indexFormule : indexFormule};\r\n      state.tab[indexCategorie].tabFormule.splice(indexFormule, 1);\r\n      state.enregistre = false;\r\n      state.changement = true;\r\n    },\r\n    undoFormule: (state) => {\r\n      state.tab[state.saveElement.indexCategorie].tabFormule.splice(state.saveElement.indexFormule, 0, {\r\n        nomFormule: state.saveElement.elem.nomFormule,\r\n        formule: state.saveElement.elem.formule,\r\n        modif: state.saveElement.elem.modif,\r\n      });\r\n      state.changement = true;\r\n    },\r\n    changePositionFormule: (state, action) => {\r\n      const { indexCategorie, indexFormule, up } = action.payload;\r\n      if (\r\n        (up && indexFormule > 0) ||\r\n        (!up && indexFormule < state.tab[indexCategorie].tabFormule.length - 1)\r\n      ) {\r\n        let value = up ? -1 : 1;\r\n        let save = state.tab[indexCategorie].tabFormule[indexFormule + value];\r\n        state.tab[indexCategorie].tabFormule[indexFormule + value] = state.tab[indexCategorie].tabFormule[indexFormule];\r\n        state.tab[indexCategorie].tabFormule[indexFormule] = save;\r\n      }\r\n      state.enregistre = false;\r\n      state.changement = true;\r\n    },\r\n    enregistre: (state) => {\r\n      state.enregistre = true;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getCategoriesFormules.pending]: (state) => {\r\n      state.actualise = false;\r\n    },\r\n    [getCategoriesFormules.rejected]: (state, action) => {\r\n      if (action.error.message === \"Request failed with status code 404\") {\r\n        state.tab = [\r\n          {\r\n            nom: \"\",\r\n            modif: true,\r\n            tabFormule: [\r\n              {\r\n                nomFormule: \"\",\r\n                formule: \"\",\r\n                modif: true,\r\n              },\r\n            ],\r\n          },\r\n        ];\r\n        state.actualise = true;\r\n        state.enregistre = true;\r\n        state.changement = false;\r\n      }\r\n    },\r\n    [getCategoriesFormules.fulfilled]: (state, action) => {\r\n        let array = [];\r\n        action.payload.forEach((element) => {\r\n          let tabFormule = [];\r\n          element.formules.forEach((elemForm) => {\r\n            tabFormule.push({\r\n              nomFormule: elemForm.nom,\r\n              formule: elemForm.contenu,\r\n              modif: false,\r\n            });\r\n          });\r\n          array.push({\r\n            nom: element.nom,\r\n            modif: false,\r\n            tabFormule: tabFormule,\r\n            saveTabFormule: tabFormule,\r\n          });\r\n        });\r\n        state.actualise = true;\r\n        state.enregistre = true;\r\n        state.changement = false;\r\n        state.tab = array;\r\n    },\r\n    [enregistrerFormules.fulfilled]: (state) => {\r\n      state.enregistre = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setActualise, changeNom, addCategorie, removeCategorie, changeModifCategorie, addFormule, undoFormule, changeNomFormule, changeFormule, changeModifFormule, removeFormule, changePositionFormule } = formuleSlice.actions;\r\n\r\nexport const selectCategorieFormule = (state) => state.formule.tab;\r\n\r\nexport const selectFormule = (indexCat, indexFormule) => (state) => state.formule.tab[indexCat].tabFormule[indexFormule];\r\n\r\nexport const selectActualiseFormule = (state) => state.formule.actualise;\r\n\r\nexport const selectEnregistreFormule = (state) => state.formule.enregistre;\r\n\r\nexport const selectTabCategorieLength = (state) => state.formule.tab.length;\r\n\r\nexport const selectCategorie = (index) => (state) => state.formule.tab[index];\r\n\r\nexport const selectTabFormuleLength = (index) => (state) => state.formule.tab[index].tabFormule.length;\r\n\r\nexport const selectPremiereFormule = (state) => state.formule.tab[0].tabFormule[0].nomFormule;\r\n\r\nexport const selectChangement = (state) => state.formule.changement;\r\n\r\nexport default formuleSlice.reducer;\r\n","import React from 'react';\r\nimport {Button, Typography, Fab, makeStyles} from '@material-ui/core';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport DelayInput from '../InputAwait';\r\n\r\nimport { changeNomFormule, changeFormule, changeModifFormule, changePositionFormule, selectFormule, removeFormule } from \"../../slice/FormulesSlice\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from 'clsx'\r\n\r\nconst ItemFomrule = ({indexCategorie, indexFormule, length, onRemove}) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        affichageFormule: {\r\n            display: \"flex\",\r\n        },\r\n        nomForm: {\r\n            width: \"30%\",\r\n        },\r\n        center: {\r\n            display: \"block\",\r\n            margin: \"auto\"\r\n        },\r\n        formule: {\r\n            width : \"40%\",\r\n            marginLeft : \"2%\"\r\n        },\r\n        buttonSave: {\r\n            backgroundColor : theme.palette.primary.light,\r\n        },\r\n        typoNomFormule: {\r\n            overflowWrap: \"break-word\",\r\n            width: \"30%\"\r\n        },\r\n        typoFormule: {\r\n            overflowWrap: \"break-word\",\r\n            width : \"40%\",\r\n            marginLeft : \"2%\"\r\n        },\r\n        buttonModif: {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        containerFormules: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"0.5fr 3.5fr 2fr 0.75fr 0.75fr\",\r\n            gridTemplateRows: \"1fr\",\r\n            gap: \"0px 15px\",\r\n            margin: \"0px 1% 3%\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                gridTemplateColumns: \"0.5fr 3.5fr 2fr\",\r\n                gap: \"0, 10px\"\r\n            }\r\n        },\r\n        fabDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n                \"&:hover\": {\r\n                    backgroundColor: theme.palette.error.dark\r\n                },\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const matches = useMediaQuery('(min-width:960px)');\r\n\r\n    const item = useSelector(selectFormule(indexCategorie, indexFormule));\r\n\r\n    const changeModif = () =>{\r\n        dispatch(changeModifFormule({indexCategorie : indexCategorie, indexFormule : indexFormule}))\r\n    }\r\n\r\n    const field = () => {\r\n        return(\r\n            <>\r\n                <div className={classes.affichageFormule}>\r\n                    <DelayInput\r\n                        label=\"Nom formule\"\r\n                        delay={300}\r\n                        value={item.nomFormule}\r\n                        onChange={e => dispatch(changeNomFormule({indexCategorie :indexCategorie, indexFormule : indexFormule, event : e}))} \r\n                    />\r\n                    <ArrowForwardIcon className={classes.center} />\r\n                    <DelayInput\r\n                        label=\"Formule\"\r\n                        delay={250}\r\n                        value={item.formule}\r\n                        onChange={e => dispatch(changeFormule({indexCategorie : indexCategorie, indexFormule : indexFormule, event : e}))}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    className={clsx(classes.buttonSave, classes.center)}\r\n                    variant=\"contained\"\r\n                    onClick={() => changeModif()}\r\n                    disabled={item.nomFormule === \"\" || item.formule === \"\"}\r\n                >\r\n                    Enregistrer\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const txt = () =>{\r\n        return (\r\n            <>\r\n                <div className={classes.affichageFormule}>\r\n                    <Typography className={clsx(classes.typoNomFormule, classes.center)}>{item.nomFormule}</Typography>\r\n                    <ArrowForwardIcon className={classes.center} />\r\n                    <Typography className={clsx(classes.typoFormule, classes.center)}>{item.formule}</Typography>\r\n                </div>\r\n                <Button\r\n                    className={clsx(classes.buttonModif, classes.center)}\r\n                    variant=\"contained\"\r\n                    onClick={() => changeModif()}\r\n                >\r\n                    Modifier\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerFormules}>\r\n\r\n            <Fab\r\n                className={clsx(classes.fabDelete, classes.center)}\r\n                disabled={length === 1}\r\n                size=\"small\"\r\n                aria-label=\"add\"\r\n                onClick={() => {\r\n                    dispatch(removeFormule({indexCategorie : indexCategorie, indexFormule : indexFormule}));\r\n                    onRemove();\r\n                }}\r\n            >\r\n                <DeleteIcon className={classes.center}/>\r\n            </Fab>\r\n\r\n            {item.modif ? field() : txt()}\r\n\r\n            {matches ?\r\n                <>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        variant='extended'\r\n                        size='small'\r\n                        onClick={e => dispatch(changePositionFormule({indexCategorie :indexCategorie, indexFormule : indexFormule, up : true}))}\r\n                    >\r\n                        <ArrowUpwardIcon/>\r\n                    </Fab>\r\n                    <Fab color=\"primary\"\r\n                        variant='extended'\r\n                        size='small'\r\n                        onClick={() => dispatch(changePositionFormule({indexCategorie : indexCategorie, indexFormule : indexFormule, up : false}))}\r\n                    >\r\n                        <ArrowDownwardIcon/>\r\n                    </Fab>\r\n                </>\r\n                : null}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(ItemFomrule);","import React from 'react';\r\nimport {Button, Snackbar, IconButton, makeStyles} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//open : dire l'état du pop up (ouvert ou fermé)\r\n//handleClose : actiona  faire lors de la fermeture (fonction)\r\n//actionName : nom de l'action (par exemple undo), si vide, pas d'action\r\n//si actionName, action = action a réaliser (fonction)\r\n//pos : position, si vide, à guauche par default\r\n//message : message a afficher dans la pop up\r\nexport default function PopUp({open, handleClose, actionName, severity, pos, action, message, disabled}) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        snackbar: {\r\n            zIndex : 10\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n    <div>\r\n      <Snackbar\r\n        className={classes.snackbar}\r\n        anchorOrigin={{vertical: 'bottom', horizontal: pos !== undefined ? pos : \"left\"}}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose} \r\n      >\r\n        <Alert onClose={handleClose} severity={severity} \r\n          action={(actionName !== null) \r\n              ? <Button disabled={disabled === null ? false : disabled} color=\"primary\" onClick={() => action()}>{actionName}</Button> \r\n              : <IconButton color=\"inherit\" size=\"small\" onClick={() => handleClose()}>\r\n                  <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React, {useCallback, useState} from 'react';\r\nimport {Button, makeStyles} from '@material-ui/core';\r\n\r\nimport Item from './ItemFormule'\r\nimport PopUp from '../PopUp'\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addFormule, undoFormule } from \"../../slice/FormulesSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTabFormuleLength } from \"../../slice/FormulesSlice\"\r\n\r\nconst TodoListFormule = ({ indexCategorie }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonAjouterFormule: {\r\n            display : \"block\",\r\n            margin: \"6% auto 0 auto\",\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [openPopUpSave, setOpenPopUpSave] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const tabFormuleLength = useSelector(selectTabFormuleLength(indexCategorie))\r\n\r\n    const undo = () =>{\r\n        dispatch(undoFormule())\r\n        setOpenPopUpSave(false);\r\n     }\r\n\r\n     const ajout = useCallback(() => {\r\n        dispatch(addFormule(indexCategorie));\r\n     }, [dispatch, indexCategorie]);\r\n\r\n    return (\r\n        <div>\r\n             {Array(tabFormuleLength).fill(0).map((_, index) => (\r\n                    <Item onRemove={() => setOpenPopUpSave(true)} indexFormule={index} length={tabFormuleLength} key={index} indexCategorie={indexCategorie}/>\r\n                ))}\r\n             <Button \r\n                className={classes.buttonAjouterFormule}\r\n                disabled={tabFormuleLength >= 20}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => ajout()}\r\n            >\r\n                    Ajouter des formules\r\n            </Button>\r\n             <PopUp \r\n                message=\"Formule supprimée\" \r\n                actionName=\"RETOUR\" \r\n                action={() => undo()} \r\n                open={openPopUpSave} \r\n                handleClose={() => setOpenPopUpSave(false)}\r\n                pos=\"right\"\r\n            />\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default React.memo(TodoListFormule);","import React, {useCallback, useState} from 'react';\r\nimport {\r\n    Button,\r\n    Fab,\r\n    Typography,\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    makeStyles,\r\n    Dialog, \r\n    DialogActions, \r\n    DialogContent, \r\n    DialogContentText,\r\n    DialogTitle\r\n} from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport DelayInput from '../InputAwait';\r\nimport TodoListFormule from './TodoListFormule';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeModifCategorie, changeNom, removeCategorie, selectCategorie } from \"../../slice/FormulesSlice\";\r\n\r\nconst ItemCategorie = ({index, length}) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        fieldNomCategorie: {\r\n            width : \"30%\",\r\n        },\r\n        textNomCategorie: {\r\n            width : \"30%\",\r\n            marginTop : \"8px\"\r\n        },\r\n        fabModif: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        divItemAccordeon: {\r\n            display: \"block\",\r\n            margin: \"0 auto 2% auto\",\r\n            width: \"70%\",\r\n            minWidth: \"420px\",\r\n            borderRadius: \"3px\",\r\n            padding: \"2% 3%\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\"\r\n        },\r\n        enteteItemAccordeon: {\r\n            display : \"flex\",\r\n            justifyContent : \"space-between\"\r\n        },\r\n        buttonDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        },\r\n        accordion: {\r\n            marginTop : 15\r\n        },\r\n        accordionDetails: {\r\n            display : \"flex\",\r\n            flexDirection : \"column\"\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const item = useSelector(selectCategorie(index));\r\n\r\n    const change = useCallback(() => {\r\n        dispatch(changeModifCategorie(index));\r\n    }, [dispatch, index]);\r\n\r\n    const remove = useCallback(() => {\r\n        setOpen(false);\r\n        if (open) dispatch(removeCategorie(index)); \r\n    }, [dispatch, index, open]);\r\n\r\n    //Quand les champs sont a remplir\r\n    const field = () => {\r\n        return (\r\n            <>\r\n                <DelayInput\r\n                    label=\"Nom Catégorie\"\r\n                    delayTimeout={250}\r\n                    value={item.nom}\r\n                    onChange={e => dispatch(changeNom({index : index, event : e}))} \r\n                />\r\n                <Fab \r\n                    disabled={item.nom === \"\"} \r\n                    size=\"small\" \r\n                    color=\"primary\" \r\n                    aria-label=\"add\" \r\n                    onClick={() => change()}\r\n                >\r\n                    <SaveIcon/>\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n\r\n    //Quand les champs sont enregistrés\r\n    const txt = () =>{\r\n        return (\r\n            <>\r\n                <Typography className={classes.textNomCategorie}>{item.nom}</Typography>\r\n                <Fab className={classes.fabModif}\r\n                    size=\"small\" \r\n                    aria-label=\"add\"\r\n                    onClick={() => change()}\r\n                >\r\n                    <CreateIcon/>\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.divItemAccordeon}>\r\n\r\n            <div className={classes.enteteItemAccordeon}>\r\n                {item.modif ? field() : txt()}    \r\n                <Button className={classes.buttonDelete}\r\n                    disabled={length === 1} \r\n                    variant=\"contained\"\r\n                    onClick={e => setOpen(true)}\r\n                >\r\n                    Supprimer la catégorie\r\n                </Button>\r\n                <Dialog open={open} onClose={() => setOpen(false)}>\r\n                    <DialogTitle>Suppression</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Voulez-vous vraiment supprimer la catégorie ?</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpen(false)} color=\"primary\">Annuler</Button>\r\n                        <Button onClick={() => remove()} color=\"primary\" autoFocus>OK</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\r\n            <Accordion className={classes.accordion} square expanded={expanded} onChange={() =>setExpanded(!expanded)}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}/>\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n                    <TodoListFormule indexCategorie={index}/>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(ItemCategorie);","import { useState } from \"react\";\r\n\r\nexport default function useConstructor (initializer){\r\n    useState(initializer)\r\n}","import { useEffect} from 'react'\r\n\r\nexport default function useUnload(active) {\r\n    \r\n    useEffect(() => {\r\n\r\n        const handleBeforeUnload = event => {\r\n            if (active) event.preventDefault(); \r\n        }\r\n\r\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n        return () =>  window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    }, [active]);\r\n\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addVariableAPI, getVariablesAPI } from \"../utils/api.js\";\r\n\r\nexport const getAllVariables = createAsyncThunk(\r\n  \"variable/getAllVariables\",\r\n  async (idModele) => {\r\n    const response = await getVariablesAPI(idModele);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const setVariables = createAsyncThunk(\r\n  \"variable/setVariables\",\r\n  async (variable) => {\r\n    const response = await addVariableAPI(variable.idModele, variable.tab);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const variablesAleatoiresReducer = createSlice({\r\n  name: \"variableAleatoire\",\r\n  initialState: {\r\n    tab: [\r\n      {\r\n        nom: \"\",\r\n        min: 0,\r\n        max: 0,\r\n        precision: 0,\r\n        modif: true,\r\n      },\r\n    ],\r\n    saveElement : {elem : null, index : undefined},\r\n    actualise: false,\r\n    enregistre: false,\r\n  },\r\n  reducers: {\r\n    addVariable: (state) => {\r\n      state.tab.push({\r\n        nom: \"\",\r\n        min: 0,\r\n        max: 0,\r\n        precision: 0,\r\n        modif: true\r\n      });\r\n      state.enregistre = false;\r\n    },\r\n    changeNom: (state, action) => {\r\n      state.tab[action.payload.index].nom = action.payload.event;\r\n    },\r\n    changeMin: (state, action) => {\r\n      state.tab[action.payload.index].min = action.payload.event;\r\n    },\r\n    changeMax: (state, action) => {\r\n      state.tab[action.payload.index].max = action.payload.event;\r\n    },\r\n    removeVariable: (state, action) => {\r\n      if (state.tab.length > 1) {\r\n        state.saveElement = {elem : state.tab[action.payload], index : action.payload};\r\n        state.tab.splice(action.payload, 1);\r\n        state.enregistre = false;\r\n      }\r\n    },\r\n    changeModif: (state, action) => {\r\n      state.tab[action.payload].modif = !state.tab[action.payload].modif;\r\n      state.enregistre = false;\r\n    },\r\n    changePrecision: (state, action) => {\r\n      state.tab[action.payload.index].precision = action.payload.precision;\r\n    },\r\n    undoVariable: (state) =>{\r\n      state.tab.splice(state.saveElement.index, 0, {\r\n          nom : state.saveElement.elem.nom,\r\n          min : state.saveElement.elem.min, \r\n          max : state.saveElement.elem.max, \r\n          precision : state.saveElement.elem.precision,\r\n          modif : state.saveElement.elem.modif\r\n         });\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getAllVariables.pending]: (state) => {\r\n      state.actualise = false;\r\n    },\r\n    [getAllVariables.rejected]: (state, action) => {\r\n      if (action.error.message === \"Request failed with status code 404\") {\r\n        state.tab = [\r\n          {\r\n            nom: \"\",\r\n            min: 0,\r\n            max: 0,\r\n            precision: 0,\r\n            modif: true,\r\n          },\r\n        ];\r\n        state.actualise = true;\r\n        state.enregistre = true;\r\n      }\r\n    },\r\n    [getAllVariables.fulfilled]: (state, action) => {\r\n        let array = [];\r\n        action.payload.forEach((element) => {\r\n          array.push({\r\n            nom: element.nom,\r\n            min: element.min,\r\n            max: element.max,\r\n            precision: element.precision,\r\n            modif: false,\r\n          });\r\n        });\r\n        state.actualise = true;\r\n        state.enregistre = true;\r\n        state.tab = array;\r\n    },\r\n    [setVariables.fulfilled]: (state) => {\r\n      state.enregistre = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addVariable,\r\n  changeNom,\r\n  removeVariable,\r\n  changeModif,\r\n  changePrecision,\r\n  changeMin,\r\n  changeMax,\r\n  undoVariable,\r\n} = variablesAleatoiresReducer.actions;\r\n\r\nexport const selectVariablesAleatoires = (state) => state.variableAleatoire.tab;\r\n\r\nexport const selectActualise = (state) => state.variableAleatoire.actualise;\r\n\r\nexport const selectPrecision = (index) => (state) => state.variableAleatoire.tab[index].precision;\r\n\r\nexport const selectEnregistreVariable = (state) => state.variableAleatoire.enregistre;\r\n\r\nexport const selectTabLength = (state) => state.variableAleatoire.tab.length;\r\n\r\nexport const selectElement = (index) => (state) => state.variableAleatoire.tab[index];\r\n\r\nexport default variablesAleatoiresReducer.reducer;\r\n","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\nimport { getSujetAPI, setQuestionsAPI } from \"../utils/api.js\";\r\n\r\nexport const getSujet = createAsyncThunk(\r\n    \"enonce/getSujet\",\r\n    async (idModele) => {\r\n        const response = await getSujetAPI(idModele);\r\n        return response.data;\r\n    }\r\n);\r\n\r\nexport const setQuestions = createAsyncThunk(\r\n    \"enonce/setQuestions\",\r\n    async (props) => {\r\n        const response = await setQuestionsAPI(props.idModele, props.enonce, props.tabQuestions);\r\n        return response.data;\r\n    }\r\n);\r\n\r\nexport const enoncesReducer = createSlice({\r\n    name: \"enonce\",\r\n    initialState: {\r\n        enonceContenu : \"\",\r\n        question: [{\r\n            contenu: undefined,\r\n            reponse: [{\r\n                selectCat : \"\",\r\n                selectForm: \"\",\r\n                margeErreur : 5,\r\n                unite: [{\r\n                    abr : \" \", \r\n                    puissance : 1 \r\n                }],\r\n            }],\r\n        }],\r\n        actualise: false,\r\n        enregistre: false\r\n    },\r\n    reducers: {\r\n        addQuestion: (state, action) => {\r\n            state.question.push({\r\n                contenu: \"\",\r\n                reponse: [{\r\n                    selectCat : 0,\r\n                    selectForm: action.payload,\r\n                    margeErreur : 5,\r\n                    unite: [{\r\n                        abr : \" \", \r\n                        puissance : 1 \r\n                    }],\r\n                }],\r\n            });\r\n        },\r\n        removeQuestion: (state, action) => {\r\n            state.question.splice(action.payload, 1);\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeQuestion: (state, action) => {\r\n            state.question[action.payload.index].contenu = action.payload.contenu;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeSelect: (state, action) => {\r\n            state.question[action.payload.index].reponse = action.payload.reponse;\r\n            state.enregistre = false;\r\n\r\n        },\r\n        handleChangeUnite: (state, action) => {\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].unite = action.payload.tabUnite;\r\n            state.enregistre = false;\r\n        },\r\n        addReponse : (state, action) => {\r\n            state.question[action.payload.id].reponse.push({\r\n                selectCat : 0,\r\n                selectForm: action.payload.formule1,\r\n                margeErreur : 5,\r\n                unite: [{abr : \" \", puissance : 1 }],\r\n            });\r\n            state.enregistre = false;\r\n        },\r\n        enregistre: (state) => {\r\n            state.enregistre = true;\r\n        },\r\n        handleChangeCat: (state, action) =>{\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectCat = action.payload.value;\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectForm = action.payload.formule1;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeForm: (state, action) => {\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectForm = action.payload.value;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeMargeErreur: (state, action) =>{\r\n            state.question[action.payload.indexQuestion].reponse[action.payload.indexReponse].margeErreur = action.payload.marge;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeEnonce: (state, action) => {\r\n            state.enonceContenu = action.payload;\r\n            state.enregistre = false;\r\n        },\r\n        removeReponse: (state, action) => {\r\n            state.question[action.payload.indexQuestion].reponse.splice(action.payload.indexReponse, 1);\r\n            state.enregistre = false;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getSujet.pending]: (state) => {\r\n            state.actualise = false;\r\n        },\r\n        [getSujet.rejected]: (state) => {\r\n            state.enonceContenu = \"\";\r\n            state.question = [{\r\n                contenu: \"\",\r\n                reponse: [{\r\n                    selectCat : \"\",\r\n                    selectForm: \"\",\r\n                    margeErreur : 5,\r\n                    unite: [{abr : \" \", puissance : 1 }],\r\n                }],\r\n            }];\r\n            state.actualise = true;\r\n            state.enregistre = true;\r\n        },\r\n        [getSujet.fulfilled]: (state, action) => {\r\n            let question = [];\r\n            state.enonceContenu = action.payload.enonce;\r\n            action.payload.questions.forEach(element => {\r\n                let reponse = [];\r\n                element.reponses.forEach(elem => {\r\n                    reponse.push({ \r\n                        selectCat : elem.selectCat,\r\n                        selectForm: elem.selectForm,\r\n                        margeErreur : elem.margeErreur,\r\n                        unite: elem.unite\r\n                    });\r\n                });\r\n                question.push({contenu : element.contenu, reponse : reponse});\r\n            });\r\n            state.question = question;\r\n            state.actualise = true;\r\n            state.enregistre = true;\r\n        },\r\n        [setQuestions.fulfilled]: (state) => {\r\n            state.enregistre = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { handleChangeEnonce, removeReponse, handleChangeMargeErreur, addQuestion, removeQuestion, handleChangeQuestion, handleChangeSelect, addReponse, handleChangeUnite, handleChangeCat, handleChangeForm } = enoncesReducer.actions\r\n\r\nexport const selectEnonce = (state) => state.enonce;\r\n\r\nexport const selectTabReponse = (index) => (state) => state.enonce.question[index].reponse; \r\n\r\nexport const selectActualiseEnonce = (state) => state.enonce.actualise;\r\n\r\nexport const selectEnregistreEnonce = (state) => state.enonce.enregistre;\r\n\r\nexport const selectMargeErreur = (indexQuestion, indexReponse) => (state) => state.enonce.question[indexQuestion].reponse[indexReponse].margeErreur;\r\n\r\nexport const selectTabQuestionLength = (state) => state.enonce.question.length;\r\n\r\nexport const selectContenuEnonce = (state) => state.enonce.enonceContenu;\r\n\r\nexport const selectQuestion = (index) => (state) => state.enonce.question[index].contenu;\r\n\r\nexport const selectReponse = (indexQuestion, indexReponse) => (state) => state.enonce.question[indexQuestion].reponse[indexReponse];\r\n\r\nexport const selectReponseLength = (index) => (state) => state.enonce.question[index].reponse.length;\r\n\r\nexport default enoncesReducer.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addUniteAPI, getAllUniteAPI } from \"../utils/api.js\";\r\nimport _ from \"lodash\"\r\n\r\nexport const getAllUnite = createAsyncThunk(\"unite/getAllUnite\", async () => {\r\n  const response = await getAllUniteAPI();\r\n  return response.data;\r\n});\r\n\r\nexport const enregistreUnites = createAsyncThunk(\"unite/addunite\", async (tabUnites) => {\r\n  const response = await addUniteAPI(tabUnites);\r\n  return response.data;\r\n});\r\n\r\nexport const uniteSlice = createSlice({\r\n  name: \"unite\",\r\n  initialState: {\r\n    tabUnites: []\r\n    // [{\r\n    //   nom : undefined,\r\n    //   abrev : undefined,\r\n    // }]\r\n    ,\r\n    indexEnModif : -1, //l'index de l'unité qui est en modif (-1 coorespond à aucune unité en modif)\r\n    actualise : false, //indique si l'importation des données est terminée\r\n    enregistre : false\r\n  },\r\n  reducers: {\r\n    //ajoute une unité dans le tableau Unité (ATTENTION : n'enregistre pas dans la BD)\r\n    //paramètres : nomComplet de l'unité, abréviation\r\n    addUnite : (state) =>{\r\n      let index = state.tabUnites.push({\r\n        nom : \"\",\r\n        abrev : \"\"\r\n      })\r\n      state.indexEnModif = index - 1\r\n      state.enregistre = false\r\n    },\r\n    //change le nom complet d'une unité\r\n    //paramètres : nom complet de l'unité et index\r\n    changeNomComplet : (state, action) =>{\r\n      let {index, value} = action.payload\r\n      state.tabUnites[index].nom = value\r\n      state.enregistre = false\r\n    },\r\n    //change l'abréviation d'une unité\r\n    //paramètres : abréviation de l'unité et index\r\n    changeAbreviation : (state, action) =>{\r\n      let {index, value} = action.payload\r\n      state.tabUnites[index].abrev = value\r\n      state.enregistre = false\r\n    },\r\n    //supprime l'unité dans le tableau\r\n    //paramètres : index\r\n    deleteUnite : (state, action) =>{\r\n      let index = action.payload\r\n      state.indexEnModif = -1\r\n      state.enregistre = false     \r\n      state.tabUnites.splice(index, 1)\r\n    },\r\n    setIndexEnModif : (state, action) =>{\r\n      state.indexEnModif = action.payload\r\n    },\r\n    setEnregistre : (state, action) =>{\r\n      state.enregistre = action.payload\r\n    },\r\n    setTest : (state) =>{\r\n      state.tabUnites = [\r\n        {nom : \"Sans Unité\", abrev : \" \"},\r\n        {nom : \"Gramme\", abrev : \"g\"},\r\n        {nom : \"Newton\", abrev : \"N\"}\r\n      ]\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getAllUnite.fulfilled]: (state, action) => {\r\n      state.tabUnites = []\r\n      const sansUnite = _.remove(action.payload, function(o) {\r\n        return o.nom === \"Sans Unité\"\r\n      });\r\n\r\n      state.tabUnites.push(sansUnite[0])\r\n\r\n      action.payload.forEach(unite => {\r\n        state.tabUnites.push({\r\n          nom : unite.nom,\r\n          abrev : unite.abrev\r\n        })\r\n      });\r\n      state.actualise = true\r\n      state.enregistre = true;\r\n    },\r\n    [getAllUnite.pending]: (state, action) => {\r\n      state.actualise = false\r\n    },\r\n    [enregistreUnites.fulfilled]: (state, action) => {\r\n      state.indexEnModif = -1\r\n      state.enregistre = true\r\n    },\r\n    [enregistreUnites.pending]: (state, action) => {\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setTest, addUnite, changeNomComplet, changeAbreviation, deleteUnite, setIndexEnModif, setEnregistre } = uniteSlice.actions;\r\n\r\nexport const selectUnites = (state) => state.unite.tabUnites;\r\n\r\nexport const selectActualise = (state) => state.unite.actualise;\r\n\r\nexport const selectIndexEnMofid = (state) => state.unite.indexEnModif;\r\n\r\nexport const selectEnregistreUnite = (state) => state.unite.enregistre;\r\n\r\nexport default uniteSlice.reducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nimport { getAllModeleAPI, deleteModeleAPI, addModeleAPI } from \"../utils/api.js\";\r\n\r\nexport const getModele = createAsyncThunk(\"modele/getAllModele\", async () => {\r\n  const response = await getAllModeleAPI();\r\n  return response.data;\r\n});\r\n\r\nexport const removeModele = createAsyncThunk(\r\n  \"modele/removeModele\",\r\n  async (idModele) => {\r\n    const response = await deleteModeleAPI(idModele);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const addNewModele = createAsyncThunk(\"modele/new\", async (nom) => {\r\n  const response = await addModeleAPI(nom);\r\n  return response.data;\r\n});\r\n\r\nlet myStorage = window.localStorage;\r\n\r\nexport const modeleSlice = createSlice({\r\n  name: \"modele\",\r\n  initialState: {\r\n    tabName: [],\r\n    idModeleSelectionne: myStorage.getItem(\"modele\"),\r\n    actualise: false\r\n  },\r\n  reducers: {\r\n    selectionnerModele: (state, action) => {\r\n      state.idModeleSelectionne = action.payload;\r\n      myStorage.setItem(\"modele\", action.payload);\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getModele.rejected]: (state) => {\r\n      state.actualise = true; \r\n    },\r\n    [getModele.fulfilled]: (state, action) => {\r\n      if (!state.actualise) {\r\n        let array = action.payload;\r\n        array.forEach((element) => {\r\n          state.tabName[element.id_modele] = {\r\n            nom: element.nom_modele,\r\n            index: element.id_modele\r\n          };\r\n        });\r\n        state.actualise = true;\r\n        state.chargementSuppression = false;\r\n      }\r\n    },\r\n    [removeModele.pending]: (state, action) => {\r\n      state.tabName.splice(action.meta.arg, 1);\r\n    },\r\n    [addNewModele.fulfilled]: (state, action) => {\r\n      state.tabName[action.payload.insertId] = {\r\n        nom: action.meta.arg,\r\n        index: action.payload.insertId,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { selectionnerModele } = modeleSlice.actions;\r\n\r\nexport const selectModele = (state) => state.modele;\r\n\r\nexport const selectActualise = (state) => state.modele.actualise;\r\n\r\nexport const selectChargementSupp = (state) => state.modele.chargementSuppression;\r\n\r\nexport const selectIdModeleSelectionne = (state) => state.modele.idModeleSelectionne;\r\n\r\nexport const selectModeleActuel = (state) => state.modele.tabName[state.modele.idModeleSelectionne];\r\n\r\nexport default modeleSlice.reducer;\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    InputLabel,\r\n    DialogContentText,\r\n    Input,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    TextField,\r\n    Fab,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategoriesFormules } from \"../slice/FormulesSlice\";\r\nimport { getAllVariables } from \"../slice/VariablesAleatoiresSlice\"\r\nimport { getSujet } from \"../slice/EnoncesSlice\";\r\nimport { getAllUnite } from '../slice/UniteSlice';\r\nimport { selectionnerModele, addNewModele, removeModele, selectModele, selectActualise} from \"../slice/ModeleSlice\";\r\n\r\n//setClose pour fermer la PopUp (fonction)\r\n//open pour connaitre l'état de la pop u (ouvert ou fermé)\r\n//tard pour savoir si on autorise a selectionner plus tard le modèle\r\nconst SelectionModele = ({setClose, open, tard}) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divNouveauModele: {\r\n            display : \"grid\",\r\n            gridTemplateColumns : \"80% 20%\",\r\n            gridGap : \"7%\",\r\n            marginTop : 30\r\n        },\r\n        fabAdd: {\r\n            marginLeft : \"5%\"\r\n        },\r\n        form: {\r\n            display : \"flex\",\r\n            justifyContent : \"center\",\r\n            marginBottom : 20\r\n        },\r\n        divSelectModele: {\r\n            display : \"grid\",\r\n            gridTemplateColumns : \"80% 20%\",\r\n            gridGap : \"7%\",\r\n            marginTop : 15\r\n        },\r\n        selectModele: {\r\n            width : 200\r\n        },\r\n        menuItem: {\r\n            color : theme.palette.primary.main\r\n        },\r\n        fabDelete: {\r\n            margin: \"5%\",\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        },\r\n        dialogActions: {\r\n            marginBottom:\"3%\",\r\n            justifyContent : \"space-around\"\r\n        },\r\n        buttonLater: {\r\n            backgroundColor: theme.palette.primary.light\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const modele = useSelector(selectModele);\r\n    const actualise = useSelector(selectActualise);\r\n\r\n    const [select, setSelect] = useState(modele.idModeleSelectionne === null ? \"\" : modele.idModeleSelectionne);\r\n    const [nouveauModele, setNouveauModele] = useState({etat : false, nom : \"\", error : false});\r\n    const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setSelect(event.target.value);\r\n        event.target.value === \"Créer nouveau modèle\" \r\n            ? setNouveauModele({etat : true, nom : nouveauModele.nom, error : false}) \r\n            : setNouveauModele({etat : false, nom : nouveauModele.nom, error : false});\r\n    };\r\n\r\n    const choisirModele = () => {\r\n        console.log(select)\r\n        if (select !== modele.idModeleSelectionne) { // Le toString ne fonctionne pas ici (voir si cela pose probleme mais fix l'erreur fatal temporairement)\r\n            dispatch(selectionnerModele(select));\r\n            dispatch(getCategoriesFormules(select));\r\n            dispatch(getAllVariables(select));\r\n            dispatch(getSujet(select));\r\n            dispatch(getAllUnite());\r\n        }\r\n        setClose();\r\n    }\r\n\r\n    const onChangeNouveauModele = (e) => {\r\n        setNouveauModele({etat : true, nom : e.target.value, error : false})\r\n    }\r\n\r\n    const addNouveauModele = () => {\r\n        if (modele.tabName.includes(nouveauModele.nom)){\r\n            setNouveauModele({etat : true, nom : nouveauModele.nom, error : true})\r\n        } else {\r\n            dispatch(addNewModele(nouveauModele.nom));\r\n            setNouveauModele({etat : true, nom : \"\", error : false})\r\n        }\r\n    }\r\n\r\n    const displayNouveauModele = () => {\r\n        return (\r\n            nouveauModele.etat \r\n            ? <div className={classes.divNouveauModele}>\r\n                <TextField autoFocus size=\"small\" label=\"Nom du modèle\" variant=\"outlined\" required \r\n                    error={nouveauModele.error} \r\n                    value={nouveauModele.nom} \r\n                    onChange={e => onChangeNouveauModele(e)}\r\n                />\r\n                <Fab className={classes.fabAdd}\r\n                    size=\"small\" color=\"primary\" aria-label=\"add\" \r\n                    disabled={nouveauModele.nom === \"\" ? true : false} \r\n                    onClick={() => addNouveauModele()}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n            : null\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={() => setClose()}>\r\n            <DialogTitle>Selection du modèle de sujet</DialogTitle>\r\n            <DialogContent>\r\n            <form className={classes.form}>\r\n                <FormControl>\r\n                <InputLabel>Modèle</InputLabel>\r\n                <div className={classes.divSelectModele}>\r\n                    <Select className={classes.selectModele} value={select} onChange={handleChange} input={<Input/>}>\r\n                    <MenuItem className={classes.menuItem} value=\"Créer nouveau modèle\">Créer nouveau modèle</MenuItem>\r\n                    {!actualise ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{margin : \"30px auto\", display : \"flex\", justifyContent : \"center\"}}/> : modele.tabName.map(item => <MenuItem key={item.index} value={item.index}>{item.nom}</MenuItem>)}\r\n                    </Select>\r\n                    <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\"\r\n                        disabled={select === \"\" || nouveauModele.etat}\r\n                        onClick={() => setOpenConfirm(true)}\r\n                    >\r\n                        <DeleteIcon/>\r\n                    </Fab>\r\n                </div>\r\n                {displayNouveauModele()}\r\n                </FormControl>\r\n            </form>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogActions}>\r\n            {tard ? <Button className={classes.buttonLater} variant=\"contained\" onClick={() => setClose()}>Choisir plus tard</Button> : null}\r\n            <Button disabled={select === \"\" || select === \"Créer nouveau modèle\" ? true : false} onClick={e => choisirModele()} variant=\"contained\" color=\"primary\">Ok</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        <Dialog open={openConfirm} onClose={() => setOpenConfirm(false)}>\r\n            <DialogTitle>Suppression</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>Voulez-vous vraiment supprimer ce modèle ?</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => setOpenConfirm(false)} color=\"primary\">Annuler</Button>\r\n                <Button onClick={() => dispatch(removeModele(select))} disabled={select === \"\"} color=\"primary\" autoFocus>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(SelectionModele);","import React, {useState, useCallback, useEffect} from 'react';\r\nimport {Dialog, DialogTitle, DialogContentText, DialogActions, DialogContent, Button } from '@material-ui/core';\r\n\r\nimport { getModelPromoAPI, desatributionSujetAPI } from \"../utils/api\";\r\n\r\nimport PopUp from './PopUp';\r\nimport useKeyPress from './use/useKeyPressCtrlS';\r\nimport useUnload from './use/useUnload';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Enregistrement = ({isEnregistre, action, disabled}) => {\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(true);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [listePromo, setListePromo] = useState([])\r\n\r\n    const dispatch = useDispatch();\r\n    const touche = useKeyPress();\r\n\r\n    //ne pas quitter la page si pas enregistré dans la BD\r\n    useUnload(!isEnregistre);\r\n\r\n    useEffect(() => setOpenPopUp(true), [isEnregistre]);\r\n\r\n    const envoyer = useCallback (() => {\r\n        if (!isEnregistre && !disabled){\r\n            dispatch(action)\r\n            .then((e) => {\r\n                if (e.meta.requestStatus === \"rejected\"){\r\n                     if (e.error.message === \"Request failed with status code 405\"){\r\n                        if (listePromo.length === 0){\r\n                            getModelPromoAPI()\r\n                            .then((e) => {\r\n                                setListePromo(e.data);\r\n                            })\r\n                        }\r\n                        setOpenDialog(true);\r\n                     } \r\n                } \r\n            })\r\n        }\r\n    }, [dispatch, action, isEnregistre, disabled, listePromo]);\r\n\r\n    const suppAsso = (e) => {\r\n        desatributionSujetAPI(e.id_promo).then((e) => {\r\n            console.log(\"reussi !\");\r\n        });\r\n        let tempTab = [...listePromo];\r\n        tempTab.splice(listePromo.indexOf(e), 1);\r\n        setListePromo(tempTab);\r\n    }\r\n        \r\n    useEffect(() => {\r\n        if (touche){\r\n            envoyer();\r\n        }\r\n    }, [touche, envoyer]); //ne pas ajouter envoyer ! sinon ca ne marche plus\r\n\r\n     return (\r\n         <>\r\n            <PopUp\r\n                severity={isEnregistre ? \"success\" : \"warning\"}\r\n                message={isEnregistre ? \"Enregistré\" : \"Enregistrer les modifications\"}\r\n                actionName={isEnregistre ? null : \"Enregistrer\"}\r\n                action={() => {if (!isEnregistre) envoyer()}}\r\n                disabled={disabled}\r\n                open={openPopUp}\r\n                handleClose={() => {if (isEnregistre) setOpenPopUp(false)}}\r\n                pos=\"left\"\r\n            />\r\n            <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n                <DialogTitle>Attention</DialogTitle>\r\n                <DialogContent>\r\n                      <DialogContentText>Après vérification, le sujet que vous voulez modifier est déja associé à une architecture, que voulez-vous faire ?</DialogContentText>\r\n                     {listePromo.map((e, index) => (\r\n                        <div key={index} style={{display : \"flex\"}}>\r\n                            <p style={{margin : \"auto 0\"}}>{e.nom_promo}</p>\r\n                            <Button onClick={() => suppAsso(e)} size=\"small\" variant=\"contained\" style={{marginLeft : 20}}>Supprimer l'association</Button>\r\n                        </div>\r\n                     ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)} color=\"primary\">Abandonner</Button>\r\n                    <Button onClick={() => {\r\n                        envoyer(); \r\n                        setOpenDialog(false);\r\n                    }} disabled={listePromo.length > 0} color=\"primary\" autoFocus>Enregistrer</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n         </>\r\n     )\r\n}\r\n\r\nexport default React.memo(Enregistrement);","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKeyPress() {\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    const downHandler = (e) => {\r\n        if ((window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) && e.keyCode === 83){\r\n            e.preventDefault();\r\n            setKeyPressed(true);\r\n            setInterval(() => {setKeyPressed(false)}, 500); //car si on appuie pas sur une autre touche, reste true\r\n        } else {\r\n          setKeyPressed(false);\r\n        }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n    };\r\n  }, []);\r\n\r\n  return keyPressed;\r\n}\r\n","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectEnregistreFormule, enregistrerFormules, selectCategorieFormule } from \"../../slice/FormulesSlice\"\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\"\r\n\r\nconst EnregistrementFormule = () => {\r\n\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const tabCatFormule = useSelector(selectCategorieFormule)\r\n\r\n    return (\r\n        <Enregistre isEnregistre={isEnregistre} action={enregistrerFormules({tab : tabCatFormule, idModele : idModele})} disabled={tabCatFormule.some(cat => cat.modif) || tabCatFormule.some(cat => cat.tabFormule.some(formule => formule.modif))}/>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(EnregistrementFormule);","import React, {useState} from 'react';\r\nimport {Fab, makeStyles, Typography} from '@material-ui/core';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport Items from '../../components/formules/ItemCategorie';\r\nimport useConstructor from '../../components/use/useContructor';\r\nimport useUnload from '../../components/use/useUnload';\r\nimport SelectionModele from '../../components/SelectionModele';\r\nimport EnregistrementFormule from '../../components/formules/EnregistrementFormule';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectTabCategorieLength, selectActualiseFormule, selectEnregistreFormule, addCategorie, getCategoriesFormules } from \"../../slice/FormulesSlice\"\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\"\r\n\r\nexport default function TodoListAccordeon() {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        fab: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const tabCatLength = useSelector(selectTabCategorieLength);\r\n    const actualise = useSelector(selectActualiseFormule);\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            idModele === null ? setOpen(true) : dispatch(getCategoriesFormules(idModele));\r\n        }\r\n    });\r\n\r\n    useUnload(!isEnregistre);\r\n\r\n    const displayFormule = () => {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h1\">FORMULES</Typography>\r\n                <hr className={classes.hr}/>\r\n                <Fab className={classes.fab}\r\n                    disabled={tabCatLength >= 30}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => dispatch(addCategorie())}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n                {Array(tabCatLength).fill(0).map((_, index) => (\r\n                    <Items index={index} key={index} length={tabCatLength}/>\r\n                ))}\r\n                <EnregistrementFormule/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        idModele === null \r\n        ? <SelectionModele tard={false} setClose={() => setOpen(false)} open={open}/> \r\n        : actualise ? displayFormule() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{margin : \"auto\", display : \"flex\", justifyContent : \"center\"}}/>\r\n    );\r\n}","import React from 'react'\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default function Particules(){\r\n\r\n    return(\r\n        <Particles\r\n            style={{ position: \"absolute\", opacity : \"0.6\", top : 0}}\r\n            height=\"100vh\"\r\n            width=\"100%\"\r\n        params={{\r\n            \"particles\": {\r\n            \"number\": {\r\n                \"value\": 35,\r\n                \"density\": {\r\n                \"enable\": true,\r\n                \"value_area\": 1969.2792437967696\r\n                }\r\n            },\r\n            \"color\": {\r\n                \"value\": \"#043f4f\"\r\n            },\r\n            \"shape\": {\r\n                \"type\": \"circle\",\r\n                \"stroke\": {\r\n                \"width\": 0,\r\n                \"color\": \"#000000\"\r\n                },\r\n                \"polygon\": {\r\n                \"nb_sides\": 6\r\n                },\r\n                \"image\": {\r\n                \"src\": \"img/github.svg\",\r\n                \"width\": 100,\r\n                \"height\": 100\r\n                }\r\n            },\r\n            \"opacity\": {\r\n                \"value\": 1,\r\n                \"random\": true,\r\n                \"anim\": {\r\n                \"enable\": true,\r\n                \"speed\": 1,\r\n                \"opacity_min\": 0,\r\n                \"sync\": false\r\n                }\r\n            },\r\n            \"size\": {\r\n                \"value\": 4,\r\n                \"random\": true,\r\n                \"anim\": {\r\n                \"enable\": false,\r\n                \"speed\": 4,\r\n                \"size_min\": 0.3,\r\n                \"sync\": false\r\n                }\r\n            },\r\n            \"line_linked\": {\r\n                \"enable\": false,\r\n                \"distance\": 126.03387160299326,\r\n                \"color\": \"#00ff74\",\r\n                \"opacity\": 1,\r\n                \"width\": 1.7329657345411573\r\n            },\r\n            \"move\": {\r\n                \"enable\": true,\r\n                \"speed\": 0.8,\r\n                \"direction\": \"bottom-left\",\r\n                \"random\": true,\r\n                \"straight\": false,\r\n                \"out_mode\": \"out\",\r\n                \"bounce\": false,\r\n                \"attract\": {\r\n                \"enable\": false,\r\n                \"rotateX\": 1024.0252067743202,\r\n                \"rotateY\": 945.2540370224496\r\n                }\r\n            }\r\n            }\r\n  }}/>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport ParticulesFond from '../../components/ParticulesFond';\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\"\r\nimport { getCategoriesFormules, selectEnregistreFormule } from \"../../slice/FormulesSlice\";\r\nimport { getAllVariables, selectEnregistreVariable } from \"../../slice/VariablesAleatoiresSlice\"\r\nimport { getSujet, selectEnregistreEnonce } from \"../../slice/EnoncesSlice\";\r\nimport { selectEnregistreUnite, getAllUnite } from '../../slice/UniteSlice';\r\n\r\nexport default function Accueil() {\r\n\r\n    const dispatch = useDispatch();\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const isEnregistreVariable = useSelector(selectEnregistreVariable);\r\n    const isEnregistreFormule = useSelector(selectEnregistreFormule);\r\n    const isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n    const isEnregistreUnite = useSelector(selectEnregistreUnite);\r\n\r\n    useConstructor(() => {\r\n        if (idModele !== null){\r\n            if (!isEnregistreFormule) dispatch(getCategoriesFormules(idModele));\r\n            if (!isEnregistreVariable) dispatch(getAllVariables(idModele));\r\n            if (!isEnregistreEnonce) dispatch(getSujet(idModele));\r\n            if (!isEnregistreUnite) dispatch(getAllUnite());\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <ParticulesFond/>\r\n        </div>\r\n    );\r\n}","import React, {useCallback} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\r\nimport imageCompression from 'browser-image-compression';\r\n\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nexport default function DropFile(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divDrop: {\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.secondary.light\r\n            },\r\n            border : \"dashed 2px\",\r\n            borderColor: theme.palette.primary.main,\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n            padding: \"0 2%\",\r\n            width : \"40%\",\r\n            minWidth: \"250px\",\r\n            margin: \"auto\",\r\n            height: 175,\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            [theme.breakpoints.down('sm')]: {\r\n                width : \"90%\",\r\n                marginBottom: \"2%\"\r\n            }\r\n        },\r\n        cloudIcon: {\r\n            fontSize : \"400%\"\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n  //s'execute lors de l'ajout d'un (ou plusieurs) fichier(s) dans le dropFile\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    //pour lire tous les fichiers déposés\r\n    acceptedFiles.forEach(async (file) => {\r\n      //si on veut une compression d'image\r\n      if (props.compressImage){\r\n        const compressedFile = await imageCompression(file, {maxSizeMB: 1, maxWidthOrHeight: 800, useWebWorker: true});\r\n        //retouner les fichiers à l'élément parent\r\n        await props.changeFile(compressedFile)\r\n      } else {\r\n        //retouner les fichiers à l'élément parent\r\n        props.changeFile(file)\r\n      }\r\n    })\r\n  }, [props])\r\n\r\n  //définir les types de fichiers acceptés et le nombre de fichiers à déposer\r\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone({onDrop, accept: props.typeFile, maxFiles : 1})\r\n\r\n  //affichage du nom des fichiers déposés\r\n  const files = acceptedFiles.map(file => (\r\n      <p key={file.path}>{file.path.length > 20 ? file.path.substring(0, 20)+\"...\" : file.path}</p>\r\n    ));\r\n\r\n  return (\r\n      <div {...getRootProps()} className={classes.divDrop}>\r\n        <input {...getInputProps()} />\r\n        <p>{props.message}</p>\r\n        <CloudUploadOutlinedIcon className={classes.cloudIcon}/>\r\n        {files}\r\n      </div>\r\n  );\r\n}","import React, {useState} from 'react'\r\nimport {TextField, Button, makeStyles, Typography} from '@material-ui/core';\r\n\r\nimport DropFile from '../../components/DropFile'\r\n\r\nimport {addModele3DAPI, addArchiAPI, getVariablesArchiAPI} from '../../utils/api'\r\n\r\nexport default function Architecture() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            paddingBottom: \"2%\",\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divImportModele: {\r\n            boxShadow : \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            width : \"80%\",\r\n            margin : \"auto\",\r\n            padding : \"2%\"\r\n        },\r\n        divDropModele: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                flexWrap: \"wrap\"\r\n            }\r\n        },\r\n        divNumSujet: {\r\n            display : \"flex\",\r\n            justifyContent : \"center\",\r\n            marginTop : \"3%\"\r\n        },\r\n        saveButton1: {\r\n            display : \"block\",\r\n            margin : \"20px auto\"\r\n        },\r\n        saveButton2: {\r\n            marginLeft : 20\r\n         },\r\n        button: {\r\n            marginLeft : 20,\r\n        },\r\n        buttonVariable: {\r\n            display: \"block\",\r\n            margin: \"0 auto 2%\",\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [sujet, setSujet] = useState(\"\");\r\n    const [image1, setImage1] = useState(\"\");\r\n    const [image2, setImage2] = useState(\"\");\r\n    const [excel, setExcel] = useState(\"\");\r\n\r\n    const onChange = (e) =>{\r\n        if (!isNaN(e.target.value)) setSujet(e.target.value);\r\n    }\r\n\r\n    const envoieModele3D = () =>{\r\n        const data = new FormData();\r\n        data.append('image1', image1);\r\n        data.append('image2', image2);\r\n\r\n        addModele3DAPI({sujet : sujet, images : data})\r\n        .then(() => console.log(\"ok\"))\r\n        .catch(() => console.log(\"nop\"));\r\n    }\r\n\r\n    const envoieArchi = () => {\r\n        const data = new FormData();\r\n        data.append('excel', excel);\r\n\r\n        addArchiAPI(data)\r\n        .then(() => console.log(\"ok\"))\r\n        .catch(() => console.log(\"nop\"));\r\n    }\r\n\r\n    const getVariables = () => {\r\n        getVariablesArchiAPI()\r\n        .then((e) => {\r\n            console.log(e)\r\n        })\r\n        .catch((erreur) => console.log(erreur))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h1\">Architecture</Typography>\r\n            <hr className={classes.hr}/>\r\n            <Button className={classes.buttonVariable} variant=\"contained\" color=\"primary\" onClick={() => getVariables()}>Récupere la liste des variables d'architecture</Button>\r\n            <div>\r\n                <DropFile typeFile='.xlsx' compressImage={false} changeFile={e => setExcel(e)}  message=\"Charger la liste des architectures\"/>\r\n                <Button className={classes.saveButton1} disabled={excel === \"\"} variant=\"contained\" color=\"primary\" onClick={() => envoieArchi()}>Enregistrer</Button>\r\n            </div>\r\n            <div className={classes.divImportModele}>\r\n                <div className={classes.divDropModele}>\r\n                    <DropFile typeFile='image/*' compressImage={false} changeFile={e => setImage1(e)}  message=\"Importer la PREMIERE image du modèle 3D\"/>\r\n                    <DropFile typeFile='image/*' compressImage={true} changeFile={e => setImage2(e)}  message=\"Importer la SECONDE image du modèle 3D\"/>\r\n                </div>\r\n                <div className={classes.divNumSujet}>\r\n                    <TextField autoFocus size=\"small\" label=\"Numéro du sujet\" variant=\"outlined\" required value={sujet} onChange={e => onChange(e)}/>\r\n                    <Button className={classes.saveButton2} disabled={image1 === \"\" || image2 === \"\" || sujet === \"\"} variant=\"contained\" color=\"primary\" onClick={() => envoieModele3D()}>Enregistrer</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getReponsesCorrigees, getEssaisEtudiant } from \"../utils/api.js\";\r\nimport _ from 'lodash'\r\n\r\nexport const getReponsesCorDB = createAsyncThunk(\"correction/getReponsesCorDB\", \r\nasync (props) => {\r\n    const response = await getReponsesCorrigees(props.idPromo, props.idEtudiant);\r\n    return response.data;\r\n}) \r\n\r\nexport const getEssaisDB = createAsyncThunk(\"correction/getEssaisDB\", \r\nasync (props) => {\r\n    const response = await getEssaisEtudiant(props.idEtudiant);\r\n    return response.data;\r\n})\r\n\r\nexport const consulterSlice = createSlice({\r\n    name: 'consulter',\r\n    initialState: {\r\n        etudiant : {\r\n            id_promo : undefined,\r\n            nom : \"\",\r\n            prenom : \"\",\r\n            id_etudiant : undefined,\r\n        },\r\n        tabEssais : undefined\r\n        /*[{\r\n            corrige : false,\r\n            dateEssai : \"01/01/2020\",\r\n            tabQuestions : [{\r\n                justif : \"\",\r\n                commentProf : \"\",\r\n                note : \"\",\r\n                num : 1,\r\n                tabReponses : [{\r\n                    justeApp : true, //reponse juste d'après l'application\r\n                    justeProf : false, //reponse juste d'après le professeur\r\n                    ecart : \"\",\r\n                    value : \"0\",\r\n                    unite : \"\",\r\n                }]\r\n            }]\r\n        }]*/,\r\n        tabReponsesJustes : undefined\r\n        /*[{\r\n            contenu : \"\",\r\n            num : 1,\r\n            tabReponses : [{\r\n                value : \"0\",\r\n                tabUnites : [{\r\n                    abr : '',\r\n                    puissance : '',\r\n                }]\r\n            }]\r\n        }]*/,\r\n        message : \"\"\r\n    },\r\n    reducers: {\r\n        //change la reponse\r\n        changeReponseJuste : (state, action) =>{\r\n            let {indexE, indexQ, indexR} = action.payload\r\n            state.tabEssais[indexE].tabQuestions[indexQ].tabReponses[indexR].justeProf =\r\n                !state.tabEssais[indexE].tabQuestions[indexQ].tabReponses[indexR].justeProf\r\n        },\r\n        //importe un jeu d'essai pour faire des tests sur liste d'essais\r\n        setEssaisForTest : (state) =>{\r\n            state.tabEssais = [\r\n                {dateEssai : \"05/01/2020\", corrige : false, tabQuestions : \r\n                    [{num : 1, justif : \"Scotland Forever󠁧󠁢\", commentProf : \"\", note : \"\",\r\n                     tabReponses : \r\n                        [ {justeApp : true, justeProf : false, value : 12, \r\n                        unite : \"N^12\", ecart : \"0.3\"} ] \r\n                    }] \r\n                },\r\n                {dateEssai : \"05/01/2020\", corrige : false, tabQuestions : \r\n                    [{num : 1, justif : \"\", commentProf : \"\", note : \"\",\r\n                    tabReponses : \r\n                        [ {justeApp : false, justeProf : false, value : 11, \r\n                        unite : \"N^11\", ecart : \"1.3\"} ] \r\n                    }] \r\n                }\r\n            ]\r\n        },\r\n        //change le message que le prof peut envoyer\r\n        //paramètres : valeur du message\r\n        changeMessage : (state, action) =>{\r\n            state.message = action.payload\r\n        },\r\n        //change le commentaire d'une question dans un essai\r\n        //paramètres : indexEssai, indexQuestion, commentaire\r\n        changeCommentaire : (state, action) =>{\r\n            let {indexE, indexQ, commentaire} = action.payload\r\n            state.tabEssais[indexE].tabQuestions[indexQ].commentProf = commentaire\r\n        },\r\n        //change la note d'une question pour un essai\r\n        //paramètres : indexEssai, indexQuestion, note\r\n        changeNote : (state, action) => {\r\n            let {indexE, indexQ, note} = action.payload\r\n            if((!isNaN(note) && note<=100 && note>=0)|| note === \"\"){\r\n                state.tabEssais[indexE].tabQuestions[indexQ].note = note\r\n            }\r\n        },\r\n        //applique la correction en changeant le booléen revu\r\n        //paramètres : indexEssai\r\n        setCorrigeTrue : (state, action) =>{\r\n            let indexE = action.payload\r\n            state.tabEssais[indexE].corrige = true;\r\n        },\r\n        //met les infos des étudiants\r\n        //paramètres : id, nom et prénom de l'étudiant\r\n        setEtudiantConsulter : (state, action) =>{\r\n            let {id_promo, id_etudiant, prenom, nom} = action.payload\r\n            state.etudiant = {\r\n                id_promo : id_promo,\r\n                id_etudiant : id_etudiant,\r\n                prenom : prenom,\r\n                nom : nom,\r\n            };\r\n        },\r\n        //Met l'avis de l'application sur l'essai\r\n        setAvisApplication : (state) => {\r\n\r\n            //operation faite pour chaque essai présent\r\n            state.tabEssais.forEach(essai => {\r\n\r\n                //on regarde pour chaque question présente dans l'essai\r\n                essai.tabQuestions.forEach(question => {\r\n                    //on regarde la question corrigée lié à la question de l'essai\r\n                    const questionJuste = _.find( state.tabReponsesJustes, (o) => { return o.num === question.num } )\r\n\r\n                    //on regarde pour chaque réponse de la question corrigée\r\n                    questionJuste.tabReponses.forEach(repCor => {\r\n\r\n                        //on essai de trouver une réponse juste dans l'essai pour cette réponse corrigée\r\n                        const reponse = _.find(question.tabReponses, (o)=> { \r\n                            return  !o.justeApp &&\r\n                                    o.value >= repCor.value * (1 - repCor.margeErreur / 100) &&\r\n                                    o.value <= repCor.value * (1 + repCor.margeErreur / 100)\r\n\r\n                        })\r\n\r\n                        //si il y en a une, on met qu'elle est juste\r\n                        if (reponse !== undefined) {\r\n                            reponse.justeApp = true\r\n                            reponse.ecart = Math.abs(reponse.value - repCor.value)\r\n                        }\r\n                    });\r\n\r\n                    //on s'interesse aux reponses fausses\r\n                    const repFausses = _.filter(question.tabReponses, (o) => { return !o.justeApp })\r\n\r\n                    //on regarde chacune des réponses fausses\r\n                    repFausses.forEach(rep => {\r\n                        let min = undefined\r\n\r\n                        questionJuste.tabReponses.forEach(repCor => {\r\n                            if (min === undefined){\r\n                                min = Math.abs(rep.value - repCor.value)\r\n                            }else{\r\n                                min = Math.min(min, Math.abs(rep.value - repCor.value))\r\n                            }\r\n                        });\r\n\r\n                        rep.ecart = min;                        \r\n                    });\r\n\r\n                });\r\n            });\r\n\r\n\r\n            \r\n        }\r\n\r\n        \r\n\r\n    },\r\n    extraReducers: {\r\n        [getReponsesCorDB.fulfilled] : (state, action) => {\r\n\r\n            state.tabReponsesJustes = []\r\n\r\n            action.payload.forEach(question => {\r\n                let index = state.tabReponsesJustes.push({\r\n                    contenu : question.contenu,\r\n                    num : question.id_question,\r\n                    tabReponses : [],\r\n                }) - 1\r\n\r\n                question.reponses.forEach(reponse =>{\r\n                    state.tabReponsesJustes[index].tabReponses.push({\r\n                        value : reponse.value,\r\n                        margeErreur : reponse.margeErreur,\r\n                        tabUnites : reponse.tabUnites\r\n                    })\r\n                })\r\n\r\n            });\r\n\r\n            //console.log(state.tabReponsesJustes)\r\n        },\r\n        [getReponsesCorDB.rejected] : (state, action) => {\r\n            state.tabReponsesJustes = undefined\r\n            console.log(\"reject\")\r\n        },\r\n        [getEssaisDB.fulfilled] : (state, action) => {\r\n            let essaisDB = action.payload;\r\n            state.tabEssais = []\r\n\r\n            //on regarde par rapport aux lignes données\r\n            essaisDB.forEach(essaiQuestionDB => {\r\n                //on recherche si un essai à cette date existe déjà\r\n                let essai = _.find(state.tabEssais, (o) => { return o.dateEssai === essaiQuestionDB.date } )\r\n\r\n                //si l'essai n'existe pas, on le crée\r\n                if (essai === undefined){\r\n                    let taille = state.tabEssais.push({\r\n                        corrige : false,\r\n                        dateEssai : essaiQuestionDB.date,\r\n                        tabQuestions : []\r\n                    });\r\n                    essai = state.tabEssais[taille - 1];\r\n                }\r\n\r\n                //on push la question\r\n                let indexQ = essai.tabQuestions.push({\r\n                    justif : \"\",\r\n                    commentProf : \"\",\r\n                    note : \"\",\r\n                    num : essaiQuestionDB.id_question,\r\n                    tabReponses : []\r\n                }) - 1\r\n\r\n                let question = essai.tabQuestions[indexQ]\r\n\r\n                //on push les réponses données par l'étudiant pour cette question\r\n                essaiQuestionDB.reponses.forEach(reponseDB => {\r\n                    question.tabReponses.push({\r\n                        justeApp : false, \r\n                        justeProf : false,\r\n                        ecart : \"\",\r\n                        value : reponseDB.value,\r\n                        unite : reponseDB.tabUnites,\r\n                    })\r\n                });\r\n\r\n            });\r\n\r\n        },\r\n        [getEssaisDB.rejected] : (state, action) => {\r\n            state.tabEssais = undefined\r\n            console.log(\"rejectEssais\")\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const {setEssaisForTest, changeReponseJuste, changeMessage, changeCommentaire, \r\n    changeNote, setCorrigeTrue, setEtudiantConsulter, setAvisApplication } = consulterSlice.actions\r\n\r\n//retourne tous le tableau des essais\r\nexport const selectEssais = state => state.consulter.tabEssais\r\n\r\n//retourne le message que le professeur peut envoyer à l'étudiant\r\nexport const selectMessage = state => state.consulter.message\r\n\r\n//retourne un essai particulier suivant un ID\r\nexport const selectEssaisWithID = index => state => state.consulter.tabEssais[index]\r\n\r\n//retourne tous le tableau des reponses justes\r\nexport const selectReponsesJustes = state => state.consulter.tabReponsesJustes\r\n\r\n//retourne l'objet étudiant\r\nexport const selectEtudiantConsulter = state => state.consulter.etudiant\r\n\r\n//retourne le nombre de réponses dans le tableau des réponses justes\r\nexport const selectNbReponsesAAvoir = numQuestion => state =>{\r\n    let indexQ = _.findIndex(state.consulter.tabReponsesJustes, function(o) { return o.num === numQuestion; })\r\n    return state.consulter.tabReponsesJustes[indexQ].tabReponses.length\r\n} \r\n\r\n\r\nexport const selectUneQuestionJuste = numQuestion => state => _.find(state.consulter.tabReponsesJustes, (o) => {\r\n    return o.num === numQuestion\r\n})\r\n\r\nexport default consulterSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getInfoPromoAPI, getAllPromoAPI, addPromoAPI, deletePromoAPI } from \"../utils/api.js\";\r\n\r\nexport const getEtudiantsPromo = createAsyncThunk(\"promo/getEtudiants\", \r\nasync (idPromo) => {\r\n    const response = await getInfoPromoAPI(idPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const getAllPromo = createAsyncThunk(\"promo/getAllPromo\", \r\nasync () => {\r\n    const response = await getAllPromoAPI();\r\n    return response.data;\r\n});\r\n\r\nexport const addPromo = createAsyncThunk(\"promo/addPromo\", \r\nasync (nomPromo) => {\r\n    const response = await addPromoAPI(nomPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const removePromo = createAsyncThunk(\"promo/remove\", \r\nasync (select) => {\r\n    const response = await deletePromoAPI(select.idPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const PromoSlice = createSlice({\r\n    name: 'promo',\r\n    initialState: {\r\n        tabPromo : [],\r\n        tabEtudiants : [],\r\n        idPromo : undefined,\r\n        enregistre : false\r\n        // tabEtudiants : [{\r\n        //     id : 0,\r\n        //     nom : 'undefined',\r\n        //     prenom : '',\r\n        //     promo : '',\r\n        //     avancement : '', // %\r\n        //     note : '' // /20\r\n        // }],\r\n    },\r\n    reducers: {\r\n        //importe un jeu d'essai pour faire des tests sur liste d'étudiants\r\n        setEtudiantsForTests : (state) =>{\r\n            state.tabEtudiants = [\r\n                {id : 0, prenom : 'Florian', nom : 'TORIBIO', avancement : 10, note : 4},\r\n                {id : 1, prenom : 'Raphael', nom : 'GAUTHIER', avancement : 80, note : 17},\r\n                {id : 2, prenom : 'Léana', nom :'RENON', avancement : 50, note : 16},\r\n                {id : 5, prenom : 'Léo', nom : 'MERCIER', avancement : 40, note : 11},\r\n                {id : 9, prenom : 'Sylvain', nom : 'FREDIANI', avancement : 90, note : 16},\r\n                {id : 15, prenom : 'Test', nom : 'TEST', avancement : 100, note :  20},\r\n            ]\r\n        },\r\n        //change l'id de la promo que le prof est en train de corriger\r\n        setIdPromo : (state, action) =>{\r\n            state.idPromo = action.payload\r\n        }\r\n\r\n    },\r\n    extraReducers: {\r\n        [getEtudiantsPromo.fulfilled] : (state, action) => {\r\n            state.tabEtudiants = [];\r\n            action.payload.forEach(etudiant => {\r\n                state.tabEtudiants.push({\r\n                    id : etudiant.id_auth,\r\n                    prenom : etudiant.prenom,\r\n                    nom : etudiant.nom,\r\n                    avancement : 50,\r\n                    note : 16\r\n                })\r\n            });\r\n        },\r\n        [getAllPromo.fulfilled] : (state, action) => {\r\n            let promo = [];\r\n            action.payload.forEach(elem => promo.push({idPromo : elem.id_promo, nom : elem.nom_promo}))\r\n            state.tabPromo = promo;\r\n            state.enregistre = true;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { setEtudiantsForTests, setIdPromo } = PromoSlice.actions\r\n\r\n//retourne tous le tableau d'étudiants\r\nexport const selectEtudiants = state => state.promo.tabEtudiants\r\n\r\n//retourne l'id de promo qui est en train de se faire corriger\r\nexport const selectIdPromo = state => state.promo.idPromo\r\n\r\nexport const selectPromo = state => state.promo.tabPromo;\r\n\r\nexport const selectEnregistrePromo = state => state.promo.enregistre;\r\n\r\nexport default PromoSlice.reducer;","import React, {useState} from 'react';\r\nimport {\r\n  Button, makeStyles,\r\n  Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination,\r\n  TableRow\r\n} from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setEtudiantConsulter } from '../../slice/ConsulterSlice'\r\nimport { selectEtudiants, selectIdPromo } from '../../slice/PromoSlice';\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function StickyHeadTable() {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    linkConsulter: {\r\n      textDecoration: \"none\",\r\n      color: \"white\"\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const rowsPerPage = 10;\r\n\r\n  const tabEtudiants = useSelector(selectEtudiants)\r\n\r\n  const idPromo = useSelector(selectIdPromo)\r\n\r\n  const columns = [\r\n    {id: 'nom', label: 'Nom', minWidth: 170 },\r\n    {id: 'prenom', label: 'Prénom', minWidth: 170 },\r\n    {id: 'avancement', label: 'Avancement', minWidth: 170, align: 'right'},\r\n    {id: 'note', label: 'Note actuelle', minWidth: 170, align: 'right'},\r\n    {id: 'sujet', label: \"Sujet de l'éleve\", minWidth: 170, align: 'right'},\r\n  ];\r\n\r\n  const columnConsulterSujet = columns[columns.length - 1]\r\n\r\n  //si la colonne demande quelque chose d'autre à ajouter, le rajoutera\r\n  const affichageEnplus = (id) =>{\r\n    let string = \"\"\r\n    switch (id){\r\n      case \"note\" : \r\n        string = \"/20\"\r\n        break\r\n      case \"avancement\" :\r\n        string = \"%\"\r\n        break\r\n      default :\r\n        string = \"\"\r\n    }\r\n    return string\r\n  }\r\n\r\n  //gère le changement de page\r\n  const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n  };\r\n\r\n  const handleClickConsulter = ( etudiant ) =>{\r\n      dispatch(setEtudiantConsulter({\r\n        id_promo : idPromo,\r\n        id_etudiant : etudiant.id,\r\n        prenom : etudiant.prenom,\r\n        nom : etudiant.nom\r\n      }))\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n\r\n      <TableContainer>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n \r\n          {/* affiche les lignes de rowd une par une dans le tableau */}\r\n          <TableBody>\r\n            {/* affiche les lignes 10 par 10 */}\r\n            {tabEtudiants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover tabIndex={-1} key={row.nom}>\r\n                  {/* affiche les infos pour chaque colonne d'élément de rows */}\r\n                  {columns.map((column) => { \r\n                    return (\r\n                      column.id !== 'sujet' ?\r\n\r\n                      //cas des données du tableau d'étudiants\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {row[column.id]}\r\n\r\n                        {/* affiche /20 ou % dans certains cas */}\r\n                        {affichageEnplus(column.id)}\r\n                      </TableCell> \r\n                      :\r\n                      //cas de la colonne consulter sujet\r\n                      <TableCell key={'sujet'} align={columnConsulterSujet.align}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={e=>handleClickConsulter(row)}>\r\n                          <Link className={classes.linkConsulter} to={\"/prof/correction/\" + row.id}>\r\n                            Consulter\r\n                          </Link>\r\n                        </Button>\r\n                      </TableCell>\r\n                    )\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[]}\r\n        component=\"div\"\r\n        count={tabEtudiants.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n      />\r\n    </Paper>\r\n\r\n    \r\n    \r\n  );\r\n}","import React from 'react'\r\nimport Table from '../../components/correction/TableConsulter'\r\nimport {makeStyles, MenuItem, Typography, TextField} from \"@material-ui/core\";\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getEtudiantsPromo, selectIdPromo, setIdPromo, getAllPromo, selectEnregistrePromo, selectPromo } from '../../slice/PromoSlice'\r\n\r\nexport default function Correction(){\r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divTable: {\r\n            width: \"90%\",\r\n            margin: \"0 auto 2% auto\",\r\n            boxShadow : \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        choixPromoDiv:{\r\n            width : \"200px\",\r\n            margin : \"auto\",\r\n        },\r\n        choixPromoField: {\r\n            width : \"100%\",\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const idPromo = useSelector(selectIdPromo)\r\n    const isEnregistrePromo = useSelector(selectEnregistrePromo);\r\n    const tabPromos = useSelector(selectPromo)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useConstructor(() => {if (!isEnregistrePromo) dispatch(getAllPromo())});\r\n\r\n\r\n    //change l'id de promo qui est corrigée et importe les étudiants de cette promo\r\n    const handleChangePromo = (e) => {\r\n        dispatch(setIdPromo(e.target.value))\r\n        dispatch(getEtudiantsPromo(e.target.value))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h1\">Correction</Typography>\r\n            <hr className={classes.hr}/>\r\n\r\n            {/* Select pour le choix de la promo */}\r\n            <div className={classes.choixPromoDiv}>\r\n                <TextField select value={idPromo} onChange={e=> handleChangePromo(e)} className={classes.choixPromoField}\r\n                    helperText=\"Choisissez la promotion\" >\r\n                    {tabPromos.map((element)=>{\r\n                        return(\r\n                        <MenuItem key={element.idPromo} value={element.idPromo} >\r\n                            {element.nom}\r\n                        </MenuItem>)\r\n                    })}\r\n                </TextField>\r\n            </div>\r\n\r\n            { /* Table pour la correction */}\r\n            {idPromo !== undefined ?\r\n            <div className={classes.divTable}>\r\n                <Table/>\r\n            </div>\r\n            : null }\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\"\r\nimport SunEditor from \"suneditor-react\";\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectQuestion } from \"../../slice/EnoncesSlice\"\r\n\r\nexport default function QuestionEnonce({ index, handleChange }) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divQuestion: {\r\n            display: \"block\",\r\n            margin: \"auto\",\r\n            width:'100%',\r\n            boxShadow : \"0px 8px 20px -5px rgba(0,0,0,0.3)\",\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const value = useSelector(selectQuestion(index))\r\n\r\n    return  (\r\n        <div className={classes.divQuestion}>\r\n            <SunEditor\r\n                defaultValue={value}\r\n                onChange={handleChange}\r\n                setOptions={{\r\n                    buttonList: [\r\n                        ['undo','redo'],\r\n                        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                        ['table', 'list'],\r\n                        ['removeFormat'],\r\n                    ]\r\n                }}\r\n                lang=\"fr\"\r\n                placeholder=\"Tapez votre question ici...\"\r\n                height=\"200\"\r\n                setDefaultStyle=\"background-color: lightgrey\"\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n//donne en html l'unité en fonction d'un tableau d'unités\r\n//props -> tabUnites ({abr, puissance})\r\nexport function afficherUnites(tabUnites){\r\n    return(\r\n        <div>\r\n            {tabUnites.map((i, index) => (\r\n                <var key={index}>\r\n                    {i.abr} \r\n                    <sup> {i.puissance !== 1 && i.abr !== \" \" ? i.puissance : null } </sup>\r\n                </var>\r\n                )\r\n            )}\r\n       </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport _ from \"lodash\"\r\nimport {Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, makeStyles} from '@material-ui/core';\r\nimport {TextField, MenuItem, InputAdornment} from '@material-ui/core';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUnites, getAllUnite } from '../../slice/UniteSlice'\r\nimport useConstructor from '../use/useContructor';\r\n\r\n//props\r\n//  => open (booléen pour savoir si le dialog est ouvert ou fermé)\r\n//  => unite (tableau de parties unités faisant l'unité d'une réponse [{abr : string, puissance : int }])\r\n//  => setTabUnite() (fonction changeant le tableau d'unités)\r\n//  => handleClose() (fonction appelé à la fermeture du dialog (doit s'occupe de fermer le dialog))\r\nexport default function ChoixUnite(props){\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        alignementHorizontal: {\r\n            display : \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            columnGap: \"20px\",\r\n            alignItems: \"center\",\r\n            flexWrap: \"wrap\"\r\n        },\r\n        buttonDelete: {\r\n            color: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                color: theme.palette.error.dark,\r\n            }\r\n        },\r\n        buttonGap: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            columnGap: \"10px\"\r\n        },\r\n        choixInput: {\r\n            marginBottom : \"10px\"\r\n        },\r\n        puissance: {\r\n            width: \"40px\"\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    //Partie unité : 'Kg^3' est une partie d'unité de 'm^2.Kg^3'\r\n    //caractérisé par un    id (identifiant de l'unité dans le tableau unites)\r\n    //                      puissance\r\n\r\n    const [actualise, setActualise] = useState(false)\r\n\r\n    const [tabUnites, setUnites] = useState([{abr : \"\", puissance : 1}])\r\n\r\n    const dispatch = useDispatch();  \r\n\r\n    const unitesReference = useSelector(selectUnites)\r\n\r\n    useConstructor(() => {\r\n        if (unitesReference.length === 0){ \r\n            dispatch(getAllUnite())\r\n        }\r\n        //dispatch(setTest())\r\n    });\r\n\r\n    const NB_MAX_PARTIES_UNITE = 6\r\n    const MAX_WIDTH = \"lg\" //taille de la boite de dialogue\r\n\r\n    //gère l'ajout d'une partie d'unité dans l'unité de la réponse\r\n    const handleAjouterUnite = () =>{\r\n        let newTab =[...tabUnites, {abr : \"\", puissance : 1}]\r\n        setUnites(newTab)\r\n    }\r\n\r\n    //remete l'unité à [{id : 0, puissance : 1}], soit sans unité\r\n    const handleRemettreAZero = () => {\r\n        setUnites([{abr : \"\", puissance : 1}])\r\n    }\r\n\r\n    const actualiseOpen = () =>{\r\n        if(props.open && !actualise){\r\n            setUnites(_.cloneDeep(props.unite))\r\n            setActualise(true)\r\n        }else if(!props.open && actualise){\r\n            setActualise(false)\r\n        }\r\n    }\r\n\r\n    //gère le changement d'unité par action sur le select\r\n    const handleChangeUnite = (index, event) =>{\r\n        let newTab = [...tabUnites]\r\n        newTab[index].abr = event.target.value\r\n        setUnites(newTab)\r\n    }\r\n\r\n    //gère la suppression de cette partie d'unité\r\n    const handleDeleteUnite = (index) =>{\r\n        let newTab = [...tabUnites]\r\n        newTab.splice(index, 1)\r\n        setUnites(newTab)\r\n    }\r\n\r\n    //gère le changement de la puissance au fur et à mesure que l'étudiant la tape\r\n    //n'accepte que nombres entre -100 et 100\r\n    const handleChangePuissance = (index, event) =>{\r\n        let value = event.target.value\r\n        if((!isNaN(value)&& Math.abs(value) < 100 ) || value==='-' ){\r\n            changePuissance(index, value)\r\n        }\r\n    }\r\n\r\n    //lorque l'on quitte le focus sur la puissance, s'assure que la puissance soit bonne\r\n    //si valeur est égal à 0, ou à '-' ou à '', transforme en 1\r\n    const handleBlurUnite = (index) =>{\r\n        let pow = tabUnites[index].puissance\r\n        if(parseInt(pow) === 0 || pow === '-' || pow === ''){\r\n            changePuissance(index, 1)\r\n        }\r\n    }\r\n\r\n    //change directement la puissance d'une unité\r\n    const changePuissance = (index, value) =>{\r\n        let newTab = [...tabUnites]\r\n        newTab[index].puissance = value\r\n        setUnites(newTab)\r\n    }\r\n\r\n    //gère la fermeture de la fenêtre avec annulation\r\n    const handleAnnuler = () =>{\r\n        props.handleClose()\r\n    }\r\n\r\n    //gère la fermeture de la fenêtre avec application\r\n    const handleAppliquer = () =>{\r\n        supprimerIterationsSansUnite()\r\n        props.setTabUnite(tabUnites)\r\n        props.handleClose()\r\n    }\r\n\r\n    //supprime les itérations de Sans Unité (abr : \" \") qui ne sont pas utiles\r\n    //si le tableau ne contient que des Sans unité, il n'en restera qu'un\r\n    const supprimerIterationsSansUnite = () =>{\r\n        _.remove(tabUnites, function(o){\r\n            return o.abr === \"\"\r\n        })\r\n\r\n        if (tabUnites.length === 0){\r\n            tabUnites.push({abr : \"\", puissance : 1})\r\n        }\r\n\r\n    }\r\n\r\n    //affiche une partie d'unité\r\n    const partieUnite = (partieUnite, index) => {\r\n        return(\r\n            <div className={classes.choixInput}>\r\n              <div className={classes.buttonGap}>\r\n                {tabUnites.length > 1 \r\n                ? \r\n                <IconButton className={classes.buttonDelete} size=\"small\" onClick={e=>handleDeleteUnite(index)} >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n                : null \r\n                }\r\n              </div>\r\n      \r\n              {/* Select de l'unité */}\r\n              {console.log(partieUnite)}\r\n              {console.log(unitesReference)}\r\n              <TextField select value={partieUnite.abr} onChange={e=>handleChangeUnite(index, e)}>\r\n                  {unitesReference.map((i) => \r\n                  <MenuItem key={i.abrev} value={i.abrev} >\r\n                      {i.nom}\r\n                  </MenuItem>)}\r\n              </TextField>\r\n      \r\n              {/* affiche la modif de puissance que si n'est pas Sans unité */}\r\n              {partieUnite.abr !== \"\" ? \r\n              <>\r\n              {/* modif puissance */}\r\n              <TextField value={partieUnite.puissance} className={classes.puissance}\r\n                  onChange={e=>handleChangePuissance(index, e)}\r\n                  onBlur={e=>handleBlurUnite(index)}\r\n                  InputProps={{ startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            ^\r\n                          </InputAdornment>\r\n                          ),\r\n                      }} />\r\n              </>\r\n              : null }\r\n            </div>\r\n          )\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Dialog \r\n            open={props.open} //ouverture gérée dans ItemReponse\r\n            maxWidth={MAX_WIDTH}\r\n            fullWidth={false}\r\n        >\r\n            {actualiseOpen()}\r\n            <DialogTitle className={classes.alignementHorizontal}>\r\n                Choix de l'unité\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <div className={classes.alignementHorizontal}>\r\n                    {/* affiche un à un les différentes parties d'unités*/}\r\n                    {tabUnites.map((i, index) => \r\n                        <div key={index}>\r\n                        {partieUnite(i, index)}\r\n                        \r\n                        {/* interserction avec des . entre les parties d'unité */}\r\n                        {/*index < tabUnites.length-1 ? <b>.</b> : null*/}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* boutons d'action dans la fenêtre */}\r\n                <div className={classes.alignementHorizontal}>\r\n\r\n                    {/* bouton ajout de partie d\"unité */}\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleAjouterUnite}\r\n                        \r\n                        //disabled si on atteint la limite de partie d'unité (6)\r\n                        disabled={tabUnites.length >= NB_MAX_PARTIES_UNITE }\r\n                    >\r\n                        Ajouter Unite\r\n                    </Button>\r\n\r\n                    {/* bouton pour remettre à zéro cette unité en entière */}\r\n                    <IconButton size=\"small\" color=\"primary\" onClick={handleRemettreAZero} \r\n                        title=\"remettre à 0\">\r\n                        <LoopIcon/>\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </DialogContent>\r\n\r\n            {/* boutons de fermeture de boite de dialogue */}\r\n            <DialogActions>\r\n\r\n                {/* bouton pour annuler la modification de l'unité */}\r\n                <Button onClick={handleAnnuler}>\r\n                    Annuler\r\n                </Button>\r\n\r\n                {/* bouton pour appliquer à toutes les réponses de la question cette même unité */}\r\n                {/*\r\n                <Button onClick={e=>props.handleClose(\"appliquer a tous\")} \r\n                    title=\"appliquer l'unité à toutes les réponses de la question\">\r\n                    Appliquer à tous\r\n                </Button>\r\n                */}\r\n\r\n                {/* bouton pour appliquer uniquement à cette réponse cette unité */}\r\n                <Button onClick={handleAppliquer}>\r\n                    Appliquer\r\n                </Button>\r\n                \r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n}","import React, {useCallback} from 'react';\r\nimport {Typography, Slider, makeStyles } from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { handleChangeMargeErreur, selectMargeErreur } from '../../slice/EnoncesSlice'\r\n\r\nconst SliderBar = ({indexQuestion, indexReponse}) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divSlideBar: {\r\n            width : \"70%\",\r\n            margin : \"5% auto 0 auto\"\r\n        }\r\n    }));\r\n\r\n    const margeErreur = useSelector(selectMargeErreur(indexQuestion, indexReponse));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickAway = useCallback((value) => {\r\n      dispatch(handleChangeMargeErreur({indexQuestion : indexQuestion, indexReponse : indexReponse, marge : value}));\r\n    }, [dispatch, indexQuestion, indexReponse])\r\n\r\n  return (\r\n      <div className={classes.divSlideBar}>\r\n        <Typography variant=\"caption\" gutterBottom>Marge d'erreur autorisée</Typography>\r\n          <Slider\r\n            defaultValue={margeErreur}\r\n            marks={[{value: 0, label: '0%'}, {value : 100, label : \"100%\"}]}\r\n            step={5}\r\n            min={0}\r\n            max={100}\r\n            onChangeCommitted={(_, value) => handleClickAway(value)}\r\n            valueLabelDisplay=\"auto\"\r\n            aria-labelledby=\"discrete-slider-always\"\r\n          />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SliderBar);","import React, {useCallback, useState} from \"react\";\r\nimport {Button, Input, makeStyles, MenuItem, Select} from \"@material-ui/core\";\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport {afficherUnites} from '../unite/UniteFunctions';\r\nimport ChoixUnite from '../unite/ChoixUnite'\r\nimport SlideBar from './SlideBarMarge'\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { handleChangeCat, handleChangeForm, handleChangeUnite, selectReponse} from '../../slice/EnoncesSlice'\r\nimport { selectActualiseFormule, selectCategorieFormule } from \"../../slice/FormulesSlice\";\r\n\r\nconst Reponse = ({indexReponse, indexQuestion}) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divReponse: {\r\n            marginTop : 20,\r\n            display : \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\r\n            gap: \"0 1%\",\r\n            border : \"solid 1px\",\r\n            borderColor : theme.palette.primary.light,\r\n            borderRadius : 3,\r\n            padding : \"2% 1% 2% 2%\"\r\n        },\r\n        select: {\r\n            width : 200,\r\n            maxHeight : \"38px !important\",\r\n            top : 26\r\n        },\r\n        divUniteMarge: {\r\n            height : 40,\r\n            position : \"relative\",\r\n            margin : \"auto\",\r\n            gridColumn: 3,\r\n            marginLeft : \"15%\"\r\n        },\r\n        affichageUnite: {\r\n            textAlign : \"center\",\r\n            position : \"relative\",\r\n            bottom : 10\r\n        },\r\n        divMarge: {\r\n            gridColumn: 4\r\n        },\r\n        buttonAjouterUnite: {\r\n            display : \"block\",\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        center: {\r\n            textAlign: \"center\"\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const actualise = useSelector(selectActualiseFormule);\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = useState(false);\r\n    const element = useSelector(selectReponse(indexQuestion, indexReponse));\r\n    const tabCatForm = useSelector(selectCategorieFormule);\r\n\r\n    const changeCat = useCallback ((e) => {\r\n        dispatch(handleChangeCat({idQuestion : indexQuestion, idReponse : indexReponse, value : e.target.value, formule1 : tabCatForm[e.target.value].tabFormule[0].nomFormule}))\r\n    }, [dispatch, indexQuestion, indexReponse, tabCatForm]);\r\n\r\n    const changeForm = useCallback ((e) => {\r\n        dispatch(handleChangeForm({idQuestion : indexQuestion, idReponse : indexReponse, value : e.target.value}))\r\n    }, [dispatch, indexQuestion, indexReponse]);\r\n\r\n    return (\r\n        <div key={indexReponse} className={classes.divReponse}>\r\n            <Select className={classes.select} value={element.selectCat} onChange={e => changeCat(e)} input={<Input/>}>\r\n                    {!actualise ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{margin : \"30px auto\", display : \"flex\", justifyContent : \"center\"}}/> \r\n                    : tabCatForm.map((item, index) => <MenuItem key={index} value={index}>{item.nom}</MenuItem>)}\r\n            </Select>\r\n            <Select className={classes.select} value={element.selectForm} onChange={e => changeForm(e)} input={<Input/>}>\r\n                {tabCatForm[element.selectCat] === undefined ? null : tabCatForm[element.selectCat].tabFormule.map((item, index) => <MenuItem key={index} value={item.nomFormule}>{item.nomFormule}</MenuItem>)} \r\n            </Select>\r\n            <div className={classes.divUniteMarge}>\r\n                <Button variant=\"contained\" className={classes.buttonAjouterUnite} onClick={() => setOpen(true)}>Choisir les unités</Button>\r\n                <div className={classes.center}>{afficherUnites(element.unite)}</div>\r\n            </div>\r\n            <ChoixUnite open={open} handleClose={() => setOpen(false)} unite={element.unite} setTabUnite={e => dispatch(handleChangeUnite({idQuestion : indexQuestion, idReponse : indexReponse, tabUnite : e}))}/>\r\n            <div className={classes.divMarge}>\r\n                <SlideBar key={indexReponse} indexQuestion={indexQuestion} indexReponse={indexReponse}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Reponse);","import React, {useCallback, useState} from \"react\";\r\nimport {Button, makeStyles, Accordion, AccordionSummary, AccordionDetails, Fab} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Reponse from './ItemReponse';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectEnregistreFormule, selectPremiereFormule } from \"../../slice/FormulesSlice\";\r\nimport {addReponse, selectTabReponse, removeReponse, selectReponseLength } from '../../slice/EnoncesSlice'\r\n\r\nconst ListeReponses = ({index}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        divListeReponses: {\r\n            width : \"100%\",\r\n            marginTop : \"1%\"\r\n        },\r\n        buttonSupprimerReponse: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark,\r\n            },\r\n            \"&:disabled\": {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            position : \"absolute\",\r\n            right : \"2.5%\",\r\n        },\r\n        accordionDetails: {\r\n            display : \"flex\",\r\n            flexDirection : \"column\",\r\n            justifyContent : \"space-around\"\r\n        }, \r\n        divReponse: {\r\n            marginTop : 20\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const tabReponse = useSelector(selectTabReponse(index))\r\n    const [expanded, setExpanded] = useState(true);\r\n    const tabReponseLength = useSelector(selectReponseLength(index));\r\n    const premierFormule = useSelector(selectPremiereFormule);\r\n\r\n    const add = useCallback (() => {\r\n        dispatch(addReponse({id : index, formule1 : premierFormule}));\r\n    }, [dispatch, index, premierFormule])\r\n\r\n    const remove = useCallback ((indexReponse) => {\r\n        dispatch(removeReponse({indexQuestion : index, indexReponse : indexReponse}));\r\n    }, [dispatch, index])\r\n\r\n    return (\r\n        <div className={classes.divListeReponses}>\r\n            <Accordion square expanded={expanded} onChange={() =>setExpanded(!expanded)}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>Réponses à la question {index+1}</AccordionSummary>\r\n                    <AccordionDetails className={classes.accordionDetails}>\r\n                        <Button \r\n                            disabled={tabReponse.length >= 10}\r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            onClick={() => add()}\r\n                            >\r\n                                Ajouter une réponse\r\n                        </Button>\r\n                        {!isEnregistre ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{margin : \"30px auto\", display : \"flex\", justifyContent : \"center\"}}/>  \r\n                        :\r\n                        Array(tabReponseLength).fill(0).map((_, indexReponse) => (\r\n                            <div className={classes.divReponse} key={indexReponse}>\r\n                                <Fab className={classes.buttonSupprimerReponse} size=\"small\" aria-label=\"delete\"\r\n                                     disabled={tabReponse.length === 1}\r\n                                     onClick={() => remove(indexReponse)}\r\n                                >\r\n                                    <DeleteIcon/>\r\n                                </Fab>                                \r\n                                <Reponse key={indexReponse} indexReponse={indexReponse} indexQuestion={index}/>\r\n                            </div>\r\n                        ))}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ListeReponses);\r\n","import React from 'react';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nconst MyEditor = ({handleChange, value}) => {\r\n\r\n    return (\r\n        <div>\r\n            <SunEditor\r\n                onChange={handleChange}\r\n                defaultValue={value}\r\n                setOptions={{buttonList: [\r\n                    ['undo','redo'],\r\n                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                    ['table', 'list'],\r\n                    ['removeFormat'],\r\n                    ['outdent', 'indent'],\r\n                    ['fullScreen']\r\n                ]}}\r\n                lang=\"fr\"\r\n                placeholder={value === \"\" ? null : \"Tapez votre énoncé ici...\"}\r\n                height=\"300\"\r\n                setDefaultStyle=\"background-color: lightgrey\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyEditor;","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectEnonce, selectEnregistreEnonce, setQuestions } from \"../../slice/EnoncesSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nconst EnregistrementEnonce = () => {\r\n\r\n    const isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const enonce = useSelector(selectEnonce);\r\n\r\n    return (\r\n        <Enregistre isEnregistre={isEnregistreEnonce} action={setQuestions({ idModele : idModele, enonce : enonce.enonceContenu, tabQuestions : enonce.question })} />\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(EnregistrementEnonce);","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport {Button, makeStyles, Fab, Typography} from \"@material-ui/core\";\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport QuestionEnonce from \"../../components/enonce/QuestionEnonce\";\r\nimport useConstructor from \"../../components/use/useContructor\";\r\nimport ListeReponses from \"../../components/enonce/ListeReponses\";\r\nimport SelectionModele from '../../components/SelectionModele'\r\nimport MyEditor from '../../components/enonce/EnTete'\r\nimport useUnload from '../../components/use/useUnload';\r\nimport EnregistrementEnonce from '../../components/enonce/EnregistrementEnonce';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\nimport { addQuestion, removeQuestion, handleChangeEnonce, handleChangeQuestion, selectActualiseEnonce, selectTabQuestionLength, selectEnregistreEnonce, getSujet, selectContenuEnonce } from \"../../slice/EnoncesSlice\";\r\nimport { getCategoriesFormules, selectEnregistreFormule, selectPremiereFormule, selectChangement} from \"../../slice/FormulesSlice\"\r\n\r\nexport default function Enonces() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        enonceSujet: {\r\n            width: \"70%\",\r\n            margin: 'auto'\r\n        },\r\n        divQuestion: {\r\n            boxShadow : \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            width : \"80%\",\r\n            margin : \"40px auto\",\r\n            padding : \"1% 2% 2% 2%\"\r\n        },\r\n        divQuestionReponse: {\r\n            marginTop : 40,\r\n            display: \"flex\",\r\n            justifyContent : \"space-around\",\r\n            flexWrap : \"wrap\",\r\n        },\r\n        buttonAddQuestion: {\r\n            display: \"block\",\r\n            margin: \"50px auto\"\r\n        },\r\n        fabDelete: {\r\n            float : \"right\",\r\n            marginLeft : 20,\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const actualiseEnonce = useSelector(selectActualiseEnonce);\r\n    const isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n    const isEnregistreFormule = useSelector(selectEnregistreFormule);\r\n    const premierFormule = useSelector(selectPremiereFormule);\r\n    const tabQuestionLength = useSelector(selectTabQuestionLength);\r\n    const enTete = useSelector(selectContenuEnonce);\r\n    const changementFormule = useSelector(selectChangement);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistreEnonce) {\r\n            if ( idModele === null){\r\n                setOpen(true);\r\n            }\r\n            if (!isEnregistreFormule) dispatch(getCategoriesFormules(idModele));\r\n            if (!isEnregistreEnonce) dispatch(getSujet(idModele));\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (changementFormule) {\r\n            dispatch(getCategoriesFormules(idModele));\r\n        }\r\n    }, [changementFormule, dispatch, idModele]);\r\n\r\n    useUnload(!isEnregistreEnonce);\r\n\r\n    const deleteQuestion = useCallback((index) => {\r\n        dispatch(removeQuestion(index))\r\n    }, [dispatch])\r\n\r\n    const displayEnonce = () => {\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h1\">énoncé</Typography>\r\n                <hr className={classes.hr}/>\r\n                <div className={classes.enonceSujet}>\r\n                    <MyEditor value={enTete} handleChange={e => dispatch(handleChangeEnonce(e))}/>\r\n                </div>\r\n                {Array(tabQuestionLength).fill(0).map((_, index) => (\r\n                    <div key={index} className={classes.divQuestion}>\r\n                        <div style={{display : \"flex\", justifyContent : \"space-between\"}}>\r\n                            <p style={{fontSize : \"200%\", margin : \"auto 0\"}}>Question {index+1}</p>\r\n                            <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\"\r\n                                disabled={tabQuestionLength === 1}\r\n                                onClick={() => deleteQuestion()}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </Fab>\r\n                        </div>\r\n                        <div className={classes.divQuestionReponse}>\r\n                            <QuestionEnonce index={index} handleChange={e => dispatch(handleChangeQuestion({contenu:e, index: index}))}/>\r\n                            <ListeReponses index={index} idModele={idModele}/>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <Button \r\n                    disabled={tabQuestionLength >= 20}\r\n                    className={classes.buttonAddQuestion} \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    onClick={() => dispatch(addQuestion(premierFormule))}\r\n                >\r\n                        Ajouter une question\r\n                </Button>\r\n                <EnregistrementEnonce/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        idModele === null \r\n        ? <SelectionModele tard={false} setClose={() => setOpen(false)} open={open}/> \r\n        : actualiseEnonce ? displayEnonce() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{margin : \"auto\", display : \"flex\", justifyContent : \"center\"}}/>\r\n    );\r\n}","import React, { useCallback } from 'react';\r\nimport {Typography, Slider, makeStyles} from '@material-ui/core';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changePrecision } from \"../../slice/VariablesAleatoiresSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPrecision } from \"../../slice/VariablesAleatoiresSlice\"\r\n\r\nconst SlideBar = ({ index }) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: 120\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n    \r\n    const dispatch = useDispatch();\r\n    const precisionSlice = useSelector(selectPrecision(index));\r\n\r\n    const valueLabelFormat = (value) => {\r\n        if (value !== 0){\r\n          return `10^${value}`;\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    const handleChange = useCallback((value) => {\r\n        dispatch(changePrecision({ index : index, precision : value}));\r\n    }, [dispatch, index]);\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Slider\r\n                defaultValue={precisionSlice}\r\n                min={-6}\r\n                step={1}\r\n                max={6}\r\n                getAriaValueText={valueLabelFormat}\r\n                valueLabelFormat={valueLabelFormat}\r\n                onChangeCommitted={(_, value) => handleChange(value)}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"non-linear-slider\"\r\n            />\r\n            <Typography gutterBottom>Précision</Typography>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default React.memo(SlideBar);","import React, { useCallback } from 'react';\r\nimport {Fab, Typography, makeStyles} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport DelayInput from '../InputAwait';\r\nimport SlideBar from './SlideBarVariable'\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeNom, changeMax, changeMin, changeModif, selectElement, removeVariable } from \"../../slice/VariablesAleatoiresSlice\";\r\n\r\nconst ItemVariable = ({index, length, onRemove}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        typo: {\r\n            marginTop : 8\r\n        },\r\n        containerVariables: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"0.25fr 1fr 0.10fr 0.5fr 0.5fr 0.5fr 0.25fr\",\r\n            gridTemplateRows: \"1fr\",\r\n            gap: \"0px 30px\",\r\n            margin: \"auto\",\r\n            width: \"90%\",\r\n            marginTop: \"3%\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                gap: \"0px 12px\",\r\n                width: \"95%\",\r\n                marginTop: \"5%\"\r\n            }\r\n        },\r\n        center: {\r\n            margin: \"auto\",\r\n            display: \"block\",\r\n        },\r\n        fabDelete: {\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            },\r\n            color: \"white\"\r\n        },\r\n        fabSave: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fabModif: {\r\n            backgroundColor: theme.palette.primary.light\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const item = useSelector(selectElement(index))\r\n\r\n    const remove = useCallback (() => {\r\n        dispatch(removeVariable(index));\r\n        onRemove();\r\n    }, [dispatch, index, onRemove])\r\n\r\n    const change = useCallback (() => dispatch(changeModif(index)), [dispatch, index])\r\n\r\n    const displayModif = () =>{\r\n        return (\r\n            <>\r\n                <Fab className={classes.fabSave} size=\"small\" aria-label=\"add\"\r\n                    disabled={item.nom === \"\" || parseFloat(item.min) > parseFloat(item.max)} \r\n                    onClick={() => change()}\r\n                >\r\n                    <SaveIcon/>\r\n                </Fab>\r\n                <DelayInput\r\n                    label=\"Nom formule\"\r\n                    delay={300}\r\n                    value={item.nom}\r\n                    onChange={e => dispatch(changeNom({index : index, event : e}))} \r\n                />\r\n                <ArrowRightIcon fontSize=\"large\"/>\r\n                <DelayInput\r\n                    typeNumber={true}\r\n                    label=\"Min\"\r\n                    delayTimeout={300}\r\n                    value={item.min}\r\n                    onChange={e => dispatch(changeMin({index : index, event : e}))}\r\n                />\r\n                <DelayInput\r\n                    typeNumber={true}\r\n                    label=\"Max\"\r\n                    delayTimeout={300}\r\n                    value={item.max}\r\n                    onChange={e => dispatch(changeMax({index : index, event : e}))}\r\n                />\r\n                <SlideBar index={index}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const displayTxt = () =>{\r\n        return (\r\n            <>\r\n                <Fab className={classes.fabModif}\r\n                    size=\"small\" \r\n                    aria-label=\"add\"\r\n                    onClick={() => change()}\r\n                >\r\n                    <CreateIcon/>\r\n                </Fab>\r\n                <Typography className={classes.typo}>{item.nom}</Typography>\r\n                <ArrowRightIcon fontSize=\"large\"/>\r\n                <Typography align=\"center\">Min <br/>{item.min}</Typography>\r\n                <Typography align=\"center\">Max <br/>{item.max} </Typography>\r\n                <Typography align=\"center\">Précision <br/>10^{item.precision}</Typography>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n            <div className={classes.containerVariables}>\r\n                {item.modif ? displayModif() : displayTxt()}\r\n                <Fab className={classes.fabDelete}\r\n                    disabled={length <= 1}\r\n                    size=\"small\" \r\n                    aria-label=\"add\"\r\n                    onClick={() => remove()}\r\n                >\r\n                <DeleteIcon className={classes.center}/>\r\n                </Fab>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ItemVariable);","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectVariablesAleatoires, selectEnregistreVariable, setVariables} from \"../../slice/VariablesAleatoiresSlice\"\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\"\r\n\r\nconst Enregistrement = () => {\r\n    \r\n    const tableauVariables = useSelector(selectVariablesAleatoires);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const isEnregistre = useSelector(selectEnregistreVariable);\r\n\r\n   return (\r\n        <Enregistre isEnregistre={isEnregistre} action={setVariables({tab : tableauVariables, idModele : idModele})} disabled={tableauVariables.some(variables => variables.modif)}/>\r\n   )\r\n\r\n}\r\n\r\nexport default React.memo(Enregistrement);","import React, { useState } from 'react';\r\nimport {Fab, makeStyles, Typography} from '@material-ui/core';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport ItemVariablesAleatoire from '../../components/variable/ItemVariableAleatoire';\r\nimport useConstructor from '../../components/use/useContructor';\r\nimport PopUp from '../../components/PopUp';\r\nimport SelectionModele from '../../components/SelectionModele';\r\nimport EnregistrementVariableAleatoires from '../../components/variable/EnregistrementVariableAleatoires';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectActualise, selectEnregistreVariable, addVariable, undoVariable, getAllVariables, selectTabLength } from \"../../slice/VariablesAleatoiresSlice\"\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\"\r\n\r\nexport default function VariablesAleatoires() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            paddingBottom: \"2%\"\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        fab: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divItemvariable: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"2% 3% 4% 3%\",\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: \"90%\"\r\n            }\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    //gerer pop up pour le undo lors de suppression\r\n    const [openPopUpUndo, setOpenPopUpUndo] = useState(false);\r\n\r\n    //gere la pop up de selection de modelee\r\n    const [openModele, setOpenModele] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const lengthTab = useSelector(selectTabLength);\r\n    //savoir si les variables sont récupérées de la BD\r\n    const isEnregistre = useSelector(selectEnregistreVariable);\r\n    //savoir si la recupération les données sont conectées à la BD\r\n    const isActualise = useSelector(selectActualise)\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n\r\n    useConstructor(() => {\r\n        //si pas encore récupérées de la BD \r\n        if (!isEnregistre) {\r\n            idModele === null ? setOpenModele(true) : dispatch(getAllVariables(idModele));\r\n        }\r\n    });\r\n\r\n    const undo = () =>{\r\n        dispatch(undoVariable());\r\n        setOpenPopUpUndo(false);\r\n     }\r\n\r\n    const displayVariable = () =>{\r\n        return (\r\n            <div className={classes.root}>\r\n                <Typography variant=\"h1\">Variables aléatoires</Typography>\r\n                <hr className={classes.hr}/>\r\n                <Fab className={classes.fab}\r\n                    disabled={lengthTab >= 75}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => dispatch(addVariable())}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n                <div className={classes.divItemvariable}>\r\n                    {/* EVITE DE FAIRE PASSER LE TABLEAU DE VARIABLE ET DE MODIFIER TOUTES LES VARIABLES A CHAQUE CHANGEMENT D'UNE */}\r\n                    {Array(lengthTab).fill(0).map((_, index) => (\r\n                        <ItemVariablesAleatoire onRemove={() => setOpenPopUpUndo(true)} length={lengthTab} key={index} index={index}/>\r\n                    ))}\r\n                <PopUp \r\n                    message=\"Variable supprimée\" \r\n                    actionName=\"RETOUR\" \r\n                    action={() => undo()} \r\n                    open={openPopUpUndo} \r\n                    handleClose={() => setOpenPopUpUndo(false)}\r\n                    pos=\"right\"\r\n                />\r\n                </div>\r\n                <EnregistrementVariableAleatoires/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        idModele === null \r\n        ? <SelectionModele tard={false} setClose={() => setOpenModele(false)} open={openModele}/> \r\n        : isActualise ? displayVariable() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{margin : \"auto\", display : \"flex\", justifyContent : \"center\"}}/>\r\n    );\r\n}","import React, {useState, useEffect} from 'react'\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport { Table, TableContainer, TableHead, TableRow, Paper, TableCell, TableBody, \r\n    Typography,Collapse, Box, IconButton, DialogActions, Button, TextField, makeStyles } from '@material-ui/core'\r\n\r\nimport { Dialog, DialogContent, DialogTitle} from '@material-ui/core'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeReponseJuste, selectEssaisWithID, changeCommentaire, changeNote,\r\n    setCorrigeTrue, selectUneQuestionJuste, setAvisApplication } from '../../slice/ConsulterSlice'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    boxReponses: {\r\n        paddingBottom: 0,\r\n        paddingTop: 0,\r\n        backgroundColor: \"#f2f2f2\"\r\n    },\r\n    commentaire: {\r\n        width : \"100%\"\r\n    },\r\n    noteTextField : {\r\n        width : '30px'\r\n    },\r\n    noteInput : {\r\n        textAlign : 'center',\r\n        fontWeight : 'bold'\r\n    }\r\n}));\r\n\r\nexport default function EssaiEtudiant(props){\r\n    const essai = useSelector(selectEssaisWithID(props.indexEssai))\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [actualise, setActu] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            if (!actualise){\r\n                dispatch(setAvisApplication())\r\n                setActu(true)\r\n            }\r\n        }\r\n        \r\n    }, [actualise, dispatch, props.open]);\r\n    \r\n\r\n    const handleClose = () =>{\r\n        setActu(false)\r\n        props.setOpen(false)\r\n    }\r\n\r\n    const appliquerCorrection = () =>{\r\n        dispatch(setCorrigeTrue(props.indexEssai))\r\n        handleClose();\r\n    }\r\n\r\n    return(\r\n        essai === undefined ?\r\n        null :\r\n        <Dialog \r\n            open={props.open} \r\n            maxWidth=\"md\"\r\n            fullWidth={true}\r\n            onClose={handleClose}>\r\n            <DialogTitle>\r\n                Essai du {moment(essai.dateEssai).format(\"DD/MM/YYYY\")}\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\"/>\r\n                                <TableCell align=\"center\">Numéro Question</TableCell>\r\n                                <TableCell align=\"center\">Réponses Justes</TableCell>\r\n                                <TableCell align=\"center\">Réponses Attendues</TableCell>\r\n                                <TableCell align=\"center\">Question Juste?</TableCell>\r\n                                <TableCell align=\"center\"  \r\n                                title=\"Attention, cette note est à titre indicatif et ne concerne que cet essai\"\r\n                                >Votre Note</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {essai.tabQuestions.map((item, index)=>{\r\n                            return(\r\n                                <Question question={item} indexQuestion={index} indexEssai={props.indexEssai}/>\r\n                            )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={appliquerCorrection}>Appliquer la correction</Button>\r\n                <Button onClick={handleClose}>Fermer</Button>\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nfunction IconeJuste(props){\r\n    return(\r\n        props.juste\r\n        ?\r\n        <CheckIcon/>\r\n        :\r\n        <ClearIcon/>\r\n    )\r\n}\r\n\r\nfunction Question(props){\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const questionCorrigee = useSelector(selectUneQuestionJuste(props.question.num))\r\n\r\n    //s'occupe de changer le bouléen disant qu'une réponse est juste ou non d'après le prof\r\n    const handleClickJuste = (indexQ, indexR) =>{\r\n        dispatch(changeReponseJuste({\r\n            indexE : props.indexEssai,\r\n            indexQ : indexQ,\r\n            indexR : indexR\r\n        }))\r\n    }\r\n\r\n    //s'occupe de changer le commentaire du prof sur une question\r\n    const handleChangeCommentaire = (event) =>{\r\n        dispatch(changeCommentaire({\r\n            indexE : props.indexEssai,\r\n            indexQ : props.indexQuestion,\r\n            commentaire : event.target.value\r\n        }))\r\n    }\r\n\r\n    //s'occupe de changer la note\r\n    const handleChangeNote = (event) =>{\r\n        dispatch(changeNote({\r\n            indexE : props.indexEssai,\r\n            indexQ : props.indexQuestion,\r\n            note : event.target.value\r\n        }))\r\n    }\r\n\r\n    //s'occupe de donner le nombre de réponses correctes dans cette question\r\n    const nbReponsesJuste = () =>{\r\n        let nb = 0\r\n        props.question.tabReponses.forEach(reponse => {\r\n            if (reponse.justeProf) {\r\n                nb++\r\n            }            \r\n        })\r\n        return nb\r\n    }\r\n\r\n    //la flècle pour afficher plus ou moins d'information sur la question\r\n    const collapseArrow = () =>{\r\n        return(\r\n        <IconButton onClick={()=>setOpen(!open)}>\r\n            {\r\n            open \r\n            ? \r\n            <KeyboardArrowUpIcon/> \r\n            : \r\n            <KeyboardArrowDownIcon/> \r\n            }\r\n        </IconButton>\r\n        )\r\n    }\r\n\r\n    const questionJuste = () =>{\r\n        return(<IconeJuste juste={\r\n            props.question.tabReponses.length === questionCorrigee.tabReponses.length &&\r\n            nbReponsesJuste() === questionCorrigee.tabReponses.length }/>)\r\n    }\r\n\r\n    //bouton du prof pour dire si une réponse est juste ou non\r\n    //paramètres : index de la question, index de la reponse, bool\r\n    const boutonJustePourProf = (indexQ, indexR, juste) =>{\r\n        return(\r\n            <IconButton onClick={e=>handleClickJuste(indexQ, indexR)}>\r\n                <IconeJuste juste={juste}/>\r\n            </IconButton>\r\n        )\r\n    }\r\n\r\n    //affiche la zone où le professeur peut saisir son commentaire\r\n    const commentaireProf = () =>{\r\n        return(\r\n            <>\r\n            <Typography variant = \"h6\" padding={5}>Vos commentaires sur ce travail :</Typography>\r\n            <TextField value={props.question.commentProf} onChange={handleChangeCommentaire}\r\n                multiline rows={4} variant=\"outlined\" placeholder=\"Écrivez vos commentaires\"\r\n                className={classes.commentaire}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const note = () =>{\r\n        return(\r\n            <TextField className={classes.noteTextField} align=\"center\"\r\n            onChange={e=>handleChangeNote(e)}\r\n            value={props.question.note}\r\n            InputProps={{\r\n                className : classes.noteInput\r\n            }}/>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <TableRow>\r\n            {/* On affiche la fleche pour avoir plus/moins d'information */}\r\n            <TableCell align=\"center\">{collapseArrow()}</TableCell>\r\n            {/* Numéro de la question */}\r\n            <TableCell align=\"center\">{props.indexQuestion + 1}</TableCell>\r\n            {/* nombre de réponses justes dans la question */}\r\n            <TableCell align=\"center\">{nbReponsesJuste()}</TableCell>\r\n            {/* nombre de réponses attendues */}\r\n            <TableCell align=\"center\">{questionCorrigee.tabReponses.length}</TableCell>\r\n            {/* voit si la question est juste */}\r\n            <TableCell align=\"center\">{questionJuste()}</TableCell>\r\n            {/* note */}\r\n            <TableCell align=\"center\">{note()}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n            <TableCell className={classes.boxReponses} colSpan={6}>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <Box margin={1}>\r\n                        <Typography variant=\"h6\" gutterBottom >Contenu de la question</Typography>\r\n                        {ReactHtmlParser(questionCorrigee.contenu)}\r\n                        <Typography variant=\"h6\" gutterBottom >Reponses</Typography>\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">\r\n                                        Valeur donnée\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        Ecart avec la bonne valeur\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        Conseil de l'application\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        Votre avis\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                    {props.question.tabReponses.map((reponse, indexReponse) =>\r\n                                    <TableRow>\r\n                                        {/* Valeur donnée par l'étudiant */}\r\n                                        <TableCell align=\"center\" padding='none'>\r\n                                            {reponse.value}\r\n                                        </TableCell>\r\n                                        {/* Ecart avec la valeur juste */}\r\n                                        <TableCell align=\"center\" padding='none'>\r\n                                            {reponse.ecart}\r\n                                        </TableCell>\r\n                                        {/* l'avis de l'application pour savoir si la réponse est juste */}\r\n                                        <TableCell align=\"center\" padding='none'>\r\n                                            <IconeJuste juste={reponse.justeApp}/>\r\n                                        </TableCell>\r\n                                        {/* Réponse juste où non */}\r\n                                        <TableCell align=\"center\" padding='none'>\r\n                                            {boutonJustePourProf(props.indexQuestion, indexReponse, reponse.justeProf)}\r\n                                        </TableCell>\r\n                                    </TableRow>)\r\n                                    }\r\n                                </TableBody>\r\n                        </Table>\r\n                        {\r\n                            props.question.justif !== \"\" ?\r\n                            <>\r\n                            <Typography variant = \"h6\" padding={5}>Justification de l'étudiant :</Typography>\r\n                            <p>{props.question.justif}</p>\r\n                            </>\r\n                            :\r\n                            <Typography variant = \"h6\">Pas de justification de l'étudiant</Typography>\r\n                        }\r\n\r\n                        {commentaireProf()}\r\n                    </Box>\r\n                </Collapse>\r\n            </TableCell>\r\n        </TableRow>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    makeStyles\r\n} from '@material-ui/core'\r\n\r\nexport default function Message(props){\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n        messageField: {\r\n            width: \"100%\"\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    //s'occupe du changement du message\r\n    const handleChangeMessage = (event) =>{\r\n        props.handleChangeMessage(event.target.value)\r\n    }\r\n\r\n    //ferme le dialog\r\n    const handleClose = () =>{\r\n        props.setOpen(false)\r\n    }\r\n\r\n    //envoie le message\r\n    const handleSend = () =>{\r\n        props.handleSend()\r\n        handleClose()\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={props.open}\r\n            maxWidth=\"md\"\r\n            fullWidth={true}\r\n            onClose={handleClose}\r\n            rows={4}\r\n            >\r\n            <DialogTitle>\r\n                <Typography variant=\"h6\">Message adressé à {props.destinataire}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField className={classes.messageField} autoFocus multiline rows={4}\r\n                variant=\"outlined\" placeholder=\"Saisissez votre message\"\r\n                onChange={e => handleChangeMessage(e)} value={props.message} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>\r\n                    Annuler\r\n                </Button>\r\n                <Button onClick={handleSend}>\r\n                    Envoyer\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\nimport moment from 'moment';\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {ListItemText, ListItem, List, Divider, Button, ListItemAvatar,Avatar, makeStyles} from '@material-ui/core'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectEssais, selectMessage, selectReponsesJustes, selectEtudiantConsulter } from '../../slice/ConsulterSlice'\r\nimport { changeMessage, getReponsesCorDB, getEssaisDB } from '../../slice/ConsulterSlice'\r\n\r\nimport EssaiEtudiant from '../../components/correction/EssaiEtudiant'\r\nimport Message from '../../components/correction/Message';\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nexport default function Consulter(props){\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        messageBouton: {\r\n            float : \"right\",\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //le tableau d'essai\r\n    const tabEssais = useSelector(selectEssais)\r\n\r\n    //tableau des réponses qui sont justes\r\n    const tabReponsesJustes = useSelector(selectReponsesJustes)\r\n\r\n    //message qui est à envoyer\r\n    const message = useSelector(selectMessage)\r\n\r\n    //index de l'essai sur lequel les détails du dialogue EssaiEtudiant\r\n    const [indexEssaiDialog, setIndexEssai] = useState(0)\r\n\r\n    //booléen pour l'ouvertire des détails de l'essai\r\n    const [openDetails, setOpenDetails] = useState(false)\r\n\r\n    //booléen pour l'ouverture du message\r\n    const [openMessage, setOpenMessage] = useState(false)\r\n\r\n    //numéro de l'étudiant\r\n    const etudiant = useSelector(selectEtudiantConsulter)\r\n\r\n    useConstructor(() => {\r\n        dispatch(getReponsesCorDB({\r\n            idPromo : etudiant.id_promo,\r\n            idEtudiant : etudiant.id_etudiant\r\n        }));\r\n        dispatch(getEssaisDB({\r\n            idEtudiant : etudiant.id_etudiant\r\n        }))\r\n    });\r\n\r\n    //affiche un dialog lors d'un clic sur un essai pour avoir plus de détail\r\n    //Paramètres : l'index de l'essai\r\n    const handleClickDetails = (index) =>{\r\n        setIndexEssai(index)\r\n        setOpenDetails(true)\r\n    }\r\n\r\n    //s'occupe de l'ouverture de l'éditeur du message\r\n    const hancleClickMessage = () =>{\r\n        setOpenMessage(true)\r\n    }\r\n\r\n    //s'occupe du changement du message au fur et à mesure de sa saisie\r\n    const handleChangeMessage = (message) =>{\r\n        dispatch(changeMessage(message))\r\n    }\r\n\r\n    //PAS ENCORE FAIT LE LIEN A L'API\r\n    //envoie le message à l'étudiant\r\n    const handleSend = () =>{\r\n        console.log(\"lien avec l'api pour envoyer pas encore fait\")\r\n        console.log(message)\r\n    }\r\n\r\n    //le nombre de question juste dans un essai\r\n    //Paramètre : index de l'essai\r\n    const nbQuestionsJustes = (index) =>{\r\n        //le nombre de questions justes\r\n        let nb = 0\r\n        //on analyse chaque question\r\n        tabEssais[index].tabQuestions.forEach(question => {\r\n            //on regarde si il y a le bon nombre de réponses justes\r\n            let indexQ = _.findIndex(tabReponsesJustes, function(o) { return o.num === question.num; })\r\n\r\n            let questionJuste = question.tabReponses.length === tabReponsesJustes[indexQ].tabReponses.length\r\n            let i = 0\r\n            //on regarde si toutes les réponses sont justes\r\n            while (questionJuste && i < question.tabReponses.length){\r\n                questionJuste = question.tabReponses[i].justeProf\r\n                i++\r\n            }\r\n            if (questionJuste){\r\n                nb++\r\n            }\r\n        })\r\n        return nb\r\n    }\r\n\r\n    //retourne le nombre de questions\r\n    const nbQuestions = () =>{\r\n        return tabReponsesJustes.length\r\n    }\r\n\r\n    //s'occupe de l'icone qui indique si l'essai a été revu par le professeur\r\n    const corrigeIcon = (revu) =>{\r\n        if (revu) {\r\n            return(\r\n                <Avatar color=\"primary\">\r\n                    <CheckIcon />\r\n                </Avatar>\r\n            )\r\n        }else{\r\n            return(\r\n                <Avatar color=\"error\">\r\n                    <CloseIcon />\r\n                </Avatar>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        //on redirige vers la page de correction si il n'y a pas d'id étudiant donné\r\n        etudiant.id_etudiant === undefined  ?\r\n        <Redirect to=\"/prof/gestion-correction\"/>\r\n        :\r\n        \r\n        <div>\r\n            <Button className={classes.messageBouton} variant=\"contained\" color=\"primary\" onClick={hancleClickMessage}>\r\n                <SendIcon/>Envoyer un message à l'étudiant\r\n            </Button>\r\n            <h1>\r\n                Etudiant : {etudiant.prenom + ' ' + etudiant.nom}\r\n            </h1>   \r\n\r\n            {tabEssais === undefined || tabReponsesJustes === undefined ?\r\n            null :\r\n            <>\r\n            <List>\r\n                <Divider />\r\n                {tabEssais.map((item, index) => (\r\n                    <>\r\n                        <ListItem button onClick={e => handleClickDetails(index)}>\r\n                            <ListItemText\r\n                                primary={\"Essai du \" + moment(item.dateEssai).format(\"DD/MM/YYYY\")}\r\n                                secondary={\"Questions justes : \" + nbQuestionsJustes(index)\r\n                                    +  \"/\" + nbQuestions()}/>\r\n                            <ListItemAvatar>\r\n                                {corrigeIcon(item.corrige)}\r\n                            </ListItemAvatar>\r\n                        </ListItem>\r\n\r\n                        <Divider />\r\n                    </>\r\n                 ) )}\r\n            </List>\r\n\r\n            <EssaiEtudiant indexEssai={indexEssaiDialog} open={openDetails}\r\n                setOpen={setOpenDetails}/>\r\n            </>\r\n            }\r\n            \r\n\r\n            <Message open={openMessage} destinataire={etudiant.prenom + \" \" + etudiant.nom} setOpen={setOpenMessage} \r\n            message={message} handleChangeMessage={handleChangeMessage} handleSend={handleSend}/>\r\n               \r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    DialogContentText,\r\n    Select,\r\n    InputLabel,\r\n    Input,\r\n    MenuItem,\r\n    FormControl,\r\n    //makeStyles\r\n} from '@material-ui/core';\r\n\r\nimport PopUp from '../PopUp';\r\n\r\nimport { selectModele } from \"../../slice/ModeleSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { attributionSujetAPI } from '../../utils/api'\r\n\r\nexport default function DialogAssociationModele({open, setClose, selectPromo}){\r\n    // const useStyles = makeStyles((theme) => ({\r\n    //     formControl: {\r\n    //         width: 200\r\n    //     }\r\n    // }));\r\n    //const classes = useStyles();\r\n\r\n    const modele = useSelector(selectModele);\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [selectionModele, setSelectionModele] = useState(\"\");\r\n    \r\n    const envoieAttribution = () => {\r\n        attributionSujetAPI(selectPromo, selectionModele);\r\n        setSelectionModele(\"\");\r\n        setOpenPopUp(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={() => setClose()}>\r\n                <DialogTitle>Association à un modèle</DialogTitle>\r\n                <DialogContent>\r\n                        <DialogContentText>Associer une promotion à un modéle (empechera par la suite de modifier le modèle) ?</DialogContentText>\r\n                        <FormControl style={{width : 200}}> \r\n                            <InputLabel>Modèle selectionné</InputLabel>\r\n                            <Select value={selectionModele} onChange={e => setSelectionModele(e.target.value)} input={<Input/>}>\r\n                                {modele.tabName.map((element, index) => (\r\n                                    <MenuItem key={index} value={element.index}>{element.nom}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setClose()} color=\"primary\">Abandonner</Button>\r\n                    <Button disabled={selectionModele === \"\"} onClick={() => {\r\n                        envoieAttribution();\r\n                        setClose();\r\n                    }} color=\"primary\" autoFocus>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <PopUp severity=\"success\" message=\"Association réussie\" open={openPopUp} handleClose={() => setOpenPopUp(false)}/>\r\n        </>\r\n    )\r\n\r\n}","import React, {useState} from 'react'\r\nimport { Dialog, Button, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@material-ui/core';\r\n\r\nimport PopUp from '../PopUp';\r\nimport DropFile from '../DropFile';\r\n\r\nimport { etudiantNewAPI } from '../../utils/api'\r\n\r\nexport default function AjoutListeEtu ({open, setClose, selectPromo}){\r\n\r\n    const [excel, setExcel] = useState(\"\");\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n\r\n    const envoieExcel = () => {\r\n        const data = new FormData();\r\n        data.append('fileUploaded', excel);\r\n        etudiantNewAPI(selectPromo, data).then(fichier => console.log(fichier)).catch((err) => console.log(err));\r\n        setOpenPopUp(true);\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={() => setClose()}>\r\n            <DialogTitle>Charger une promotion</DialogTitle>\r\n            <DialogContent>\r\n                    <DialogContentText>Charger la liste excel de vos étudiants </DialogContentText>\r\n                    <DropFile typeFile='.xlsx' compressImage={false} changeFile={e => setExcel(e)}  message=\"Charger la liste des étudiants de la promotion\"/>\r\n                    <PopUp severity=\"success\" message=\"Etudiants ajoutés à la promotion\" open={openPopUp} handleClose={() => setOpenPopUp(false)}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => setClose()} color=\"primary\">Abandonner</Button>\r\n                <Button disabled={excel === \"\"} onClick={() => envoieExcel()} color=\"primary\" autoFocus>Charger</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {\r\n  Button, \r\n  Toolbar,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n  Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination,\r\n  TableRow\r\n} from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { selectEtudiants } from '../../slice/PromoSlice';\r\n\r\nexport default function StickyHeadTable() {\r\n\r\n  // const useStyles = makeStyles((theme) => ({\r\n  //   linkConsulter: {\r\n  //     textDecoration: \"none\",\r\n  //     color: \"white\"\r\n  //   }\r\n  // }));\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const rowsPerPage = 10;\r\n\r\n  const tabEtudiants = useSelector(selectEtudiants);\r\n\r\n  const columns = [\r\n    {id: 'nom', label: 'Nom', minWidth: 170 },\r\n    {id: 'prenom', label: 'Prénom', minWidth: 170 },\r\n    {id: 'mdp', label: 'Mot de passe', minWidth: 170, align: 'right'},\r\n    {id: 'id', label: 'Sujet n°', minWidth: 170, align: 'right'},\r\n    {id: 'modele', label: \"Modèle 3D\", minWidth: 170, align: 'right'},\r\n  ];\r\n\r\n  //gère le changement de page\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const displayColumn = (column, row) => {\r\n\r\n    if (column.id === 'mdp'){\r\n        return (\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n                Réinitialiser mot de passe\r\n            </Button>\r\n        )\r\n    }\r\n    else if (column.id === 'modele'){\r\n        return (\r\n            <Button startIcon={row.id%2 === 0 ? <CheckIcon/> : <CloseIcon/>} variant=\"outlined\" color={row.id%2 === 0 ? \"primary\" : \"default\"}>\r\n                Ajouter les modèles 3D pour ce sujet\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            row[column.id]\r\n        )\r\n    }\r\n\r\n  }\r\n\r\n  const [filtre, setFiltre] = useState(false);\r\n\r\n  const EnhancedTableToolbar = () => {\r\n  \r\n    return (\r\n      <Toolbar>\r\n          <Typography style={{width : \"98%\"}} variant=\"h6\" id=\"tableTitle\" component=\"div\">Promotion</Typography>\r\n          <Tooltip title=\"filtrer les modèles déja ajoutés\">\r\n            <IconButton onClick={() => setFiltre(!filtre)} aria-label=\"filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <Paper>\r\n    <EnhancedTableToolbar/>\r\n      <TableContainer >\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n \r\n          {/* affiche les lignes de rowd une par une dans le tableau */}\r\n          <TableBody>\r\n            {/* affiche les lignes 10 par 10 */}\r\n            {tabEtudiants.filter(elem => filtre ? elem.id === 87 : true).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover tabIndex={-1} key={row.nom}>\r\n                  {/* affiche les infos pour chaque colonne d'élément de rows */}\r\n                  {columns.map((column) => (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                            {displayColumn(column, row)}\r\n                      </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[]}\r\n        component=\"div\"\r\n        count={tabEtudiants.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n      />\r\n      \r\n    </Paper>\r\n    \r\n  );\r\n}","import React, {useState} from 'react'\r\nimport { TextField, Button, Select, MenuItem, Input, InputLabel, FormControl, makeStyles, Fab, Typography } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport AssociationModele from '../../components/promo/DialogAssociationModele';\r\nimport AjoutListeEtu from '../../components/promo/AjoutListeEtu';\r\nimport Table from '../../components/promo/TableEtudiant';\r\nimport useConstructor from '../../components/use/useContructor'\r\n\r\nimport { getAllPromo, selectPromo, selectEnregistrePromo, addPromo, removePromo, getEtudiantsPromo } from \"../../slice/PromoSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function Promo() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        mapDisplayEtu: {\r\n            display : \"flex\",\r\n            justifyContent : \"space-around\"\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divNomPromo: {\r\n            display : \"flex\",\r\n            justifyContent : \"center\",\r\n            marginTop : \"3%\",\r\n        },\r\n        button: {\r\n            display : \"block\",\r\n            margin : \"20px auto\"\r\n        },\r\n        divPromo: {\r\n            boxShadow : \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding : \"1% 0.5%\",\r\n            width : \"80%\",\r\n            margin : \"auto\",\r\n        },\r\n        typo: {\r\n            textAlign: \"center\"\r\n        },\r\n        form: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginBottom: 20\r\n        },\r\n        formControl: {\r\n            display : \"block\",\r\n            margin : \"30px auto\",\r\n            width : \"100%\"\r\n        },\r\n        divSelectPromo: {\r\n            display : \"grid\",\r\n            gridTemplateColumns : \"1fr 1fr\",\r\n            margin : \"auto\",\r\n            width : \"18%\",\r\n            gridGap : 20\r\n        },\r\n        labelSelectPromo: {\r\n            position : \"relative\"\r\n        },\r\n        selectPromo: {\r\n            width : 200,\r\n            marginTop : \"0 !important\"\r\n        },\r\n        menuItem: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        fabDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [nouvellePromo, setNouvellePromo] = useState([]);\r\n    const [select, setSelect] = useState(\"\");\r\n    const [assoModele, setAssoModele] = useState(false);\r\n    const [listEtu, setListEtu] = useState(false);\r\n\r\n    const isEnregistre = useSelector(selectEnregistrePromo);\r\n    const tabPromo = useSelector(selectPromo);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) dispatch(getAllPromo());\r\n    });\r\n\r\n    const ajouterPromo = () => {\r\n        dispatch(addPromo(nouvellePromo)).then(() => dispatch(getAllPromo()));\r\n        setNouvellePromo(\"\");\r\n    }\r\n\r\n    const remove = () => {\r\n        dispatch(removePromo(select)).then(() => dispatch(getAllPromo()));\r\n        setSelect(\"\");\r\n    }\r\n\r\n    const changePromo = (e) => {\r\n        setSelect(e.target.value)\r\n        dispatch(getEtudiantsPromo(e.target.value.idPromo))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h1\">PROMOTION</Typography>\r\n            <hr className={classes.hr}/>\r\n            <div className={classes.divPromo}>\r\n                <form className={classes.form}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.divSelectPromo}>\r\n                            <div>\r\n                                <InputLabel className={classes.labelSelectPromo}>Promotion selectionnée</InputLabel>\r\n                                <Select className={classes.selectPromo} value={select} onChange={(e) => changePromo(e)} input={<Input/>}>\r\n                                    <MenuItem className={classes.menuItem} value={\"ajoutPromo\"}>Ajouter promotion</MenuItem>\r\n                                    {tabPromo === undefined  ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{margin : \"30px auto\", display : \"flex\", justifyContent : \"center\"}}/> \r\n                                    : tabPromo.map((element, index) => (\r\n                                        <MenuItem key={index} value={element}>{element.nom}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\"\r\n                                disabled={select.idPromo === \"\" || select === \"ajoutPromo\"}\r\n                                onClick={() => remove()}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </Fab>\r\n                        </div>\r\n                        {select !== \"ajoutPromo\" \r\n                            ? <>\r\n                                <Button className={classes.button} disabled={select===\"\"} variant=\"contained\" color=\"primary\" onClick={() => setAssoModele(true)}>Associer à un modèle</Button>\r\n                                <Button className={classes.button} disabled={select===\"\"} variant=\"contained\" color=\"primary\" onClick={() => setListEtu(true)}>Ajouter une liste d'étudiants</Button>\r\n                                <AssociationModele selectPromo={select.idPromo} open={assoModele} setClose={() => setAssoModele(false)} />\r\n                                <AjoutListeEtu selectPromo={select.idPromo} open={listEtu} setClose={() => setListEtu(false)}/>\r\n                                {select !== \"\" ? <Table/> : null}\r\n                            </>\r\n                            :<div className={classes.divNomPromo}>\r\n                                <TextField autoFocus size=\"small\" label=\"Nom de la promo\" variant=\"outlined\" required value={nouvellePromo} onChange={e => setNouvellePromo(e.target.value)}/>\r\n                                <Button className={classes.button} disabled={nouvellePromo === \"\"} variant=\"outlined\" onClick={() => ajouterPromo()}>Créer</Button>\r\n                            </div>\r\n                        }\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport { Button, Table, TableCell, TableHead, TableRow, TableBody, TextField, Typography, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { getAllUnite, selectUnites, enregistreUnites, selectActualise, addUnite, setIndexEnModif, selectIndexEnMofid, changeNomComplet, changeAbreviation, deleteUnite, selectEnregistreUnite, setEnregistre } from '../../slice/UniteSlice'\r\nimport PopUp from '../../components/PopUp';\r\n\r\nexport default function GestionUnites() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        tableauUnite: {\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        addButton: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        deleteButton: {\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            },\r\n            color: \"white\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        modifButton: {\r\n            backgroundColor: theme.palette.primary.light,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.secondary.main\r\n            },\r\n            color: \"black\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            marginRight: \"10%\"\r\n        },\r\n        tableCell: {\r\n            textAlign: \"center\"\r\n        },\r\n\r\n        tableRow: {\r\n            backgroundColor: theme.palette.secondary.light\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const tabUnites = useSelector(selectUnites);\r\n\r\n    const actualise = useSelector(selectActualise);\r\n\r\n    const indexEnModif = useSelector(selectIndexEnMofid);\r\n\r\n    const isEnregistre = useSelector(selectEnregistreUnite);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            dispatch(getAllUnite())\r\n        }\r\n    })\r\n\r\n    //permet de savoir si ce nom est utilisé une seule fois dans le tabUnites\r\n    //renvoie aussi une valeur fausse si les chaines sont vides\r\n    const modifIsUnique = () => {\r\n\r\n        if (indexEnModif < 0) { // si il n'y pas de champ qui est en train d'être modifié\r\n            return true\r\n        } else if (tabUnites[indexEnModif].abrev.length === 0 ||\r\n            tabUnites[indexEnModif].nom.length === 0) { // si l'un des champ est vide\r\n            return false\r\n        }\r\n\r\n\r\n        for (let i = 0; i < tabUnites.length; i++) {\r\n            let verif = (i === indexEnModif) ||\r\n                (tabUnites[i].nom !== tabUnites[indexEnModif].nom &&\r\n                    tabUnites[i].abrev !== tabUnites[indexEnModif].abrev)\r\n\r\n            if (!verif) return false // renvoie faux si le nom ou l'abreviation est retrouvée autre part\r\n        }\r\n\r\n        return true // retourne vrai par défaut\r\n\r\n    }\r\n\r\n    //change le nom complet d'une unité au fur et à mesure de sa saisie\r\n    //paramètres : index de l'unité et event (valeur)\r\n    const handleChangeNomComplet = (index, event) => {\r\n        dispatch(changeNomComplet({\r\n            index: index,\r\n            value: event.target.value\r\n        }));\r\n    }\r\n\r\n    //change le nom complet d'une unité au fur et à mesure de sa saisie\r\n    //paramètres : index de l'unité et event (valeur)\r\n    const handleChangeAbreviation = (index, event) => {\r\n        dispatch(changeAbreviation({\r\n            index: index,\r\n            value: event.target.value\r\n        }));\r\n    }\r\n\r\n    //enregistre l'unité dans la base de données\r\n    const enregistrer = () => {\r\n        dispatch(enregistreUnites(tabUnites))\r\n        setEnregistre(true)\r\n    }\r\n\r\n    //ajoute une unité dans le tableau (n'enregistre pas dans la BD)\r\n    const handleAjouterUnite = () => {\r\n        dispatch(addUnite())\r\n    }\r\n\r\n    const handleDeleteUnite = (index) => {\r\n        if (tabUnites[index].nom !== \"Sans Unité\") {\r\n            dispatch(deleteUnite(index))\r\n        }\r\n    }\r\n\r\n    const handleModifUnite = (index) => {\r\n        dispatch(setIndexEnModif(index))\r\n    }\r\n\r\n    const handleSaveLocal = () => {\r\n        dispatch(setIndexEnModif(-1))\r\n    }\r\n\r\n    const buttonsUniteSansModif = (index) => {\r\n        return (\r\n            tabUnites[index].nom !== \"Sans Unité\"\r\n                ?\r\n                <div>\r\n                    <IconButton className={classes.modifButton} onClick={e => handleModifUnite(index)} disabled={!modifIsUnique()}>\r\n                        <CreateIcon />\r\n                    </IconButton>\r\n                    <IconButton className={classes.deleteButton} onClick={e => handleDeleteUnite(index)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </div>\r\n                :\r\n                null\r\n        )\r\n    }\r\n\r\n    //affiche l'unité en fonction du fait qu'il est en train d'être modifié ou non\r\n    const afficherUnite = (unite, index) => {\r\n        return (\r\n            index !== indexEnModif ?\r\n                <>\r\n\r\n                    <TableCell className={classes.tableCell}> {unite.nom} </TableCell>\r\n                    <TableCell className={classes.tableCell}> {unite.abrev} </TableCell>\r\n                    <TableCell className={classes.tableCell}> {buttonsUniteSansModif(index)} </TableCell>\r\n\r\n                </>\r\n                :\r\n                <>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <TextField value={unite.nom}\r\n                            onChange={e => handleChangeNomComplet(index, e)} />\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <TextField value={unite.abrev}\r\n                            onChange={e => handleChangeAbreviation(index, e)} />\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <IconButton onClick={e => handleSaveLocal()} disabled={!modifIsUnique()}>\r\n                            <SaveIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={e => handleDeleteUnite(index)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </TableCell>\r\n                </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        !actualise\r\n            ?\r\n            <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n            :\r\n            <div>\r\n                <Typography variant=\"h1\">Gestion des unités</Typography>\r\n                <hr className={classes.hr} />\r\n\r\n                <Button className={classes.addButton} variant=\"contained\" color=\"primary\" onClick={handleAjouterUnite}> Ajouter une unité </Button>\r\n\r\n                <Table className={classes.tableauUnite}>\r\n                    <TableHead>\r\n                        <TableRow className={classes.tableRow}>\r\n                            <TableCell className={classes.tableCell}> Nom Complet </TableCell>\r\n                            <TableCell className={classes.tableCell}> Abréviation </TableCell>\r\n                            <TableCell /> {/*  Pour les boutons */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tabUnites.map((unite, index) => {\r\n                            return (\r\n                                <TableRow key={index}>\r\n                                    {afficherUnite(unite, index)}\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n                <PopUp\r\n                    open={indexEnModif < 0 && !isEnregistre}\r\n                    handleClose={() => enregistrer()}\r\n                    actionName=\"enregistrer\"\r\n                    action={() => enregistrer()}\r\n                    message=\"Cliquez ici pour enregistrer les unités\"\r\n                    severity=\"warning\" \r\n                />\r\n            </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {Button, TextField, Fab, InputAdornment, makeStyles} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeReponse, peutSupprimer, deleteReponse, setUnite} from '../../slice/RepondreQuestionsSlice'\r\n// import { selectUnites } from '../../slice/UniteSlice'\r\n\r\nimport ChoixUnite from '../unite/ChoixUnite';\r\nimport { afficherUnites } from '../unite/UniteFunctions'\r\n\r\nexport default function Item(props) {\r\n\r\n     const useStyles = makeStyles((theme) => ({\r\n          buttonDelete: {\r\n               color: \"white\",\r\n               backgroundColor: theme.palette.error.main,\r\n               \"&:hover\": {\r\n                    backgroundColor: theme.palette.error.dark\r\n               },\r\n          },\r\n          reponse: {\r\n               margin : \"5px 0px\",\r\n               display : \"flex\",\r\n               alignItems : \"center\",\r\n               columnGap: \"10px\"\r\n          },\r\n          inputAdornmentReponse: {\r\n               width : \"100px\",\r\n          }\r\n     }));\r\n     const classes = useStyles();\r\n\r\n     //const unitesReference = useSelector(selectUnites)\r\n\r\n     //indique si la boite de dialogue choix unité est ouverte ou fermée\r\n     const [choixUniteOpen, setOpen] = useState(false);\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     //booléen qui autorise la suppression d'une réponse si il y a plus d'une réponse affiché\r\n     const canDelete = useSelector(peutSupprimer(props.indexQuestion))\r\n\r\n     //s'occupe de changer la réponse au fur et à mesure que l'étudiant la tape\r\n     //s'assure que la réponse soit un nombre\r\n     const handleChangeReponse = (value) =>{\r\n          dispatch(changeReponse({\r\n               indexQuestion : props.indexQuestion, \r\n               indexReponse : props.num, \r\n               value : value\r\n          }))\r\n     }\r\n\r\n     //dès que la réponse perd le focus, s'assure que la réponse ne puisse être un '-' tout seul\r\n     const handleBlurReponse = () =>{\r\n          if (props.reponse.value === '-'){\r\n               dispatch(changeReponse({\r\n                    indexQuestion : props.indexQuestion, \r\n                    indexReponse : props.num, \r\n                    value : ''\r\n               }))\r\n          }\r\n     }\r\n\r\n     //gere la suppression de cette réponse\r\n     const handleDeleteReponse = () =>{\r\n          dispatch(deleteReponse({\r\n               indexQuestion : props.indexQuestion,\r\n               indexReponse : props.num,\r\n          }))\r\n     }\r\n\r\n     //s'occupe de fermer la boite de dialogue du choix de l'unité\r\n     //et de s'occuper des différentes actions demandée par la boite à sa fermeture\r\n     //paramètre : string (seul \"annuler\" ou \"appliquer a tous\" sont gérés)\r\n     const handleClose = () =>{\r\n          //ferme la boite de dialogue\r\n          setOpen(false);\r\n     }\r\n\r\n     //s'occupe de l'ouverture de la boite de dialogue choixUnité\r\n     const handleOpen = () =>{\r\n          //ouvre la boite de dialogue\r\n          setOpen(true);\r\n     }\r\n\r\n     //remplace le tableau d'unités de cette réponse\r\n     const setUniteReponse = (tab) =>{\r\n          dispatch(setUnite({\r\n               indexQuestion : props.indexQuestion, \r\n               indexReponse : props.num,\r\n               newTab : tab\r\n          }))\r\n     }\r\n\r\n     /*//affiche l'unité en entière de la réponse (en mettant les puissances)\r\n     const afficherUnite = () =>{\r\n          return(\r\n               props.reponse.tabUnite.map((i, index) => (\r\n                    <var key={index}>\r\n                         {i.abr} \r\n                         <sup> {i.puissance !== 1 && i.abr !== \" \" ? i.puissance : null } </sup>\r\n                    </var>\r\n                    )\r\n               )\r\n          )\r\n     }*/\r\n\r\n     //affiche le bouton pour supprimer cette réponse\r\n     const buttonDelete = () =>{ return(\r\n               <Fab className={classes.buttonDelete} size=\"small\" aria-label=\"delete\"\r\n                    onClick={handleDeleteReponse}\r\n               >\r\n                    <DeleteIcon />\r\n               </Fab>\r\n     )}\r\n\r\n     return(\r\n          <div className={classes.reponse}>\r\n               {/* input de la réponse */}\r\n               <TextField label={\"Reponse \" + (props.num + 1)} variant=\"outlined\" size=\"small\" \r\n               value={props.reponse.value} onChange={e => handleChangeReponse(e.target.value)}\r\n               onBlur={handleBlurReponse}\r\n               InputProps={{ //affichage unité\r\n                    endAdornment: (\r\n                         <InputAdornment className={classes.inputAdornmentReponse} position=\"start\">\r\n                         {afficherUnites(props.reponse.tabUnite)}                               \r\n                         </InputAdornment>\r\n                    ),\r\n               }} />\r\n\r\n               {/* bouton pour changer l'unité (ouvre la boite de dialogue) */}\r\n               <Button size=\"small\" onClick={e=>handleOpen()}>Unite</Button>\r\n\r\n               {/* boite de dialogue pour changer l'unité */}\r\n               <ChoixUnite open={choixUniteOpen} unite={props.reponse.tabUnite} \r\n                    setTabUnite={setUniteReponse} handleClose={handleClose} />\r\n\r\n               {/* affiche le bouton de suppression si il est possible de supprimer */}\r\n               {canDelete ? buttonDelete() : null}\r\n          </div>\r\n     )\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nimport DelayInput from '../InputAwait';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addReponse, changeJustification } from '../../slice/RepondreQuestionsSlice'\r\n\r\nimport Reponse from './ItemReponse';\r\n\r\nexport default function Question(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        listeReponses: {\r\n            display : \"flex\",\r\n            flexDirection: \"column\",\r\n            flexWrap : \"wrap\",\r\n            rowGap : \"30px\",\r\n            alignItems: \"center\",\r\n        },\r\n        listeQuestions: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"2% 3% 2% 3%\",\r\n        },\r\n        enonce: {\r\n            margin : \"4% 0 0 8%\",\r\n            fontSize : \"18px\",\r\n\r\n        },\r\n        buttonAjouterReponse: {\r\n            display : \"block\",\r\n            margin : \"20px auto\"\r\n        },\r\n        hr: {\r\n            border: \"1px dashed\",\r\n            width : \"50%\",\r\n            margin : \"50px auto\"\r\n        },\r\n        h2: {\r\n            textAlign : \"left\",\r\n            margin : \"1%\"\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //fonction pour ajouter une réponse (valeur vide) à cette question\r\n    const handleAddReponse = () => {\r\n        dispatch(addReponse(props.id))\r\n    }\r\n\r\n    //liste les différentes réponses\r\n    const listeReponses = () => {\r\n        return (\r\n            <div className={classes.listeReponses}>\r\n                {/* affichage des réponses une par une */}\r\n                {props.question.tabReponses.map((i, index) => (\r\n                    <Reponse key={index} num={index} reponse={i} \r\n                        indexQuestion={props.id}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr className={classes.hr}/>\r\n            <div className={classes.listeQuestions} >\r\n                <h2 className={classes.h2}>Question {props.id+1} :</h2>\r\n                {/* affichage énoncé de la question */}\r\n                <div className={classes.enonce}>{ReactHtmlParser(props.question.enonce)}</div>\r\n\r\n                <DelayInput\r\n                    style = {{width : \"100%\", margin : \"4% 0\"}}\r\n                    rows = {4}\r\n                    label=\"Justification\"\r\n                    delayTimeout={300}\r\n                    value={props.question.justification}\r\n                    onChange={e => dispatch(changeJustification({indexQuestion : props.id, justif : e}))}\r\n                />\r\n\r\n                {listeReponses()}\r\n\r\n                {/* bouton ajouter réponse visible uniquement si la question attend plus d'une réponse */ }\r\n                {props.question.nbMaxReponses > 1 ?\r\n                    <Button variant=\"contained\" \r\n                            className={classes.buttonAjouterReponse}\r\n                            color=\"primary\"\r\n                            onClick={handleAddReponse} \r\n                            //est disabled dès que la limte de réponses possibles est atteinte\r\n                            disabled={props.question.tabReponses.length >= props.question.nbMaxReponses}\r\n                            >\r\n                        Ajouter Réponse\r\n                    </Button>\r\n                : null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n}","import React, { useCallback } from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport jsPDF from 'jspdf';\r\nimport { Button, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectReponses , getSujet, enregistrerReponses, selectSujetEnregistre, etudiantVariables, getModele3D, getEtudiantModele } from \"../../slice/RepondreQuestionsSlice\"\r\n\r\nimport useConstructor from '../../components/use/useContructor'\r\n\r\nimport Question from '../../components/reponses/ItemQuestion'\r\n\r\nexport default function RepondreQuestions(){\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            marginBottom: \"2%\"\r\n        },\r\n        contenant: {\r\n            width:\"80%\",\r\n            margin : \"auto\",\r\n        },\r\n        buttonFixed: {\r\n            position: \"absolute\",\r\n            top : \"30px\",\r\n            right : \"120px\"\r\n        },\r\n        sujet: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"1% 2% 4% 2%\",\r\n            margin : \"4%\"\r\n        },\r\n        center: {\r\n            textAlign: \"center\",\r\n            display: \"block\",\r\n            margin: \"2% auto\"\r\n        },\r\n        modeles: {\r\n            display : \"flex\",\r\n            justifyContent : \"space-around\"\r\n        },\r\n        image: {\r\n            width: 200\r\n        }\r\n\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const reponses = useSelector(selectReponses);\r\n    const isEnregistre = useSelector(selectSujetEnregistre);\r\n    const dispatch = useDispatch();\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre){\r\n            dispatch(getEtudiantModele())\r\n            .then(modele => {\r\n                if (modele.payload[0] !== undefined){\r\n                    dispatch(getSujet(modele.payload[0].id_modele))\r\n                    .then((sujet) => {\r\n                        dispatch(etudiantVariables(sujet.payload.id_auth));\r\n                        dispatch(getModele3D(sujet.payload.id_auth));\r\n                    });\r\n                } else alert(\"erreur, pas de sujet asoscié\")\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    const handleEnvoyerReponses = useCallback(() => {\r\n        dispatch(enregistrerReponses(reponses.tabQuestions))\r\n    }, [dispatch, reponses]);\r\n\r\n    //trandforme en pdf le sujet\r\n    const downloadPdf = () => {\r\n        const MARGE_COTE = 15;\r\n        const MARGE_HAUT = 20;\r\n        const MARGE_BAS = 20;\r\n        const HAUTEUR_A4 = 297;\r\n        const LARGEUR_A4 = 210;\r\n\r\n        //met le sujet dans la bonne font family\r\n        let sujetForPdf = '<p style=\"font-family: sans-serif; display : block; margin : auto;\">' + reponses.sujet + '</p><br/><br/><br/><br/><hr>'\r\n\r\n        reponses.tabQuestions.forEach((elem, index) => {\r\n            sujetForPdf += `<p>Question ${index + 1} :</p><br/>${elem.enonce}<br/><br/>`;\r\n        });\r\n\r\n        //document pdf en format a4\r\n        const doc = new jsPDF('p', 'mm', 'a4');\r\n\r\n        const options = {\r\n            pagesplit : true,\r\n            'width' : LARGEUR_A4 - 2 * MARGE_COTE,\r\n            'height' : HAUTEUR_A4 - MARGE_HAUT - MARGE_BAS,\r\n        };\r\n\r\n        //transmet le sujet au document pdf\r\n        doc.fromHTML(sujetForPdf, MARGE_COTE, MARGE_HAUT + 10, options);\r\n        \r\n        doc.addPage();\r\n\r\n        //ajout image\r\n        const img = new Image();\r\n        img.src = reponses.image1;\r\n        //doc.addImage(img, 'JPEG', 10, 78, 50, 15); //PROBLEME, NE RECONNAIS PAS QUE C'EST UNE IMAGE\r\n\r\n        const number_of_pages = doc.internal.getNumberOfPages();\r\n        for (let i = 1; i <= number_of_pages; ++i) {\r\n            doc.setPage(i);\r\n\r\n            //header\r\n            doc.text(MARGE_COTE, MARGE_HAUT, \"N° étudiant : 1 - N° sujet : 14582\");\r\n            doc.text(LARGEUR_A4 - MARGE_COTE, MARGE_HAUT, \"Sujet de Pierre Dupont\" , 'right');\r\n\r\n            //footer\r\n            doc.setLineWidth(0.5);\r\n            doc.line(MARGE_COTE, HAUTEUR_A4 - MARGE_BAS - 5, LARGEUR_A4-MARGE_COTE, HAUTEUR_A4 - MARGE_BAS - 5);\r\n            doc.text(MARGE_COTE, HAUTEUR_A4 - MARGE_BAS, \"Pierre Carillo\");\r\n            doc.text(LARGEUR_A4 / 2, HAUTEUR_A4 - MARGE_BAS, \"IUT du Limousin - GMP\", \"center\");\r\n            doc.text(LARGEUR_A4 - MARGE_COTE, HAUTEUR_A4 - MARGE_BAS, \"Page \" + i + \"/\" + number_of_pages, \"right\");\r\n        }\r\n\r\n        doc.save(\"sujet.pdf\");\r\n    }\r\n\r\n    //affiche les différentes questions avec leurs réponses\r\n    const displayQuestions = () => {\r\n        //n'affiche rien si il n'y a pas de questions\r\n        return reponses.tabQuestions.length === 0 ? <div>Pas de questions pour l'instant</div> \r\n        : reponses.tabQuestions.map((i, index) => (\r\n            <Question key={i.indexQuestion} question={i} id={index}/>\r\n        ));\r\n    }\r\n\r\n    return isEnregistre && (\r\n        <div className={classes.contenant}>\r\n            <Typography variant=\"h1\">Réponses aux questions</Typography>\r\n            <hr className={classes.hr}/>\r\n            <div className={classes.buttonFixed} >\r\n                {/*bouton de téléchargement du sujet en pdf */}\r\n                <Button variant=\"contained\" color=\"primary\" onClick={downloadPdf}>\r\n                    <GetAppIcon/>\r\n                    Télécharger\r\n                </Button>\r\n            </div>\r\n\r\n            {/* affichage du sujet */ }\r\n            <div className={classes.sujet}>\r\n                <h2 className={classes.center}>Sujet</h2>\r\n                <div id=\"sujet\">{ReactHtmlParser(reponses.sujet)}</div>\r\n            </div>\r\n           \r\n\r\n            <div className={classes.modeles}>\r\n                <div>\r\n                    <img className={classes.image} src={reponses.image1} alt=\"img modele1\"/>\r\n                    <p className={classes.center}>modèle 1</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <img className={classes.image} src={reponses.image2} alt=\"img modele2\"/>\r\n                    <p className={classes.center}>modèle 2</p>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            {/* affichage des questions */}\r\n            {displayQuestions()}\r\n\r\n\r\n            <Button variant=\"contained\" color=\"primary\"\r\n                onClick={handleEnvoyerReponses}\r\n                className={classes.center}>\r\n                Envoyer les réponses\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {Avatar, IconButton, Menu, MenuItem, ListItemIcon, Typography, makeStyles, Tooltip} from '@material-ui/core';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport AccountBoxOutlinedIcon from '@material-ui/icons/AccountBoxOutlined';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport AppsOutlinedIcon from '@material-ui/icons/AppsOutlined';\r\n\r\nimport useConstructor from './use/useContructor';\r\nimport SelectionModele from './SelectionModele'\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserName, getUserImage, logoutUser } from \"../slice/UserSlice\"\r\nimport { selectModeleActuel, selectActualise, getModele } from '../slice/ModeleSlice';\r\nimport { getAllPromo, selectEnregistrePromo } from '../slice/PromoSlice';\r\n\r\nexport default function MenuProfil() {\r\n    const useStyles = makeStyles((theme) => ({\r\n        divMenuProfil: {\r\n            position : \"absolute\",\r\n            right : 30,\r\n            top : 17.5,\r\n            display : \"flex\",\r\n            zIndex : 10\r\n        },\r\n        avatar: {\r\n            backgroundColor : theme.palette.error.main\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n  //permet de placer le menu de profil correctement sur la page\r\n  const [openLocation, setOpenLocation] = useState(null);\r\n  //gerer ouverture/fermeture du modele\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUserName);\r\n  const actualiseModele = useSelector(selectActualise);\r\n  const modele = useSelector(selectModeleActuel);\r\n  const isEnregistrePromo = useSelector(selectEnregistrePromo);\r\n  \r\n  useConstructor(() => {\r\n        //gerer le stockage local\r\n        let myStorage = window.localStorage;\r\n        //si le nom de l'utilisateur est vide et que l'image est vide et que le stockage local de l'image est vide \r\n        if (user.name !== \"\" && user.image === undefined && myStorage.getItem(user.name) === null) dispatch(getUserImage(user.name));\r\n\r\n        //recupere les modeles\r\n        if (!actualiseModele && user.isProf) dispatch(getModele())\r\n\r\n        //recupère les promo\r\n        if (!isEnregistrePromo) dispatch(getAllPromo());\r\n    });\r\n\r\n  return (\r\n    <div className={classes.divMenuProfil}>\r\n        <Tooltip disableHoverListener={modele === undefined ? true : false} title={modele === undefined || !user.isProf ? \"\" : modele.nom}>\r\n        <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => setOpenLocation(e.currentTarget)}>\r\n                {user.image === undefined\r\n                    ?<Avatar className={classes.avatar}>{user.name.substring(0, 1).toUpperCase()}</Avatar>\r\n                    :<Avatar src={user.image}/>\r\n                }\r\n            </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n            transformOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            disableScrollLock={true}\r\n            id=\"simple-menu\"\r\n            anchorEl={openLocation}\r\n            keepMounted\r\n            open={Boolean(openLocation)}\r\n            onClose={() => setOpenLocation(null)}\r\n        >\r\n            <MenuItem component={Link} to='/profil' onClick={() => setOpenLocation(null)}>\r\n            <ListItemIcon>\r\n                <AccountBoxOutlinedIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">Profil</Typography>\r\n            </MenuItem>\r\n            {user.isProf \r\n            ?<MenuItem onClick={e => setOpen(true)}>\r\n            <ListItemIcon>\r\n                <AppsOutlinedIcon/>\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">Modèle</Typography>\r\n            </MenuItem> \r\n            : null}\r\n            <MenuItem onClick={e => dispatch(logoutUser())}>\r\n            <ListItemIcon>\r\n                <ExitToAppOutlinedIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">Déconnexion</Typography>\r\n            </MenuItem>\r\n        </Menu>\r\n        {user.isProf ? <SelectionModele tard={true} setClose={() => setOpen(false)} open={open}/> : null}\r\n        {user.isLogin ? null : <Redirect to='/'/>}\r\n    </div>\r\n  );\r\n}","import React, {useState} from 'react'\r\nimport {LinearProgress, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button} from '@material-ui/core';\r\n\r\nimport MenuProfil from '../../components/MenuProfil'\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSujet, selectSujetEnregistre, etudiantVariables, getModele3D, getEtudiantModele } from \"../../slice/RepondreQuestionsSlice\"\r\nimport { logoutUser } from \"../../slice/UserSlice\";\r\n\r\nexport default function Accueil(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divProgress: {\r\n            width : \"50%\",\r\n            margin : \"auto\"\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const isEnregistre = useSelector(selectSujetEnregistre);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre){\r\n            dispatch(getEtudiantModele())\r\n            .then(modele => {\r\n                if (modele.payload[0] !== undefined){\r\n                    dispatch(getSujet(modele.payload[0].id_modele))\r\n                    .then((sujet) => {\r\n                        dispatch(etudiantVariables(sujet.payload.id_auth));\r\n                        dispatch(getModele3D(sujet.payload.id_auth));\r\n                    });\r\n                } else setOpen(true);\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <MenuProfil info={props.info} />\r\n            <div className={classes.divProgress}>\r\n                <p>Progression dans le traitement du sujet</p>\r\n                <LinearProgress  variant=\"determinate\" value={10}/>\r\n                <p>Date limite de rendu : 10/01/21</p>\r\n            </div>\r\n        </div>\r\n        <Dialog open={open} onClose={() => setOpen(false)}>\r\n                <DialogTitle>Sujet non attribué</DialogTitle>\r\n                <DialogContent>\r\n                        <DialogContentText>Ton sujet n'a pas encore été attribué, contactes le professeur en cas de problème ou reviens plus tard</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => dispatch(logoutUser())} color=\"primary\">Quitter</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport {\r\n    FormControl,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    makeStyles,\r\n    OutlinedInput\r\n} from '@material-ui/core'\r\nimport clsx from \"clsx\";\r\n\r\n//label, nom du input \r\n//error si erreur\r\n//value : valeur du input\r\n//onChange quand changement\r\n//onKeyPress quand touche préssée\r\nexport default function InputPwd({label, error, value, onChange, onKeyPress}){\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divInputPassword: {\r\n            margin : \"auto\",\r\n            width: \"max-content\"\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n        textField: {\r\n            width: 225\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [showMdp, setShowMdp] = useState(false)\r\n    \r\n    const changeShowMdp = () => setShowMdp(!showMdp)\r\n\r\n    return (\r\n        <div className={classes.divInputPassword}>\r\n            <FormControl size=\"small\" variant=\"outlined\" className={clsx(classes.margin, classes.textField)}>\r\n                <InputLabel error={error} htmlFor=\"outlined-adornment-password\" required>{label}</InputLabel>\r\n                <OutlinedInput\r\n                   required\r\n                   label={label + \"*\"}\r\n                   error={error}\r\n                    id=\"outlined-adornment-password\"\r\n                    type={showMdp ? \"text\" : \"password\"}\r\n                    value={value}\r\n                    onChange={e => onChange(e)}\r\n                    onKeyPress={e => onKeyPress !== undefined ? onKeyPress(e) : null}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={() => changeShowMdp()}\r\n                                size=\"small\"\r\n                            >\r\n                                {showMdp ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Button, makeStyles, Typography} from '@material-ui/core';\r\n\r\nimport InputPassword from '../components/InputPassword';\r\nimport PopUp from '../components/PopUp';\r\nimport DropFile from '../components/DropFile'\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserName, changePassword, setUserImage } from \"../slice/UserSlice\";\r\n\r\nimport { setPwdUserAPI } from '../utils/api.js';\r\n\r\nexport default function Profile() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        carteProfil: {\r\n            display: \"flex\",\r\n            width: \"60%\",\r\n            height: \"max-content\",\r\n            margin: \"0 auto 2% auto\",\r\n            boxShadow: \"-2px 5px 12px 4px rgba(0,0,0,0.62)\",\r\n        },\r\n        imageProfil: {\r\n            width : 220,\r\n            height : \"100\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                display: \"none\"\r\n            }\r\n        },\r\n        wrapper: {\r\n            height : \"100%\",\r\n            width : \"100%\",\r\n        },\r\n        dropPhotoProfil: {\r\n            height: \"40%\",\r\n            width : \"100%\",\r\n            margin : \"auto\"\r\n        },\r\n        buttonEnvoyerImageProfil: {\r\n            display : \"block\",\r\n            margin : \"3% auto\"\r\n        },\r\n        hr: {\r\n          width: \"70%\"\r\n        },\r\n        divPasswordChange: {\r\n            width: \"max-content\",\r\n            display : \"flex\",\r\n            flexDirection : \"column\",\r\n            margin: \"2% auto\",\r\n        },\r\n        buttonChangePwd: {\r\n            margin : \"2% auto\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const user = useSelector(selectUserName);\r\n    const dispatch = useDispatch();\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [password, setPassword] = useState({oldPassword : \"\", newPassword  :\"\", error : false});\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const changePasswordAPI = () => {\r\n        setPwdUserAPI(user.name, { oldPassword : password.oldPassword, newPassword : password.newPassword }).then(() => {\r\n            dispatch(changePassword(password.newPassword));\r\n            setOpenPopUp(true);\r\n        }).catch(() => {\r\n            setPassword({oldPassword : password.oldPassword, newPassword  : password.newPassword, error : true });\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.carteProfil}>\r\n            {(user.image === undefined || user.image === \"\") ? null : <div className={classes.imageProfil} style={{backgroundImage : \"url('\"+user.image+\"')\"}}/>}\r\n            <div className={classes.wrapper}>\r\n                <Typography align=\"center\" gutterBottom variant=\"h2\" component=\"h2\">{user.name.charAt(0).toUpperCase() + user.name.slice(1)}</Typography>\r\n                <div className={classes.dropPhotoProfil}>\r\n                    <DropFile typeFile='image/*' compressImage={true} changeFile={e => setImage(e)}  message=\"Importer une nouvelle image de profil\"/>\r\n                    <Button\r\n                        className={classes.buttonEnvoyerImageProfil}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={image === \"\"}\r\n                        onClick={() => dispatch(setUserImage({name : user.name, image : image}))}\r\n                    >\r\n                        Enregistrer l'image\r\n                    </Button>\r\n                </div>\r\n                <hr className={classes.hr}/>\r\n                <div className={classes.divPasswordChange} id=\"divPasswordChange\">\r\n                    <InputPassword label={\"Mot de passe actuel\"} error={password.error} \r\n                            onChange={e =>  setPassword({oldPassword : e.target.value, newPassword : password.newPassword, error : false})}\r\n                    />\r\n                    <InputPassword label={\"Nouveau mot de passe\"} error={password.error}\r\n                            onChange={e => setPassword({oldPassword : password.oldPassword, newPassword : e.target.value, error : false})}\r\n                    />\r\n                    <Button className={classes.buttonChangePwd} variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => changePasswordAPI()}>Changer de mot de passe</Button>\r\n                </div>           \r\n                <PopUp severity=\"success\" message=\"Changement de mot de passe réussi\" open={openPopUp} handleClose={e => setOpenPopUp(false)}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default function Particules(){\r\n\r\n    return(\r\n        <Particles\r\n            style={{ position: \"absolute\", opacity : \"0.6\", top : 0}}\r\n            height=\"100vh\"\r\n            width=\"100%\"\r\n            params={{\r\n              particles: {\r\n                color: {\r\n                  value: \"#000000\"\r\n                },\r\n                line_linked: {\r\n                  color: {\r\n                    value: \"#000000\"\r\n                  }\r\n                },\r\n                number: {\r\n                  value: 50\r\n                },\r\n                size: {\r\n                  value: 3\r\n                }\r\n              },\r\n              \"interactivity\": {\r\n                \"events\": {\r\n                  \"onhover\": {\r\n                    \"enable\": true,\r\n                    \"mode\": \"repulse\"\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n        />\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {TextField, Button, makeStyles, FormControl} from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\r\n\r\nimport PopUp from '../components/PopUp';\r\nimport Particules from '../components/ParticulesBackLogin';\r\nimport useConstructor from '../components/use/useContructor';\r\nimport InputPassword from '../components/InputPassword';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userDetails, loginUser, selectError, setError, selectIsProf, selectIsLogin } from \"../slice/UserSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Login(){\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divLogin: {\r\n            display : \"flex\",\r\n            flexDirection : \"column\",\r\n            height : \"120px\",\r\n            margin : \"30px auto\"\r\n        },\r\n        backgroundLogin: {\r\n            display: \"block\",\r\n            margin : \"10% auto 0 auto\",\r\n            border : \"solid  2px\",\r\n            borderColor: theme.palette.primary.main,\r\n            borderRadius: \"2%\",\r\n            padding: \"2% 3%\",\r\n            backgroundColor: \"rgba(255,255,255,0.6)\",\r\n            zIndex: 2\r\n        },\r\n        buttonConnexion: {\r\n            display : \"block\",\r\n            margin : \"20px auto 10px auto\",\r\n            backgroundColor: theme.palette.primary.main,\r\n                \"&:hover\": {\r\n                    backgroundColor: theme.palette.primary.dark,\r\n                },\r\n            border : \"none\",\r\n            color : \"white\"\r\n        },\r\n        fieldLogin: {\r\n            display : \"flex\",\r\n            marginTop : \"20px\",\r\n        },\r\n        textField: {\r\n          width: 225,\r\n        },\r\n        iconLogin: {\r\n            marginRight : \"29px\",\r\n            marginTop : \"8px\"\r\n        },\r\n        iconPwd: {\r\n            marginRight : \"25px\",\r\n            marginTop : \"10px\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const error = useSelector(selectError);\r\n    const isProf = useSelector(selectIsProf);\r\n    const isLogin = useSelector(selectIsLogin);\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [loginConnect, setLoginConnect] = useState({user : \"\", pwd : \"\"});\r\n\r\n    useConstructor(() => {\r\n        dispatch(userDetails())\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (error) setOpenPopUp(true)\r\n    }, [error])\r\n\r\n    const connexionRedirection = () => {\r\n        if (isLogin){\r\n            return isProf ? <Redirect push to='/prof/home'/> : <Redirect push to='/etu/home'/>\r\n        } \r\n        return null;\r\n    }\r\n\r\n    const onChangeUserName = (e) => {\r\n        dispatch(setError(false));\r\n        setLoginConnect({user : e.target.value, pwd : loginConnect.pwd})\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        dispatch(setError(false));\r\n        setLoginConnect({user : loginConnect.user, pwd : e.target.value})\r\n    }\r\n\r\n    const connectClick = () => {\r\n        dispatch(loginUser({name : loginConnect.user, password : loginConnect.pwd}));\r\n    }\r\n\r\n    return (\r\n        (isLogin === undefined) ? null : \r\n            <div className={classes.divLogin}>\r\n                <Particules/>\r\n                <div className={classes.backgroundLogin}>\r\n                        <div className={classes.fieldLogin}>\r\n                            <AccountCircleOutlinedIcon className={classes.iconLogin}/>\r\n                            <FormControl size=\"small\" variant=\"outlined\">\r\n                                <TextField id=\"outlined-login\" className={classes.textField} autoFocus size=\"small\" variant=\"outlined\" required error={error}\r\n                                           value={loginConnect.user}\r\n                                           label=\"Login\"\r\n                                           onChange={e => onChangeUserName(e)}\r\n                                           onKeyPress={(e)=>{if (e.code === \"Enter\") connectClick()}}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.fieldLogin}>\r\n                            <VpnKeyOutlinedIcon className={classes.iconPwd}/>\r\n                            <InputPassword label={\"Mot de passe\"} error={error} \r\n                                onKeyPress={e => {if (e.code === \"Enter\") connectClick()}}  \r\n                                value={loginConnect.pwd} \r\n                                onChange={e => onChangePassword(e)}\r\n                            />\r\n                        </div>\r\n                    <Button type=\"submit\" className={classes.buttonConnexion} variant=\"outlined\" onClick={() => connectClick()}>Connexion</Button>\r\n                    <PopUp severity=\"error\" message=\"Identification invalide\" open={openPopUp} handleClose={() => setOpenPopUp(false)}/>\r\n                </div>\r\n                {connexionRedirection()}\r\n            </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  ListItem,\r\n  List,\r\n  SwipeableDrawer,\r\n  IconButton,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport SchoolOutlinedIcon from \"@material-ui/icons/SchoolOutlined\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PolymerIcon from '@material-ui/icons/Polymer';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../slice/UserSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserName } from \"../slice/UserSlice\"\r\n\r\nexport default function NavBar() {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    divNavigation: {\r\n      padding : \"5px 10px\",\r\n      zIndex: 99\r\n    },\r\n    divider: {\r\n      margin : \"3% 0\"\r\n    },\r\n    deconnexionNav: {\r\n      backgroundColor : theme.palette.error.main,\r\n      \"&:hover\": {\r\n        backgroundColor : theme.palette.error.dark,\r\n      },\r\n      borderRadius : \"3px\",\r\n    },\r\n    deconnexionText: {\r\n      color: \"white\"\r\n    },\r\n    deconnexionIcon: {\r\n      color: \"white\"\r\n    },\r\n    divNavBar: {\r\n      marginBottom: 100\r\n    },\r\n    burger: {\r\n      position : \"fixed\",\r\n      left : \"20px\",\r\n      top : \"20px\",\r\n      zIndex: 10\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const user = useSelector(selectUserName);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //gerer ouverture/fermeture du burger\r\n  const [menu, setMenu] = useState(false);\r\n\r\n  //gerer la liste des pages affichées pour le prof\r\n  const listeProf = [\r\n    {\r\n      icon : <HomeOutlinedIcon/>,\r\n      nom : \"Accueil\",\r\n      route : \"/prof/home\"\r\n    },\r\n    {\r\n      icon : <AccountCircleOutlinedIcon/>,\r\n      nom : \"Profil\",\r\n      route : \"/profil\",\r\n      divider : true\r\n    },\r\n    {\r\n      icon : <SystemUpdateAltIcon/>,\r\n      nom : \"Architecture\",\r\n      route : \"/prof/architecture\"\r\n    },\r\n    {\r\n      icon : <SchoolIcon/>,\r\n      nom : \"Promotion\",\r\n      route : \"/prof/promo\"\r\n    },\r\n    {\r\n      icon : <AllInclusiveIcon/>,\r\n      nom : \"Création variables aléatoires\",\r\n      route : \"/prof/variable-aleatoires\"\r\n    },\r\n    {\r\n      icon : <FunctionsIcon/>,\r\n      nom : \"Enregistrement des formules\",\r\n      route : \"/prof/formules\"\r\n    },\r\n    {\r\n      icon : <PolymerIcon/>,\r\n      nom : \"Gérer les unités\",\r\n      route : \"/prof/unites\",\r\n    },\r\n    {\r\n      icon : <PostAddIcon/>,\r\n      nom : \"Création des énoncés\",\r\n      route : \"/prof/enonces\",\r\n      divider : true\r\n    },\r\n    {\r\n      icon : <SchoolOutlinedIcon/>,\r\n      nom : \"Gestion de la correction\",\r\n      route : \"/prof/gestion-correction\",\r\n      divider : true\r\n    },\r\n  ]\r\n\r\n  //gerer la liste des pages affichées pour les étudiants\r\n  const listeEtudiant = [\r\n    {\r\n      icon : <HomeOutlinedIcon/>,\r\n      nom : \"Accueil\",\r\n      route : \"/etu/home\"\r\n    },\r\n    {\r\n      icon : <AccountCircleOutlinedIcon/>,\r\n      nom : \"Profil\",\r\n      route : \"/profil\"\r\n    },\r\n    {\r\n      icon : <SchoolOutlinedIcon/>,\r\n      nom : \"Répondre aux Questions\",\r\n      route : \"/etu/repondre-questions\",\r\n      divider : true\r\n    }\r\n  ]\r\n\r\n  //selectionne la bonne liste de pages\r\n  const liste = user.isProf ? listeProf : listeEtudiant;\r\n\r\n  const navigation = () => (\r\n    <SwipeableDrawer onOpen={() => setMenu(true)} open={menu} onClose={() => setMenu(false)}>\r\n      <nav className={classes.divNavigation}>\r\n        <List>\r\n        {liste.map((item) => (\r\n          <div key={item.nom}>\r\n            <ListItem button component={Link} to={item.route}>\r\n              <ListItemIcon>\r\n                  {item.icon}\r\n              </ListItemIcon>\r\n              <ListItemText>{item.nom}</ListItemText>\r\n            </ListItem>\r\n            {item.divider == null ? null : <Divider className={classes.divider}/>}\r\n          </div>\r\n        ))}\r\n          <ListItem className={classes.deconnexionNav} button onClick={() => dispatch(logoutUser())}>\r\n            <ListItemIcon>\r\n              <ExitToAppIcon className={classes.deconnexionIcon}/>\r\n            </ListItemIcon>\r\n            <ListItemText className={classes.deconnexionText}>Déconnexion</ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </nav>\r\n    </SwipeableDrawer>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.divNavBar}>\r\n      <IconButton className={classes.burger} onClick={(e) => setMenu(true)}>\r\n        <MenuRoundedIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      {navigation()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport MenuProfil from \"./MenuProfil\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userDetails } from \"../slice/UserSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserName, selectJustLogin, setJustLogin } from \"../slice/UserSlice\";\r\n\r\nexport default function PrivateRoute({forProf, component: Component, ...rest}) {\r\n  \r\n  const dispatch = useDispatch();\r\n  //information de l'utilisateur \r\n  const user = useSelector(selectUserName);\r\n  //savoir si la personne vient juste de se connecter\r\n  const justLogin = useSelector(selectJustLogin);\r\n\r\n  const selection = (props) => {\r\n    //si l'utilisateur n'était pas connecté et que ce n'est pas une connexion depuis la page de login, récuperer les informations\r\n    if (!justLogin || user.isLogin === undefined) {\r\n      dispatch(userDetails());\r\n      setJustLogin(false);\r\n    }\r\n    if (user.isLogin !== undefined) {\r\n      return user.isProf === forProf || forProf === undefined ? (\r\n        //si tout est ok, afficher la nav bar et le menu profil sur toutes les pages et le composant (la page) en question\r\n        <div>\r\n          <Navbar />\r\n          <MenuProfil />\r\n          <Component {...props} />\r\n        </div>\r\n      ) : (\r\n        //si ce n'est pas un prof et qu'il veut acceder a une page prof, redirection \r\n        //le window location recharge la page ! \r\n        <>\r\n          {window.location.href = '/'} \r\n          {/* <Redirect to=\"/\" /> */}\r\n        </>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n  return <Route {...rest} render={(props) => selection(props)} />;\r\n}\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport userReducer from '../slice/UserSlice';\r\nimport formuleReducer from '../slice/FormulesSlice';\r\nimport modeleReducer from '../slice/ModeleSlice';\r\nimport variablesAleatoiresReducer from '../slice/VariablesAleatoiresSlice'\r\nimport reponseReducer from '../slice/RepondreQuestionsSlice'\r\nimport enoncesReducer from '../slice/EnoncesSlice'\r\nimport promoReducer from '../slice/PromoSlice'\r\nimport consulterReducer from '../slice/ConsulterSlice'\r\nimport uniteReducer from '../slice/UniteSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    formule: formuleReducer,\r\n    modele: modeleReducer,\r\n    variableAleatoire : variablesAleatoiresReducer,\r\n    reponse : reponseReducer,\r\n    enonce : enoncesReducer,\r\n    promo : promoReducer,\r\n    consulter : consulterReducer,\r\n    unite : uniteReducer,\r\n  },\r\n  middleware : getDefaultMiddleware({\r\n    serializableCheck: false\r\n }),\r\n});\r\n","import React from 'react'\r\nimport {BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { MuiThemeProvider, unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\r\n//unstable_createMuiStrictModeTheme pour éviter les warnings strict mod de theme material ui\r\nimport frFR from '@material-ui/core/locale';\r\n\r\nimport Formules from './pages/Prof/Formules';\r\nimport AccueilProf from './pages/Prof/AccueilProf';\r\nimport Architecture from './pages/Prof/Architecture';\r\nimport Correction from './pages/Prof/Correction';\r\nimport Enonces from \"./pages/Prof/Enonces\";\r\nimport VariableAleatoires from './pages/Prof/VariablesAleatoires'\r\nimport Consulter from './pages/Prof/ConsulterEtudiant';\r\nimport Promo from './pages/Prof/Promo';\r\nimport GestionUnites from './pages/Prof/GestionUnites'\r\n\r\nimport RepondreQuestions from './pages/Etu/RepondreQuestions';\r\nimport AccueilEtu from './pages/Etu/AccueilEtu';\r\n\r\nimport Profil from './pages/Profil';\r\nimport Login from './pages/Login';\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './utils/store';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nexport default function App() {\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                light: '#c0dff8',\r\n                main: '#075b72'\r\n            },\r\n            secondary: {\r\n                main: '#cfcfcf'\r\n            },\r\n            error: {\r\n                main: '#c51150'\r\n            },\r\n            warning: {\r\n                main: '#ffa016',\r\n                dark: '#b75c08'\r\n            },\r\n            success: {\r\n                main: '#5bb65f',\r\n                dark: '#244826'\r\n            },\r\n        },\r\n        typography: {\r\n            fontFamily: \"Amaranth\",\r\n            h1: {\r\n                fontSize: 28,\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n                textTransform: \"uppercase\",\r\n                color: \"#393939\",\r\n            },\r\n            button: {\r\n                height : 36,\r\n                width: \"max-content\",\r\n            }\r\n        },\r\n    }, frFR);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n      <CssBaseline/>\r\n      <BrowserRouter>\r\n\r\n      <Switch>\r\n\r\n        {/* LOGIN */}\r\n        <Route exact path='/' component={Login}/>\r\n\r\n        {/* PROF */}\r\n\r\n        <PrivateRoute forProf={true} exact path='/prof/home' component={AccueilProf}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/gestion-sujets' component={AccueilProf}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/promo' component={Promo}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/unites' component={GestionUnites}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/enonces' component={Enonces}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/formules' component={Formules}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/architecture' component={Architecture}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/gestion-correction' component={Correction}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/variable-aleatoires' component={VariableAleatoires}/>\r\n        <PrivateRoute forProf={true} exact path='/prof/correction/:value' component={Consulter}/>\r\n\r\n        {/* ETU */}\r\n        <PrivateRoute forProf={false} exact path='/etu/home' component={AccueilEtu}/>\r\n        <PrivateRoute forProf={false} exact path='/etu/repondre-questions' component={RepondreQuestions}/>\r\n\r\n        {/* POUR LES DEUX */}\r\n        <PrivateRoute exact path='/profil' component={Profil}/>\r\n\r\n        {/* REDIRECTION */}\r\n        <Route render={() => <Redirect to=\"/\" />} />\r\n\r\n      </Switch>\r\n\r\n      </BrowserRouter>\r\n      </Provider>\r\n    </MuiThemeProvider>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}