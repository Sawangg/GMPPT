{"version":3,"sources":["utils/api.js","slice/UserSlice.jsx","slice/RepondreQuestionsSlice.jsx","components/InputAwait.jsx","slice/FormulesSlice.jsx","components/formules/ItemFormule.jsx","components/PopUp.jsx","components/formules/TodoListFormule.jsx","components/formules/ItemCategorie.jsx","components/use/useContructor.jsx","components/use/useUnload.jsx","slice/VariablesAleatoiresSlice.jsx","slice/EnoncesSlice.jsx","slice/UniteSlice.jsx","slice/ModeleSlice.jsx","components/SelectionModele.jsx","components/Enregistrement.jsx","components/use/useKeyPressCtrlS.jsx","components/formules/EnregistrementFormule.jsx","pages/Prof/Formules.jsx","components/ParticulesFond.jsx","pages/Prof/AccueilProf.jsx","components/DropFile.jsx","pages/Prof/Architecture.jsx","slice/PromoSlice.jsx","slice/ConsulterSlice.jsx","components/correction/TableConsulter.jsx","pages/Prof/Correction.jsx","components/enonce/QuestionEnonce.jsx","components/unite/UniteFunctions.jsx","components/unite/ChoixUnite.jsx","components/enonce/SlideBarMarge.jsx","components/enonce/ItemReponse.jsx","components/enonce/ListeReponses.jsx","components/enonce/EnTete.jsx","components/enonce/EnregistrementEnonce.jsx","pages/Prof/Enonces.jsx","components/variable/SlideBarVariable.jsx","components/variable/ItemVariableAleatoire.jsx","components/variable/EnregistrementVariableAleatoires.jsx","pages/Prof/VariablesAleatoires.jsx","components/correction/EssaiEtudiant.jsx","components/correction/Message.jsx","pages/Prof/ConsulterEtudiant.jsx","components/promo/DialogAssociationModele.jsx","components/promo/AjoutListeEtu.jsx","components/promo/TableEtudiant.jsx","pages/Prof/Promo.jsx","pages/Prof/GestionUnites.jsx","components/reponses/ItemReponse.jsx","components/reponses/ItemQuestion.jsx","pages/Etu/RepondreQuestions.jsx","components/MenuProfil.jsx","pages/Etu/AccueilEtu.jsx","components/InputPassword.jsx","pages/Profil.jsx","components/ParticulesBackLogin.jsx","pages/Login.jsx","components/Navbar.jsx","components/PrivateRoute.jsx","utils/store.jsx","App.js","reportWebVitals.js","index.js"],"names":["host","window","port","credentials","withCredentials","protocol","location","href","split","getInfoUserAPI","axios","get","logoutAPI","getImageUserAPI","username","loginAPI","password","post","setImageUserAPI","image","setPwdUserAPI","passwords","getCategoriesFormulesAPI","idModele","addCategorieFormuleAPI","tabFormules","deleteModeleAPI","getAllModeleAPI","addModeleAPI","nomModele","getModele3DAPI","idAuth","addModele3DAPI","archi","sujet","images","addArchiAPI","excel","getVariablesArchiAPI","addPromoAPI","nomPromo","getAllPromoAPI","getInfoPromoAPI","idPromo","attributionSujetAPI","deletePromoAPI","desatributionSujetAPI","getModelPromoAPI","addVariableAPI","tabVariables","getVariablesAPI","setQuestionsAPI","enonce","tabQuestions","addUniteAPI","tabUnites","getAllUniteAPI","etudiantNewAPI","fileUploaded","etudiantReponsesNewAPI","etudiantVariablesAPI","getSujetAPI","getReponsesCorrigees","getEssaisEtudiant","userDetails","createAsyncThunk","a","response","data","logoutUser","loginUser","user","name","setUserImage","props","FormData","append","getUserImage","myStorage","localStorage","userSlice","createSlice","initialState","undefined","isProf","isLogin","error","justLogin","reducers","setUser","state","action","payload","setError","setJustLogin","extraReducers","rejected","disconnect","fulfilled","connect","pending","URL","createObjectURL","meta","arg","reader","FileReader","readAsDataURL","onloadend","base64data","result","setItem","imageBase64","Buffer","from","profilepic","toString","getItem","actions","changeUserName","selectUserName","selectIsLogin","selectError","selectIsProf","selectJustLogin","getEtudiantModele","getSujet","enregistrerReponses","etudiantVariables","getModele3D","idArchi","reponseSlice","indexQuestion","justification","nbMaxReponses","tabReponses","value","tabUnite","abr","puissance","sujetEnregistre","id_auth","image1","image2","addReponse","indexReponseAvantDernier","length","push","_","cloneDeep","changeReponse","indexReponse","isNaN","deleteReponse","splice","changeUniteForAllReponses","tab","map","i","changeUniteReponses","changeJustification","justif","setUnite","newTab","questions","forEach","question","reponsesTab","reponse","reponses","element","id_question","contenu","variable","regx","RegExp","nom","replaceAll","valeur","selectReponses","peutSupprimer","selectSujetEnregistre","DebounceInput","label","typeNumber","onChange","delay","style","rows","useState","userdata","setUserdata","delayeddata","useRef","debounce","e","current","onChangeIn","target","TextField","multiline","variant","size","getCategoriesFormules","enregistrerFormules","formuleSlice","modif","tabFormule","nomFormule","formule","saveElement","elem","indexCategorie","indexFormule","actualise","enregistre","changement","addCategorie","changeNom","index","event","removeCategorie","changeModifCategorie","addFormule","changeNomFormule","changeFormule","changeModifFormule","removeFormule","undoFormule","changePositionFormule","up","save","message","array","formules","elemForm","saveTabFormule","setActualise","selectCategorieFormule","selectActualiseFormule","selectEnregistreFormule","selectTabCategorieLength","selectPremiereFormule","selectChangement","ItemFomrule","onRemove","classes","makeStyles","theme","affichageFormule","display","nomForm","width","center","margin","marginLeft","buttonSave","backgroundColor","palette","primary","light","typoNomFormule","overflowWrap","typoFormule","buttonModif","containerFormules","gridTemplateColumns","gridTemplateRows","gap","breakpoints","down","fabDelete","color","main","dark","useStyles","dispatch","useDispatch","matches","useMediaQuery","item","useSelector","indexCat","selectFormule","changeModif","className","Fab","clsx","disabled","aria-label","onClick","Button","Typography","React","memo","PopUp","open","handleClose","actionName","severity","pos","snackbar","zIndex","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","IconButton","fontSize","TodoListFormule","buttonAjouterFormule","openPopUpSave","setOpenPopUpSave","tabFormuleLength","ajout","useCallback","Array","fill","ItemCategorie","fieldNomCategorie","textNomCategorie","marginTop","fabModif","divItemAccordeon","minWidth","borderRadius","padding","boxShadow","enteteItemAccordeon","justifyContent","buttonDelete","accordion","accordionDetails","flexDirection","expanded","setExpanded","setOpen","selectCategorie","change","remove","delayTimeout","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Accordion","square","AccordionSummary","expandIcon","AccordionDetails","useConstructor","initializer","useUnload","active","handleBeforeUnload","preventDefault","useEffect","addEventListener","removeEventListener","getAllVariables","setVariables","variablesAleatoiresReducer","min","max","precision","addVariable","changeMin","changeMax","removeVariable","changePrecision","undoVariable","selectVariablesAleatoires","variableAleatoire","selectActualise","selectEnregistreVariable","selectTabLength","setQuestions","enoncesReducer","enonceContenu","selectCat","selectForm","margeErreur","unite","addQuestion","removeQuestion","handleChangeQuestion","handleChangeSelect","handleChangeUnite","idQuestion","idReponse","id","formule1","handleChangeCat","handleChangeForm","handleChangeMargeErreur","marge","handleChangeEnonce","removeReponse","selectEnonce","selectActualiseEnonce","selectEnregistreEnonce","selectTabQuestionLength","selectContenuEnonce","getAllUnite","enregistreUnites","uniteSlice","indexEnModif","addUnite","abrev","changeNomComplet","changeAbreviation","deleteUnite","setIndexEnModif","setEnregistre","setTest","sansUnite","o","selectUnites","selectIndexEnMofid","selectEnregistreUnite","getModele","removeModele","addNewModele","modeleSlice","tabName","idModeleSelectionne","selectionnerModele","id_modele","nom_modele","chargementSuppression","insertId","selectModele","modele","selectIdModeleSelectionne","selectModeleActuel","SelectionModele","setClose","tard","divNouveauModele","gridGap","fabAdd","form","marginBottom","divSelectModele","menuItem","dialogActions","buttonLater","select","setSelect","etat","nouveauModele","setNouveauModele","openConfirm","setOpenConfirm","disableBackdropClick","disableEscapeKeyDown","FormControl","InputLabel","Select","input","Input","MenuItem","css","required","onChangeNouveauModele","includes","Enregistrement","isEnregistre","openPopUp","setOpenPopUp","openDialog","setOpenDialog","listePromo","setListePromo","touche","keyPressed","setKeyPressed","downHandler","navigator","platform","match","metaKey","ctrlKey","keyCode","setInterval","useKeyPress","envoyer","then","requestStatus","d","nom_promo","id_promo","tempTab","indexOf","suppAsso","EnregistrementFormule","tabCatFormule","some","cat","TodoListAccordeon","hr","fab","tabCatLength","Particules","position","opacity","top","height","params","Accueil","isEnregistreVariable","isEnregistreFormule","isEnregistreEnonce","isEnregistreUnite","DropFile","divDrop","secondary","border","borderColor","textAlign","cursor","cloudIcon","onDrop","accepted_files","file","compressImage","imageCompression","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","changeFile","useDropzone","accept","typeFile","maxFiles","acceptedFiles","getRootProps","getInputProps","files","path","substring","Architecture","root","paddingBottom","divImportModele","divDropModele","flexWrap","divNumSujet","saveButton1","saveButton2","button","buttonVariable","setSujet","setImage1","setImage2","setExcel","envoieArchi","envoieModele3D","getEtudiantsPromo","getAllPromo","addPromo","removePromo","promoSlice","tabPromo","tabEtudiants","setEtudiantsForTests","prenom","avancement","note","setIdPromo","etudiant","promo","selectEtudiants","selectIdPromo","selectPromo","selectEnregistrePromo","getReponsesCorDB","idEtudiant","getEssaisDB","consulterSlice","id_etudiant","tabEssais","tabReponsesJustes","changeReponseJuste","indexE","indexQ","indexR","justeProf","setEssaisForTest","dateEssai","corrige","num","commentProf","justeApp","ecart","changeMessage","changeCommentaire","commentaire","changeNote","setCorrigeTrue","setEtudiantConsulter","setAvisApplication","essai","questionJuste","find","repCor","Math","abs","filter","rep","essaisDB","essaiQuestionDB","date","taille","reponseDB","selectEssais","consulter","selectMessage","selectReponsesJustes","selectEtudiantConsulter","StickyHeadTable","linkConsulter","textDecoration","page","setPage","columns","align","columnConsulterSujet","affichageEnplus","string","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","tabIndex","to","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","onChangePage","newPage","Correction","divTable","choixPromoDiv","choixPromoField","isEnregistrePromo","tabPromos","handleChangePromo","helperText","QuestionEnonce","handleChange","divQuestion","selectQuestion","defaultValue","setOptions","buttonList","lang","placeholder","setDefaultStyle","afficherUnites","ChoixUnite","alignementHorizontal","columnGap","alignItems","buttonGap","choixInput","setUnites","unitesReference","changePuissance","supprimerIterationsSansUnite","partieUnite","handleDeleteUnite","handleChangePuissance","onBlur","pow","parseInt","handleBlurUnite","InputProps","startAdornment","InputAdornment","maxWidth","fullWidth","title","setTabUnite","SliderBar","divSlideBar","selectMargeErreur","handleClickAway","gutterBottom","Slider","marks","step","onChangeCommitted","valueLabelDisplay","aria-labelledby","Reponse","divReponse","maxHeight","divUniteMarge","gridColumn","affichageUnite","bottom","divMarge","buttonAjouterUnite","selectReponse","tabCatForm","changeCat","changeForm","ListeReponses","divListeReponses","buttonSupprimerReponse","right","tabReponse","selectTabReponse","tabReponseLength","selectReponseLength","premierFormule","add","MyEditor","EnregistrementEnonce","Enonces","enonceSujet","divQuestionReponse","buttonAddQuestion","float","actualiseEnonce","tabQuestionLength","enTete","changementFormule","deleteQuestion","SlideBar","precisionSlice","selectPrecision","valueLabelFormat","getAriaValueText","ItemVariable","typo","containerVariables","fabSave","selectElement","parseFloat","tableauVariables","variables","VariablesAleatoires","divItemvariable","openPopUpUndo","setOpenPopUpUndo","openModele","setOpenModele","lengthTab","isActualise","EnregistrementVariableAleatoires","boxReponses","paddingTop","noteTextField","noteInput","fontWeight","EssaiEtudiant","indexEssai","setActu","moment","format","IconeJuste","juste","Question","numQuestion","questionCorrigee","handleChangeCommentaire","nbReponsesJuste","nb","boutonJustePourProf","handleClickJuste","colSpan","Collapse","in","timeout","unmountOnExit","Box","ReactHtmlParser","Message","messageField","destinataire","handleChangeMessage","handleSend","Consulter","messageBouton","indexEssaiDialog","setIndexEssai","openDetails","setOpenDetails","openMessage","setOpenMessage","nbQuestionsJustes","findIndex","List","Divider","ListItem","handleClickDetails","ListItemText","ListItemAvatar","revu","Avatar","msg","DialogAssociationModele","selectionModele","setSelectionModele","AjoutListeEtu","envoieExcel","filtre","setFiltre","displayColumn","startIcon","EnhancedTableToolbar","Toolbar","Tooltip","Promo","mapDisplayEtu","divNomPromo","divPromo","formControl","divSelectPromo","labelSelectPromo","nouvellePromo","setNouvellePromo","assoModele","setAssoModele","listEtu","setListEtu","changePromo","GestionUnites","tableauUnite","addButton","deleteButton","modifButton","marginRight","tableCell","tableRow","modifIsUnique","enregistrer","buttonsUniteSansModif","handleModifUnite","afficherUnite","handleChangeNomComplet","handleChangeAbreviation","Item","inputAdornmentReponse","choixUniteOpen","canDelete","handleDeleteReponse","endAdornment","listeReponses","rowGap","listeQuestions","buttonAjouterReponse","h2","RepondreQuestions","contenant","buttonFixed","modeles","alert","handleEnvoyerReponses","MARGE_COTE","sujetForPdf","doc","jsPDF","options","pagesplit","LARGEUR_A4","HAUTEUR_A4","fromHTML","MARGE_HAUT","addPage","Image","src","number_of_pages","internal","getNumberOfPages","text","setLineWidth","line","alt","MenuProfil","divMenuProfil","avatar","openLocation","setOpenLocation","actualiseModele","disableHoverListener","aria-controls","aria-haspopup","currentTarget","toUpperCase","Menu","transformOrigin","disableScrollLock","anchorEl","keepMounted","Boolean","Link","ListItemIcon","divProgress","info","LinearProgress","InputPwd","onKeyPress","divInputPassword","spacing","textField","showMdp","setShowMdp","htmlFor","OutlinedInput","type","Profile","carteProfil","imageProfil","backgroundSize","backgroundPosition","wrapper","dropPhotoProfil","buttonEnvoyerImageProfil","divPasswordChange","buttonChangePwd","oldPassword","newPassword","setPassword","setImage","backgroundImage","charAt","catch","particles","line_linked","number","Login","divLogin","backgroundLogin","buttonConnexion","fieldLogin","iconLogin","iconPwd","pwd","loginConnect","setLoginConnect","connectClick","onChangeUserName","code","onChangePassword","NavBar","divNavigation","divider","deconnexionNav","deconnexionText","deconnexionIcon","divNavBar","burger","left","menu","setMenu","listeProf","icon","route","listeEtudiant","liste","SwipeableDrawer","onOpen","PrivateRoute","forProf","Component","rest","render","selection","configureStore","reducer","userReducer","formuleReducer","modeleReducer","reponseReducer","promoReducer","consulterReducer","uniteReducer","middleware","getDefaultMiddleware","serializableCheck","App","createMuiTheme","warning","success","typography","fontFamily","h1","textTransform","frFR","store","CssBaseline","exact","AccueilProf","Formules","VariableAleatoires","AccueilEtu","Profil","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e4b9c61.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst { host } = window;\r\nconst { port } = window;\r\nconst credentials = { withCredentials: true };\r\nconst protocol = window.location.href.split(\"/\")[0];\r\n\r\n// User\r\n\r\nexport function getInfoUserAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/auth`, credentials);\r\n}\r\n\r\nexport function logoutAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/auth/logout`, credentials);\r\n}\r\n\r\nexport function getImageUserAPI(username) {\r\n    return axios.get(`${protocol}//${host}:${port}/auth/${username}/profilepic`, credentials);\r\n}\r\n\r\nexport function loginAPI(username, password) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/login`, { username, password }, credentials);\r\n}\r\n\r\nexport function setImageUserAPI(username, image) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/${username}/profilepic/new`, image, credentials);\r\n}\r\n\r\nexport function setPwdUserAPI(username, passwords) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/${username}/changepwd`, { passwords }, credentials);\r\n}\r\n\r\n// Formules\r\n\r\nexport function getCategoriesFormulesAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/categories`, credentials);\r\n}\r\n\r\nexport function addCategorieFormuleAPI(idModele, tabFormules) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/categories/new`, tabFormules, credentials);\r\n}\r\n\r\n// Modele\r\n\r\nexport function getInfoModeleAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}`, credentials);\r\n}\r\n\r\nexport function deleteModeleAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/delete`, credentials);\r\n}\r\n\r\nexport function getAllModeleAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/modele`, credentials);\r\n}\r\n\r\n// renvoie ausi le numéro modele\r\n\r\nexport function addModeleAPI(nomModele) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/new`, { \"nommodele\": nomModele }, credentials);\r\n}\r\n\r\n// Modeles 3D\r\n\r\nexport function getModele3DAPI(idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/modeles`, credentials);\r\n}\r\n\r\nexport function addModele3DAPI(archi) {\r\n    return axios.post(`${protocol}//${host}:${port}/architecture/${archi.sujet}/modeles/new`, archi.images, credentials);\r\n}\r\n\r\n// Architectures\r\n\r\nexport function addArchiAPI(excel) {\r\n    return axios.post(`${protocol}//${host}:${port}/architecture/new`, excel, credentials);\r\n}\r\n\r\nexport function getVariablesArchiAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/architecture/attribued_without_modeles/excel`, credentials);\r\n}\r\n\r\n// Promotion\r\n\r\nexport function addPromoAPI(nomPromo) {\r\n    return axios.post(`${protocol}//${host}:${port}/promo/new`, { nomPromo: nomPromo }, credentials);\r\n}\r\n\r\nexport function getAllPromoAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/`, credentials);\r\n}\r\n\r\nexport function getInfoPromoAPI(idPromo) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}`, credentials);\r\n}\r\n\r\nexport function attributionSujetAPI(idPromo, idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/${idModele}/attribution`, credentials);\r\n}\r\n\r\nexport function deletePromoAPI(idPromo) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/delete`, credentials);\r\n}\r\n\r\nexport function desatributionSujetAPI(idPromo) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/desatribution`, credentials);\r\n}\r\n\r\nexport function getModelPromoAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/modele`, credentials);\r\n}\r\n\r\n// Variables aléatoires\r\n\r\nexport function addVariableAPI(idModele, tabVariables) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/variables/new`, tabVariables, credentials);\r\n}\r\n\r\nexport function getVariablesAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/variables`, credentials);\r\n}\r\n\r\n// Enonces\r\n\r\nexport function setQuestionsAPI(idModele, enonce, tabQuestions) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/questions/new`, { tabQuestions, enonce }, credentials);\r\n}\r\n\r\nexport function addUniteAPI(tabUnites) {\r\n    return axios.post(`${protocol}//${host}:${port}/unite/new`, { tabUnites }, credentials);\r\n}\r\n\r\nexport function getAllUniteAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/unite/`, credentials);\r\n}\r\n\r\n// Etudiant \r\n\r\nexport function etudiantNewAPI(idPromo, fileUploaded) {\r\n    return axios.post(`${protocol}//${host}:${port}/etudiant/${idPromo}/new`, fileUploaded, credentials);\r\n}\r\n\r\nexport function etudiantReponsesNewAPI(tabQuestions) {\r\n    return axios.post(`${protocol}//${host}:${port}/etudiant/reponses/new`, { tabQuestions }, credentials);\r\n}\r\n\r\nexport function etudiantVariablesAPI(idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/variables`, credentials);\r\n}\r\n\r\n// Sujet \r\n\r\nexport function getSujetAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/sujet`, credentials);\r\n}\r\n\r\n//Correction\r\n\r\nexport function getReponsesCorrigees(idPromo, idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/correction/${idPromo}/${idAuth}`, credentials);\r\n}\r\n\r\nexport function getEssaisEtudiant(idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/reponses`, credentials);\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getInfoUserAPI, logoutAPI, setImageUserAPI, getImageUserAPI, loginAPI, } from \"../utils/api.js\";\r\n\r\nexport const userDetails = createAsyncThunk(\"users/getInfoUser\", async () => {\r\n\tconst response = await getInfoUserAPI();\r\n\treturn response.data;\r\n});\r\n\r\nexport const logoutUser = createAsyncThunk(\"users/logout\", async () => {\r\n\tconst response = await logoutAPI();\r\n\treturn response.data;\r\n});\r\n\r\nexport const loginUser = createAsyncThunk(\"users/login\", async (user) => {\r\n\tconst response = await loginAPI(user.name, user.password);\r\n\treturn response.data;\r\n});\r\n\r\nexport const setUserImage = createAsyncThunk(\"users/setUserImage\", async (props) => {\r\n\tconst data = new FormData();\r\n\tdata.append(\"profilePic\", props.image);\r\n\tconst response = await setImageUserAPI(props.name, data);\r\n\treturn response.data;\r\n});\r\n\r\nexport const getUserImage = createAsyncThunk(\"users/getUserImage\", async (name) => {\r\n\tconst response = await getImageUserAPI(name);\r\n\treturn response.data;\r\n});\r\n\r\nlet myStorage = window.localStorage;\r\n\r\nexport const userSlice = createSlice({\r\n\tname: \"user\",\r\n\tinitialState: {\r\n\t\tname: \"\",\r\n\t\tpassword: \"\",\r\n\t\timage: undefined,\r\n\t\tisProf: false,\r\n\t\tisLogin: undefined,\r\n\t\terror: false,\r\n\t\tjustLogin: false\r\n\t},\r\n\treducers: {\r\n\t\tsetUser: (state, action) => {\r\n\t\t\tconst { name, password, isProf } = action.payload;\r\n\t\t\tstate.name = name;\r\n\t\t\tstate.password = password;\r\n\t\t\tstate.isProf = isProf;\r\n\t\t},\r\n\t\tsetError: (state, action) => {\r\n\t\t\tstate.error = action.payload;\r\n\t\t},\r\n\t\tsetJustLogin: (state, action) => {\r\n\t\t\tstate.justLogin = action.payload;\r\n\t\t}\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[userDetails.rejected]: (state) => {\r\n\t\t\tdisconnect(state);\r\n\t\t},\r\n\t\t[userDetails.fulfilled]: (state, action) => {\r\n\t\t\tconnect(state, action);\r\n\t\t},\r\n\t\t[loginUser.rejected]: (state) => {\r\n\t\t\tstate.error = true;\r\n\t\t},\r\n\t\t[loginUser.fulfilled]: (state, action) => {\r\n\t\t\tconnect(state, action);\r\n\t\t\tstate.justLogin = true;\r\n\t\t},\r\n\t\t[logoutUser.rejected]: (state) => {\r\n\t\t\tdisconnect(state);\r\n\t\t},\r\n\t\t[logoutUser.fulfilled]: (state) => {\r\n\t\t\tdisconnect(state);\r\n\t\t},\r\n\t\t[setUserImage.pending]: (state, action) => {\r\n\t\t\tstate.image = URL.createObjectURL(action.meta.arg.image);\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\tconst name = state.name;\r\n\t\t\treader.readAsDataURL(action.meta.arg.image);\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tlet base64data = reader.result;\r\n\t\t\t\tmyStorage.setItem(name, base64data);\r\n\t\t\t};\r\n\t\t},\r\n\t\t[getUserImage.fulfilled]: (state, action) => {\r\n\t\t\tconst imageBase64 = \"data:image/jpeg;base64,\" + Buffer.from(action.payload.profilepic).toString(\"base64\");\r\n\t\t\tstate.image = imageBase64;\r\n\t\t\tmyStorage.setItem(state.name, imageBase64);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst disconnect = (state) => {\r\n\tstate.name = \"\";\r\n\tstate.password = \"\";\r\n\tstate.isLogin = false;\r\n\tstate.isProf = undefined;\r\n\tstate.image = undefined;\r\n};\r\n\r\nconst connect = (state, action) => {\r\n\tstate.name = action.payload.username;\r\n\tstate.isProf = action.payload.isProf === 1 ? true : false;\r\n\tstate.isLogin = true;\r\n\tif (state.image === undefined) {\r\n\t\tstate.image = myStorage.getItem(action.payload.username) === null\r\n\t\t\t? undefined\r\n\t\t\t: myStorage.getItem(action.payload.username)\r\n\t}\r\n};\r\n\r\nexport const { setUser, changeUserName, setError, setJustLogin } = userSlice.actions;\r\n\r\nexport const selectUserName = (state) => state.user;\r\n\r\nexport const selectIsLogin = (state) => state.user.isLogin;\r\n\r\nexport const selectError = (state) => state.user.error;\r\n\r\nexport const selectIsProf = (state) => state.user.isProf;\r\n\r\nexport const selectJustLogin = (state) => state.user.justLogin;\r\n\r\nexport default userSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getSujetAPI, etudiantVariablesAPI, etudiantReponsesNewAPI, getModele3DAPI, getModelPromoAPI } from \"../utils/api.js\";\r\nimport _ from \"lodash\";\r\n\r\nexport const getEtudiantModele = createAsyncThunk(\"etudiant/getEtudiantModele\", async () => {\r\n    const response = await getModelPromoAPI();\r\n    return response.data;\r\n});\r\n\r\nexport const getSujet = createAsyncThunk(\"etudiant/getSujet\", async (idModele) => {\r\n    const response = await getSujetAPI(idModele);\r\n    return response.data;\r\n});\r\n\r\nexport const enregistrerReponses = createAsyncThunk(\"etudiant/enregistrerReponses\", async (tabQuestions) => {\r\n    const response = await etudiantReponsesNewAPI(tabQuestions);\r\n    return response.data;\r\n});\r\n\r\nexport const etudiantVariables = createAsyncThunk(\"etudiant/etudiantVariables\", async (idAuth) => {\r\n    const response = await etudiantVariablesAPI(idAuth);\r\n    return response.data;\r\n});\r\n\r\nexport const getModele3D = createAsyncThunk(\"etudiant/getModele3D\", async (idArchi) => {\r\n    const response = await getModele3DAPI(idArchi);\r\n    return response.data;\r\n});\r\n\r\nexport const reponseSlice = createSlice({\r\n    name: \"reponse\",\r\n    initialState: {\r\n        tabQuestions: [{\r\n            indexQuestion: 0,\r\n            enonce: \"\",\r\n            justification: \"\",\r\n            nbMaxReponses: 5,\r\n            tabReponses: [{\r\n                value: \"\",\r\n                tabUnite: [{\r\n                    abr: \" \",\r\n                    puissance: 1\r\n                }]\r\n            }]\r\n        }],\r\n        sujet: \"\",\r\n        sujetEnregistre: false,\r\n        id_auth: \"\",\r\n        image1: \"\",\r\n        image2: \"\"\r\n    },\r\n    reducers: {\r\n        //ajoute une réponse pour une question\r\n        //paramètre : indexQuestion\r\n        addReponse: (state, action) => {\r\n            let indexQuestion = action.payload;\r\n            let indexReponseAvantDernier = state.tabQuestions[action.payload].tabReponses.length - 1;\r\n            state.tabQuestions[indexQuestion].tabReponses.push({\r\n                value: '',\r\n                tabUnite: _.cloneDeep(state.tabQuestions[indexQuestion].tabReponses[indexReponseAvantDernier].tabUnite)\r\n            });\r\n        },\r\n\r\n        //change la valeur d'une réponse pour une question\r\n        //paramètres : indexQuestion, index Réponse, valeurReponse\r\n        changeReponse: (state, action) => {\r\n            /*const reg = '#-?[1-9]*(\\.[1-9]*)?(\\*10\\^[1-9]*)?#'\r\n            const reg = '[a-z]'\r\n            \r\n            if(value.match(reg)){\r\n                state.tabQuestions[indexQuestion].tabReponses[indexReponse].value = value\r\n            }*/\r\n\r\n            let { indexQuestion, indexReponse, value } = action.payload;\r\n            if (!isNaN(value) || value === '-') {\r\n                state.tabQuestions[indexQuestion].tabReponses[indexReponse].value = value;\r\n            }\r\n        },\r\n\r\n        //supprime une réponse pour une question\r\n        //paramètres : indexQuestion, index Réponse\r\n        deleteReponse: (state, action) => {\r\n            let { indexQuestion, indexReponse } = action.payload;\r\n            if (state.tabQuestions[indexQuestion].tabReponses.length > 1) {\r\n                state.tabQuestions[indexQuestion].tabReponses.splice(indexReponse, 1);\r\n            }\r\n        },\r\n\r\n        //change les tableaux d'unités de toutes les réponses assignées à une question\r\n        //paramètres : indexQuestion, tabUnité\r\n        changeUniteForAllReponses: (state, action) => {\r\n            let { indexQuestion, tab } = action.payload;\r\n            state.tabQuestions[indexQuestion].tabReponses.map((i) =>\r\n                i.tabUnite = _.cloneDeep(tab)\r\n            );\r\n        },\r\n\r\n        //change le tableau d'unité en entier d'une réponse\r\n        //paramètres : indexQuestion, indexReponse, tabUnité\r\n        changeUniteReponses: (state, action) => {\r\n            let { indexQuestion, indexReponse, tab } = action.payload;\r\n            state.tabQuestions[indexQuestion].tabReponses[indexReponse].tabUnite = tab;\r\n        },\r\n\r\n        changeJustification: (state, action) => {\r\n            state.tabQuestions[action.payload.indexQuestion].justification = action.payload.justif;\r\n        },\r\n\r\n        //change le tableau d'unités d'une réponse\r\n        //paramètres : indexQuestion, indexReponse, tabUnité\r\n        setUnite: (state, action) => {\r\n            let { indexQuestion, indexReponse, newTab } = action.payload;\r\n            state.tabQuestions[indexQuestion].tabReponses[indexReponse].tabUnite = newTab;\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getSujet.fulfilled]: (state, action) => {\r\n            state.tabQuestions = [];\r\n            state.sujet = action.payload.enonce;\r\n            action.payload.questions.forEach((question) => {\r\n\r\n                const reponsesTab = [];\r\n                if (question.reponse !== undefined) {\r\n                    question.reponses.forEach(element => {\r\n                        reponsesTab.push({\r\n                            value: element.value,\r\n                            tabUnite: element.tabUnite\r\n                        });\r\n                    });\r\n                } else {\r\n                    reponsesTab.push({ value: \"\", tabUnite: [] });\r\n                }\r\n\r\n                state.tabQuestions.push({\r\n                    indexQuestion: question.id_question,\r\n                    enonce: question.contenu,\r\n                    nbMaxReponses: 5,\r\n                    justification: \"\", //question.justification A AJOUTER !!!!\r\n                    tabReponses: reponsesTab\r\n                });\r\n            });\r\n            state.id_auth = action.payload.id_auth;\r\n            state.sujetEnregistre = true;\r\n        },\r\n        [enregistrerReponses.fulfilled]: (state) => {\r\n            state.sujetEnregistre = true;\r\n        },\r\n        [etudiantVariables.fulfilled]: (state, action) => {\r\n            let enonce = state.sujet;\r\n            action.payload.forEach(variable => {\r\n                const regx = new RegExp(\"\\\\$\\\\{\\\\s*\" + variable.nom + \"\\\\s*\\\\}\", 'g');\r\n                enonce = enonce.replaceAll(regx, variable.valeur);\r\n                state.tabQuestions.forEach(question => {\r\n                    question.enonce = question.enonce.replaceAll(regx, variable.valeur)\r\n                });\r\n            });\r\n            state.sujet = enonce;\r\n        },\r\n        [getModele3D.fulfilled]: (state, action) => {\r\n            state.image1 = \"data:image/jpeg;base64,\" + Buffer.from(action.payload.image1).toString(\"base64\");\r\n            state.image2 = \"data:image/jpeg;base64,\" + Buffer.from(action.payload.image2).toString(\"base64\");\r\n        },\r\n    }\r\n});\r\n\r\nexport const { addReponse, changeReponse, deleteReponse, changeUniteReponses, changeUniteForAllReponses, setUnite, changeJustification } = reponseSlice.actions;\r\n\r\n//renvoie l'ensemble d'un tableau de questions\r\nexport const selectReponses = state => state.reponse;\r\n\r\n//renvoie un bouleen pour dire si l'on peut supprimer une réponse pour une question\r\nexport const peutSupprimer = indexQuestion => state => state.reponse.tabQuestions[indexQuestion].tabReponses.length > 1;\r\n\r\nexport const selectSujetEnregistre = state => state.reponse.sujetEnregistre;\r\n\r\nexport default reponseSlice.reducer;","import React, { useRef, useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport _ from \"lodash\";\r\n\r\nexport default function DebounceInput({ label, typeNumber, onChange, delay, value, style, rows }) {\r\n\r\n\tconst [userdata, setUserdata] = useState(value);\r\n\r\n\tconst sendData = (data) => onChange(data);\r\n\r\n\tconst delayeddata = useRef(_.debounce(e => sendData(e), delay)).current;\r\n\r\n\tconst onChangeIn = (e) => {\r\n\t\tsetUserdata(e.target.value);\r\n\t\tdelayeddata(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tstyle={style}\r\n\t\t\tmultiline\r\n\t\t\trows={rows}\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tsize=\"small\"\r\n\t\t\tlabel={label}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tif (typeNumber === undefined || typeNumber === false) {\r\n\t\t\t\t\tonChangeIn(e);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!isNaN(e.target.value) || e.target.value === '-') onChangeIn(e);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tvalue={userdata}\r\n\t\t/>\r\n\t);\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getCategoriesFormulesAPI, addCategorieFormuleAPI } from \"../utils/api.js\";\r\n\r\nexport const getCategoriesFormules = createAsyncThunk(\"formule/getCategoriesFormules\", async (idModele) => {\r\n\tconst response = await getCategoriesFormulesAPI(idModele);\r\n\treturn response.data;\r\n});\r\n\r\nexport const enregistrerFormules = createAsyncThunk(\"formule/enregistrerFormules\", async (props) => {\r\n\tconst response = await addCategorieFormuleAPI(props.idModele, props.tab);\r\n\treturn response.data;\r\n});\r\n\r\nexport const formuleSlice = createSlice({\r\n\tname: \"formule\",\r\n\tinitialState: {\r\n\t\ttab: [\r\n\t\t\t{\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tmodif: true,\r\n\t\t\t\ttabFormule: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnomFormule: \"\",\r\n\t\t\t\t\t\tformule: \"\",\r\n\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tsaveElement: { elem: null, indexCategorie: undefined, indexFormule: undefined }\r\n\t\t\t},\r\n\t\t],\r\n\t\tactualise: false,\r\n\t\tenregistre: false,\r\n\t\tchangement: false\r\n\t},\r\n\treducers: {\r\n\t\taddCategorie: (state) => {\r\n\t\t\tstate.tab.push({\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tmodif: true,\r\n\t\t\t\ttabFormule: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnomFormule: \"\",\r\n\t\t\t\t\t\tformule: \"\",\r\n\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t});\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tchangeNom: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].nom = action.payload.event;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tremoveCategorie: (state, action) => {\r\n\t\t\tstate.tab.splice(action.payload, 1);\r\n\t\t\tstate.enregistre = false;\r\n\t\t\tstate.changement = true;\r\n\t\t},\r\n\t\tchangeModifCategorie: (state, action) => {\r\n\t\t\tstate.tab[action.payload].modif = !state.tab[action.payload].modif;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\taddFormule: (state, action) => {\r\n\t\t\tstate.tab[action.payload].tabFormule[\r\n\t\t\t\tstate.tab[action.payload].tabFormule.length - 1\r\n\t\t\t].modif = false;\r\n\t\t\tstate.tab[action.payload].tabFormule.push({\r\n\t\t\t\tnomFormule: \"\",\r\n\t\t\t\tformule: \"\",\r\n\t\t\t\tmodif: true,\r\n\t\t\t});\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tchangeNomFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule, event } = action.payload;\r\n\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule].nomFormule = event;\r\n\t\t},\r\n\t\tchangeFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule, event } = action.payload;\r\n\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule].formule = event;\r\n\t\t},\r\n\t\tchangeModifFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule } = action.payload;\r\n\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule].modif = !state.tab[\r\n\t\t\t\tindexCategorie\r\n\t\t\t].tabFormule[indexFormule].modif;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tremoveFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule } = action.payload;\r\n\t\t\tstate.saveElement = { elem: state.tab[indexCategorie].tabFormule[indexFormule], indexCategorie: indexCategorie, indexFormule: indexFormule };\r\n\t\t\tstate.tab[indexCategorie].tabFormule.splice(indexFormule, 1);\r\n\t\t\tstate.enregistre = false;\r\n\t\t\tstate.changement = true;\r\n\t\t},\r\n\t\tundoFormule: (state) => {\r\n\t\t\tstate.tab[state.saveElement.indexCategorie].tabFormule.splice(state.saveElement.indexFormule, 0, {\r\n\t\t\t\tnomFormule: state.saveElement.elem.nomFormule,\r\n\t\t\t\tformule: state.saveElement.elem.formule,\r\n\t\t\t\tmodif: state.saveElement.elem.modif,\r\n\t\t\t});\r\n\t\t\tstate.changement = true;\r\n\t\t},\r\n\t\tchangePositionFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule, up } = action.payload;\r\n\t\t\tif (\r\n\t\t\t\t(up && indexFormule > 0) ||\r\n\t\t\t\t(!up && indexFormule < state.tab[indexCategorie].tabFormule.length - 1)\r\n\t\t\t) {\r\n\t\t\t\tlet value = up ? -1 : 1;\r\n\t\t\t\tlet save = state.tab[indexCategorie].tabFormule[indexFormule + value];\r\n\t\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule + value] = state.tab[indexCategorie].tabFormule[indexFormule];\r\n\t\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule] = save;\r\n\t\t\t}\r\n\t\t\tstate.enregistre = false;\r\n\t\t\tstate.changement = true;\r\n\t\t},\r\n\t\tenregistre: (state) => {\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[getCategoriesFormules.pending]: (state) => {\r\n\t\t\tstate.actualise = false;\r\n\t\t},\r\n\t\t[getCategoriesFormules.rejected]: (state, action) => {\r\n\t\t\tif (action.error.message === \"Request failed with status code 404\") {\r\n\t\t\t\tstate.tab = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnom: \"\",\r\n\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t\ttabFormule: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnomFormule: \"\",\r\n\t\t\t\t\t\t\t\tformule: \"\",\r\n\t\t\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t\tstate.actualise = true;\r\n\t\t\t\tstate.enregistre = true;\r\n\t\t\t\tstate.changement = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getCategoriesFormules.fulfilled]: (state, action) => {\r\n\t\t\tlet array = [];\r\n\t\t\taction.payload.forEach((element) => {\r\n\t\t\t\tlet tabFormule = [];\r\n\t\t\t\telement.formules.forEach((elemForm) => {\r\n\t\t\t\t\ttabFormule.push({\r\n\t\t\t\t\t\tnomFormule: elemForm.nom,\r\n\t\t\t\t\t\tformule: elemForm.contenu,\r\n\t\t\t\t\t\tmodif: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tarray.push({\r\n\t\t\t\t\tnom: element.nom,\r\n\t\t\t\t\tmodif: false,\r\n\t\t\t\t\ttabFormule: tabFormule,\r\n\t\t\t\t\tsaveTabFormule: tabFormule,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tstate.actualise = true;\r\n\t\t\tstate.enregistre = true;\r\n\t\t\tstate.changement = false;\r\n\t\t\tstate.tab = array;\r\n\t\t},\r\n\t\t[enregistrerFormules.fulfilled]: (state) => {\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setActualise, changeNom, addCategorie, removeCategorie, changeModifCategorie, addFormule, undoFormule, changeNomFormule, changeFormule, changeModifFormule, removeFormule, changePositionFormule } = formuleSlice.actions;\r\n\r\nexport const selectCategorieFormule = (state) => state.formule.tab;\r\n\r\nexport const selectFormule = (indexCat, indexFormule) => (state) => state.formule.tab[indexCat].tabFormule[indexFormule];\r\n\r\nexport const selectActualiseFormule = (state) => state.formule.actualise;\r\n\r\nexport const selectEnregistreFormule = (state) => state.formule.enregistre;\r\n\r\nexport const selectTabCategorieLength = (state) => state.formule.tab.length;\r\n\r\nexport const selectCategorie = (index) => (state) => state.formule.tab[index];\r\n\r\nexport const selectTabFormuleLength = (index) => (state) => state.formule.tab[index].tabFormule.length;\r\n\r\nexport const selectPremiereFormule = (state) => state.formule.tab[0].tabFormule[0].nomFormule;\r\n\r\nexport const selectChangement = (state) => state.formule.changement;\r\n\r\nexport default formuleSlice.reducer;","import React from 'react';\r\n\r\nimport { Button, Typography, Fab, makeStyles } from '@material-ui/core';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport DelayInput from '../InputAwait';\r\n\r\nimport { changeNomFormule, changeFormule, changeModifFormule, changePositionFormule, selectFormule, removeFormule } from \"../../slice/FormulesSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from 'clsx'\r\n\r\nconst ItemFomrule = ({ indexCategorie, indexFormule, length, onRemove }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        affichageFormule: {\r\n            display: \"flex\",\r\n        },\r\n        nomForm: {\r\n            width: \"30%\",\r\n        },\r\n        center: {\r\n            display: \"block\",\r\n            margin: \"auto\"\r\n        },\r\n        formule: {\r\n            width: \"40%\",\r\n            marginLeft: \"2%\"\r\n        },\r\n        buttonSave: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        typoNomFormule: {\r\n            overflowWrap: \"break-word\",\r\n            width: \"30%\"\r\n        },\r\n        typoFormule: {\r\n            overflowWrap: \"break-word\",\r\n            width: \"40%\",\r\n            marginLeft: \"2%\"\r\n        },\r\n        buttonModif: {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        containerFormules: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"0.5fr 3.5fr 2fr 0.75fr 0.75fr\",\r\n            gridTemplateRows: \"1fr\",\r\n            gap: \"0px 15px\",\r\n            margin: \"0px 1% 3%\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                gridTemplateColumns: \"0.5fr 3.5fr 2fr\",\r\n                gap: \"0, 10px\"\r\n            }\r\n        },\r\n        fabDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            },\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const matches = useMediaQuery('(min-width:960px)');\r\n\r\n    const item = useSelector(selectFormule(indexCategorie, indexFormule));\r\n\r\n    const changeModif = () => {\r\n        dispatch(changeModifFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule }));\r\n    }\r\n\r\n    const field = () => {\r\n        return (\r\n            <>\r\n                <div className={classes.affichageFormule}>\r\n                    <DelayInput\r\n                        label=\"Nom formule\"\r\n                        delay={300}\r\n                        value={item.nomFormule}\r\n                        onChange={e => dispatch(changeNomFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule, event: e }))}\r\n                    />\r\n                    <ArrowForwardIcon className={classes.center} />\r\n                    <DelayInput\r\n                        label=\"Formule\"\r\n                        delay={250}\r\n                        value={item.formule}\r\n                        onChange={e => dispatch(changeFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule, event: e }))}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    className={clsx(classes.buttonSave, classes.center)}\r\n                    variant=\"contained\"\r\n                    onClick={() => changeModif()}\r\n                    disabled={item.nomFormule === \"\" || item.formule === \"\"}\r\n                >\r\n                    Enregistrer\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const txt = () => {\r\n        return (\r\n            <>\r\n                <div className={classes.affichageFormule}>\r\n                    <Typography className={clsx(classes.typoNomFormule, classes.center)}>{item.nomFormule}</Typography>\r\n                    <ArrowForwardIcon className={classes.center} />\r\n                    <Typography className={clsx(classes.typoFormule, classes.center)}>{item.formule}</Typography>\r\n                </div>\r\n                <Button\r\n                    className={clsx(classes.buttonModif, classes.center)}\r\n                    variant=\"contained\"\r\n                    onClick={() => changeModif()}\r\n                >\r\n                    Modifier\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerFormules}>\r\n\r\n            <Fab\r\n                className={clsx(classes.fabDelete, classes.center)}\r\n                disabled={length === 1}\r\n                size=\"small\"\r\n                aria-label=\"add\"\r\n                onClick={() => {\r\n                    dispatch(removeFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule }));\r\n                    onRemove();\r\n                }}\r\n            >\r\n                <DeleteIcon className={classes.center} />\r\n            </Fab>\r\n\r\n            {item.modif ? field() : txt()}\r\n\r\n            {matches ?\r\n                <>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        variant='extended'\r\n                        size='small'\r\n                        onClick={e => dispatch(changePositionFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule, up: true }))}\r\n                    >\r\n                        <ArrowUpwardIcon />\r\n                    </Fab>\r\n                    <Fab color=\"primary\"\r\n                        variant='extended'\r\n                        size='small'\r\n                        onClick={() => dispatch(changePositionFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule, up: false }))}\r\n                    >\r\n                        <ArrowDownwardIcon />\r\n                    </Fab>\r\n                </>\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ItemFomrule);","import React from 'react';\r\nimport { Button, Snackbar, IconButton, makeStyles } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//open : dire l'état du pop up (ouvert ou fermé)\r\n//handleClose : actiona  faire lors de la fermeture (fonction)\r\n//actionName : nom de l'action (par exemple undo), si vide, pas d'action\r\n//si actionName, action = action a réaliser (fonction)\r\n//pos : position, si vide, à guauche par default\r\n//message : message a afficher dans la pop up\r\nexport default function PopUp({ open, handleClose, actionName, severity, pos, action, message, disabled }) {\r\n\tconst useStyles = makeStyles(() => ({\r\n\t\tsnackbar: {\r\n\t\t\tzIndex: 10\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Snackbar\r\n\t\t\t\tclassName={classes.snackbar}\r\n\t\t\t\tanchorOrigin={{ vertical: 'bottom', horizontal: pos !== undefined ? pos : \"left\" }}\r\n\t\t\t\topen={open}\r\n\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t>\r\n\t\t\t\t<Alert onClose={handleClose} severity={severity}\r\n\t\t\t\t\taction={(actionName !== null)\r\n\t\t\t\t\t\t? <Button disabled={disabled === null ? false : disabled} color=\"primary\" onClick={() => action()}>{actionName}</Button>\r\n\t\t\t\t\t\t: <IconButton color=\"inherit\" size=\"small\" onClick={() => handleClose()}>\r\n\t\t\t\t\t\t\t<CloseIcon fontSize=\"inherit\" />\r\n\t\t\t\t\t\t</IconButton>}\r\n\t\t\t\t>\r\n\t\t\t\t\t{message}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</div>\r\n\t);\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nimport Item from './ItemFormule';\r\nimport PopUp from '../PopUp';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addFormule, undoFormule, selectTabFormuleLength } from \"../../slice/FormulesSlice\";\r\n\r\nconst TodoListFormule = ({ indexCategorie }) => {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        buttonAjouterFormule: {\r\n            display: \"block\",\r\n            margin: \"6% auto 0 auto\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [openPopUpSave, setOpenPopUpSave] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const tabFormuleLength = useSelector(selectTabFormuleLength(indexCategorie));\r\n\r\n    const undo = () => {\r\n        dispatch(undoFormule())\r\n        setOpenPopUpSave(false);\r\n    }\r\n\r\n    const ajout = useCallback(() => {\r\n        dispatch(addFormule(indexCategorie));\r\n    }, [dispatch, indexCategorie]);\r\n\r\n    return (\r\n        <div>\r\n            {Array(tabFormuleLength).fill(0).map((_, index) => (\r\n                <Item onRemove={() => setOpenPopUpSave(true)} indexFormule={index} length={tabFormuleLength} key={index} indexCategorie={indexCategorie} />\r\n            ))}\r\n            <Button\r\n                className={classes.buttonAjouterFormule}\r\n                disabled={tabFormuleLength >= 20}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => ajout()}\r\n            >\r\n                Ajouter des formules\r\n            </Button>\r\n            <PopUp\r\n                message=\"Formule supprimée\"\r\n                actionName=\"RETOUR\"\r\n                action={() => undo()}\r\n                open={openPopUpSave}\r\n                handleClose={() => setOpenPopUpSave(false)}\r\n                pos=\"right\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListFormule);","import React, { useCallback, useState } from 'react';\r\n\r\nimport { Button, Fab, Typography, Accordion, AccordionSummary, AccordionDetails, makeStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport DelayInput from '../InputAwait';\r\nimport TodoListFormule from './TodoListFormule';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeModifCategorie, changeNom, removeCategorie, selectCategorie } from \"../../slice/FormulesSlice\";\r\n\r\nconst ItemCategorie = ({ index, length }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        fieldNomCategorie: {\r\n            width: \"30%\",\r\n        },\r\n        textNomCategorie: {\r\n            width: \"30%\",\r\n            marginTop: \"8px\"\r\n        },\r\n        fabModif: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        divItemAccordeon: {\r\n            display: \"block\",\r\n            margin: \"0 auto 2% auto\",\r\n            width: \"70%\",\r\n            minWidth: \"420px\",\r\n            borderRadius: \"3px\",\r\n            padding: \"2% 3%\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\"\r\n        },\r\n        enteteItemAccordeon: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\"\r\n        },\r\n        buttonDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        },\r\n        accordion: {\r\n            marginTop: 15\r\n        },\r\n        accordionDetails: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const item = useSelector(selectCategorie(index));\r\n\r\n    const change = useCallback(() => {\r\n        dispatch(changeModifCategorie(index));\r\n    }, [dispatch, index]);\r\n\r\n    const remove = useCallback(() => {\r\n        setOpen(false);\r\n        if (open) dispatch(removeCategorie(index));\r\n    }, [dispatch, index, open]);\r\n\r\n    //Quand les champs sont a remplir\r\n    const field = () => {\r\n        return (\r\n            <>\r\n                <DelayInput\r\n                    label=\"Nom Catégorie\"\r\n                    delayTimeout={250}\r\n                    value={item.nom}\r\n                    onChange={e => dispatch(changeNom({ index: index, event: e }))}\r\n                />\r\n                <Fab\r\n                    disabled={item.nom === \"\"}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => change()}\r\n                >\r\n                    <SaveIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n\r\n    //Quand les champs sont enregistrés\r\n    const txt = () => {\r\n        return (\r\n            <>\r\n                <Typography className={classes.textNomCategorie}>{item.nom}</Typography>\r\n                <Fab className={classes.fabModif}\r\n                    size=\"small\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => change()}\r\n                >\r\n                    <CreateIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.divItemAccordeon}>\r\n\r\n            <div className={classes.enteteItemAccordeon}>\r\n                {item.modif ? field() : txt()}\r\n                <Button className={classes.buttonDelete}\r\n                    disabled={length === 1}\r\n                    variant=\"contained\"\r\n                    onClick={e => setOpen(true)}\r\n                >\r\n                    Supprimer la catégorie\r\n                </Button>\r\n                <Dialog open={open} onClose={() => setOpen(false)}>\r\n                    <DialogTitle>Suppression</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Voulez-vous vraiment supprimer la catégorie ?</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpen(false)} color=\"primary\">Annuler</Button>\r\n                        <Button onClick={() => remove()} color=\"primary\" autoFocus>OK</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\r\n            <Accordion className={classes.accordion} square expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} />\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n                    <TodoListFormule indexCategorie={index} />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ItemCategorie);","import { useState } from \"react\";\r\n\r\nexport default function useConstructor(initializer) {\r\n    useState(initializer);\r\n}","import { useEffect } from 'react';\r\n\r\nexport default function useUnload(active) {\r\n\r\n    const handleBeforeUnload = event => {\r\n        if (active) event.preventDefault();\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n        }\r\n    });\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addVariableAPI, getVariablesAPI } from \"../utils/api.js\";\r\n\r\nexport const getAllVariables = createAsyncThunk(\"variable/getAllVariables\", async (idModele) => {\r\n\tconst response = await getVariablesAPI(idModele);\r\n\treturn response.data;\r\n});\r\n\r\nexport const setVariables = createAsyncThunk(\"variable/setVariables\", async (variable) => {\r\n\tconst response = await addVariableAPI(variable.idModele, variable.tab);\r\n\treturn response.data;\r\n});\r\n\r\nexport const variablesAleatoiresReducer = createSlice({\r\n\tname: \"variableAleatoire\",\r\n\tinitialState: {\r\n\t\ttab: [\r\n\t\t\t{\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 0,\r\n\t\t\t\tprecision: 0,\r\n\t\t\t\tmodif: true,\r\n\t\t\t},\r\n\t\t],\r\n\t\tsaveElement: { elem: null, index: undefined },\r\n\t\tactualise: false,\r\n\t\tenregistre: false,\r\n\t},\r\n\treducers: {\r\n\t\taddVariable: (state) => {\r\n\t\t\tstate.tab.push({\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 0,\r\n\t\t\t\tprecision: 0,\r\n\t\t\t\tmodif: true\r\n\t\t\t});\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tchangeNom: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].nom = action.payload.event;\r\n\t\t},\r\n\t\tchangeMin: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].min = action.payload.event;\r\n\t\t},\r\n\t\tchangeMax: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].max = action.payload.event;\r\n\t\t},\r\n\t\tremoveVariable: (state, action) => {\r\n\t\t\tif (state.tab.length > 1) {\r\n\t\t\t\tstate.saveElement = { elem: state.tab[action.payload], index: action.payload };\r\n\t\t\t\tstate.tab.splice(action.payload, 1);\r\n\t\t\t\tstate.enregistre = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tchangeModif: (state, action) => {\r\n\t\t\tstate.tab[action.payload].modif = !state.tab[action.payload].modif;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tchangePrecision: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].precision = action.payload.precision;\r\n\t\t},\r\n\t\tundoVariable: (state) => {\r\n\t\t\tstate.tab.splice(state.saveElement.index, 0, {\r\n\t\t\t\tnom: state.saveElement.elem.nom,\r\n\t\t\t\tmin: state.saveElement.elem.min,\r\n\t\t\t\tmax: state.saveElement.elem.max,\r\n\t\t\t\tprecision: state.saveElement.elem.precision,\r\n\t\t\t\tmodif: state.saveElement.elem.modif\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[getAllVariables.pending]: (state) => {\r\n\t\t\tstate.actualise = false;\r\n\t\t},\r\n\t\t[getAllVariables.rejected]: (state, action) => {\r\n\t\t\tif (action.error.message === \"Request failed with status code 404\") {\r\n\t\t\t\tstate.tab = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnom: \"\",\r\n\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\tmax: 0,\r\n\t\t\t\t\t\tprecision: 0,\r\n\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t\tstate.actualise = true;\r\n\t\t\t\tstate.enregistre = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getAllVariables.fulfilled]: (state, action) => {\r\n\t\t\tlet array = [];\r\n\t\t\taction.payload.forEach((element) => {\r\n\t\t\t\tarray.push({\r\n\t\t\t\t\tnom: element.nom,\r\n\t\t\t\t\tmin: element.min,\r\n\t\t\t\t\tmax: element.max,\r\n\t\t\t\t\tprecision: element.precision,\r\n\t\t\t\t\tmodif: false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tstate.actualise = true;\r\n\t\t\tstate.enregistre = true;\r\n\t\t\tstate.tab = array;\r\n\t\t},\r\n\t\t[setVariables.fulfilled]: (state) => {\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addVariable, changeNom, removeVariable, changeModif, changePrecision, changeMin, changeMax, undoVariable } = variablesAleatoiresReducer.actions;\r\n\r\nexport const selectVariablesAleatoires = (state) => state.variableAleatoire.tab;\r\n\r\nexport const selectActualise = (state) => state.variableAleatoire.actualise;\r\n\r\nexport const selectPrecision = (index) => (state) => state.variableAleatoire.tab[index].precision;\r\n\r\nexport const selectEnregistreVariable = (state) => state.variableAleatoire.enregistre;\r\n\r\nexport const selectTabLength = (state) => state.variableAleatoire.tab.length;\r\n\r\nexport const selectElement = (index) => (state) => state.variableAleatoire.tab[index];\r\n\r\nexport default variablesAleatoiresReducer.reducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getSujetAPI, setQuestionsAPI } from \"../utils/api.js\";\r\n\r\nexport const getSujet = createAsyncThunk(\"enonce/getSujet\", async (idModele) => {\r\n    const response = await getSujetAPI(idModele);\r\n    return response.data;\r\n});\r\n\r\nexport const setQuestions = createAsyncThunk(\"enonce/setQuestions\", async (props) => {\r\n    const response = await setQuestionsAPI(props.idModele, props.enonce, props.tabQuestions);\r\n    return response.data;\r\n});\r\n\r\nexport const enoncesReducer = createSlice({\r\n    name: \"enonce\",\r\n    initialState: {\r\n        enonceContenu: \"\",\r\n        question: [{\r\n            contenu: undefined,\r\n            reponse: [{\r\n                selectCat: \"\",\r\n                selectForm: \"\",\r\n                margeErreur: 5,\r\n                unite: [{\r\n                    abr: \" \",\r\n                    puissance: 1\r\n                }],\r\n            }],\r\n        }],\r\n        actualise: false,\r\n        enregistre: false\r\n    },\r\n    reducers: {\r\n        addQuestion: (state, action) => {\r\n            state.question.push({\r\n                contenu: \"\",\r\n                reponse: [{\r\n                    selectCat: 0,\r\n                    selectForm: action.payload,\r\n                    margeErreur: 5,\r\n                    unite: [{\r\n                        abr: \" \",\r\n                        puissance: 1\r\n                    }],\r\n                }],\r\n            });\r\n        },\r\n        removeQuestion: (state, action) => {\r\n            state.question.splice(action.payload, 1);\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeQuestion: (state, action) => {\r\n            state.question[action.payload.index].contenu = action.payload.contenu;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeSelect: (state, action) => {\r\n            state.question[action.payload.index].reponse = action.payload.reponse;\r\n            state.enregistre = false;\r\n\r\n        },\r\n        handleChangeUnite: (state, action) => {\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].unite = action.payload.tabUnite;\r\n            state.enregistre = false;\r\n        },\r\n        addReponse: (state, action) => {\r\n            state.question[action.payload.id].reponse.push({\r\n                selectCat: 0,\r\n                selectForm: action.payload.formule1,\r\n                margeErreur: 5,\r\n                unite: [{ abr: \" \", puissance: 1 }],\r\n            });\r\n            state.enregistre = false;\r\n        },\r\n        enregistre: (state) => {\r\n            state.enregistre = true;\r\n        },\r\n        handleChangeCat: (state, action) => {\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectCat = action.payload.value;\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectForm = action.payload.formule1;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeForm: (state, action) => {\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectForm = action.payload.value;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeMargeErreur: (state, action) => {\r\n            state.question[action.payload.indexQuestion].reponse[action.payload.indexReponse].margeErreur = action.payload.marge;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeEnonce: (state, action) => {\r\n            state.enonceContenu = action.payload;\r\n            state.enregistre = false;\r\n        },\r\n        removeReponse: (state, action) => {\r\n            state.question[action.payload.indexQuestion].reponse.splice(action.payload.indexReponse, 1);\r\n            state.enregistre = false;\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getSujet.pending]: (state) => {\r\n            state.actualise = false;\r\n        },\r\n        [getSujet.rejected]: (state) => {\r\n            state.enonceContenu = \"\";\r\n            state.question = [{\r\n                contenu: \"\",\r\n                reponse: [{\r\n                    selectCat: \"\",\r\n                    selectForm: \"\",\r\n                    margeErreur: 5,\r\n                    unite: [{ abr: \" \", puissance: 1 }],\r\n                }],\r\n            }];\r\n            state.actualise = true;\r\n            state.enregistre = true;\r\n        },\r\n        [getSujet.fulfilled]: (state, action) => {\r\n            let question = [];\r\n            state.enonceContenu = action.payload.enonce;\r\n            action.payload.questions.forEach(element => {\r\n                let reponse = [];\r\n                element.reponses.forEach(elem => {\r\n                    reponse.push({\r\n                        selectCat: elem.selectCat,\r\n                        selectForm: elem.selectForm,\r\n                        margeErreur: elem.margeErreur,\r\n                        unite: elem.unite\r\n                    });\r\n                });\r\n                question.push({ contenu: element.contenu, reponse: reponse });\r\n            });\r\n            state.question = question;\r\n            state.actualise = true;\r\n            state.enregistre = true;\r\n        },\r\n        [setQuestions.fulfilled]: (state) => {\r\n            state.enregistre = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { handleChangeEnonce, removeReponse, handleChangeMargeErreur, addQuestion, removeQuestion, handleChangeQuestion, handleChangeSelect, addReponse, handleChangeUnite, handleChangeCat, handleChangeForm } = enoncesReducer.actions;\r\n\r\nexport const selectEnonce = (state) => state.enonce;\r\n\r\nexport const selectTabReponse = (index) => (state) => state.enonce.question[index].reponse;\r\n\r\nexport const selectActualiseEnonce = (state) => state.enonce.actualise;\r\n\r\nexport const selectEnregistreEnonce = (state) => state.enonce.enregistre;\r\n\r\nexport const selectMargeErreur = (indexQuestion, indexReponse) => (state) => state.enonce.question[indexQuestion].reponse[indexReponse].margeErreur;\r\n\r\nexport const selectTabQuestionLength = (state) => state.enonce.question.length;\r\n\r\nexport const selectContenuEnonce = (state) => state.enonce.enonceContenu;\r\n\r\nexport const selectQuestion = (index) => (state) => state.enonce.question[index].contenu;\r\n\r\nexport const selectReponse = (indexQuestion, indexReponse) => (state) => state.enonce.question[indexQuestion].reponse[indexReponse];\r\n\r\nexport const selectReponseLength = (index) => (state) => state.enonce.question[index].reponse.length;\r\n\r\nexport default enoncesReducer.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addUniteAPI, getAllUniteAPI } from \"../utils/api.js\";\r\nimport _ from \"lodash\";\r\n\r\nexport const getAllUnite = createAsyncThunk(\"unite/getAllUnite\", async () => {\r\n\tconst response = await getAllUniteAPI();\r\n\treturn response.data;\r\n});\r\n\r\nexport const enregistreUnites = createAsyncThunk(\"unite/addunite\", async (tabUnites) => {\r\n\tconst response = await addUniteAPI(tabUnites);\r\n\treturn response.data;\r\n});\r\n\r\nexport const uniteSlice = createSlice({\r\n\tname: \"unite\",\r\n\tinitialState: {\r\n\t\ttabUnites: []\r\n\t\t// [{\r\n\t\t//   nom : undefined,\r\n\t\t//   abrev : undefined,\r\n\t\t// }]\r\n\t\t,\r\n\t\tindexEnModif: -1, //l'index de l'unité qui est en modif (-1 coorespond à aucune unité en modif)\r\n\t\tactualise: false, //indique si l'importation des données est terminée\r\n\t\tenregistre: false\r\n\t},\r\n\treducers: {\r\n\t\t//ajoute une unité dans le tableau Unité (ATTENTION : n'enregistre pas dans la BD)\r\n\t\t//paramètres : nomComplet de l'unité, abréviation\r\n\t\taddUnite: (state) => {\r\n\t\t\tlet index = state.tabUnites.push({\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tabrev: \"\"\r\n\t\t\t});\r\n\t\t\tstate.indexEnModif = index - 1;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\t//change le nom complet d'une unité\r\n\t\t//paramètres : nom complet de l'unité et index\r\n\t\tchangeNomComplet: (state, action) => {\r\n\t\t\tlet { index, value } = action.payload;\r\n\t\t\tstate.tabUnites[index].nom = value;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\t//change l'abréviation d'une unité\r\n\t\t//paramètres : abréviation de l'unité et index\r\n\t\tchangeAbreviation: (state, action) => {\r\n\t\t\tlet { index, value } = action.payload;\r\n\t\t\tstate.tabUnites[index].abrev = value;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\t//supprime l'unité dans le tableau\r\n\t\t//paramètres : index\r\n\t\tdeleteUnite: (state, action) => {\r\n\t\t\tlet index = action.payload;\r\n\t\t\tstate.indexEnModif = -1;\r\n\t\t\tstate.enregistre = false;\r\n\t\t\tstate.tabUnites.splice(index, 1);\r\n\t\t},\r\n\t\tsetIndexEnModif: (state, action) => {\r\n\t\t\tstate.indexEnModif = action.payload;\r\n\t\t},\r\n\t\tsetEnregistre: (state, action) => {\r\n\t\t\tstate.enregistre = action.payload;\r\n\t\t},\r\n\t\tsetTest: (state) => {\r\n\t\t\tstate.tabUnites = [\r\n\t\t\t\t{ nom: \"Sans Unité\", abrev: \" \" },\r\n\t\t\t\t{ nom: \"Gramme\", abrev: \"g\" },\r\n\t\t\t\t{ nom: \"Newton\", abrev: \"N\" }\r\n\t\t\t];\r\n\t\t}\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[getAllUnite.fulfilled]: (state, action) => {\r\n\t\t\tstate.tabUnites = [];\r\n\t\t\tconst sansUnite = _.remove(action.payload, function (o) {\r\n\t\t\t\treturn o.nom === \"Sans Unité\"\r\n\t\t\t});\r\n\r\n\t\t\tstate.tabUnites.push(sansUnite[0]);\r\n\r\n\t\t\taction.payload.forEach(unite => {\r\n\t\t\t\tstate.tabUnites.push({\r\n\t\t\t\t\tnom: unite.nom,\r\n\t\t\t\t\tabrev: unite.abrev\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tstate.actualise = true;\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t\t[getAllUnite.pending]: (state, action) => {\r\n\t\t\tstate.actualise = false;\r\n\t\t},\r\n\t\t[enregistreUnites.fulfilled]: (state, action) => {\r\n\t\t\tstate.indexEnModif = -1;\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t}\r\n});\r\n\r\nexport const { setTest, addUnite, changeNomComplet, changeAbreviation, deleteUnite, setIndexEnModif, setEnregistre } = uniteSlice.actions;\r\n\r\nexport const selectUnites = (state) => state.unite.tabUnites;\r\n\r\nexport const selectActualise = (state) => state.unite.actualise;\r\n\r\nexport const selectIndexEnMofid = (state) => state.unite.indexEnModif;\r\n\r\nexport const selectEnregistreUnite = (state) => state.unite.enregistre;\r\n\r\nexport default uniteSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAllModeleAPI, deleteModeleAPI, addModeleAPI } from \"../utils/api.js\";\r\n\r\nexport const getModele = createAsyncThunk(\"modele/getAllModele\", async () => {\r\n\tconst response = await getAllModeleAPI();\r\n\treturn response.data;\r\n});\r\n\r\nexport const removeModele = createAsyncThunk(\"modele/removeModele\", async (idModele) => {\r\n\tconst response = await deleteModeleAPI(idModele);\r\n\treturn response.data;\r\n});\r\n\r\nexport const addNewModele = createAsyncThunk(\"modele/new\", async (nom) => {\r\n\tconst response = await addModeleAPI(nom);\r\n\treturn response.data;\r\n});\r\n\r\nlet myStorage = window.localStorage;\r\n\r\nexport const modeleSlice = createSlice({\r\n\tname: \"modele\",\r\n\tinitialState: {\r\n\t\ttabName: [],\r\n\t\tidModeleSelectionne: myStorage.getItem(\"modele\"),\r\n\t\tactualise: false\r\n\t},\r\n\treducers: {\r\n\t\tselectionnerModele: (state, action) => {\r\n\t\t\tstate.idModeleSelectionne = action.payload;\r\n\t\t\tmyStorage.setItem(\"modele\", action.payload);\r\n\t\t},\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[getModele.rejected]: (state) => {\r\n\t\t\tstate.actualise = true;\r\n\t\t},\r\n\t\t[getModele.fulfilled]: (state, action) => {\r\n\t\t\tif (!state.actualise) {\r\n\t\t\t\tlet array = action.payload;\r\n\t\t\t\tarray.forEach((element) => {\r\n\t\t\t\t\tstate.tabName[element.id_modele] = {\r\n\t\t\t\t\t\tnom: element.nom_modele,\r\n\t\t\t\t\t\tindex: element.id_modele\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tstate.actualise = true;\r\n\t\t\t\tstate.chargementSuppression = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[removeModele.pending]: (state, action) => {\r\n\t\t\tstate.tabName.splice(action.meta.arg, 1);\r\n\t\t},\r\n\t\t[addNewModele.fulfilled]: (state, action) => {\r\n\t\t\tstate.tabName[action.payload.insertId] = {\r\n\t\t\t\tnom: action.meta.arg,\r\n\t\t\t\tindex: action.payload.insertId,\r\n\t\t\t};\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { selectionnerModele } = modeleSlice.actions;\r\n\r\nexport const selectModele = (state) => state.modele;\r\n\r\nexport const selectActualise = (state) => state.modele.actualise;\r\n\r\nexport const selectChargementSupp = (state) => state.modele.chargementSuppression;\r\n\r\nexport const selectIdModeleSelectionne = (state) => state.modele.idModeleSelectionne;\r\n\r\nexport const selectModeleActuel = (state) => state.modele.tabName[state.modele.idModeleSelectionne];\r\n\r\nexport default modeleSlice.reducer;","import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, DialogContentText, Input, MenuItem, FormControl, Select, TextField, Fab, makeStyles } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategoriesFormules } from \"../slice/FormulesSlice\";\r\nimport { getAllVariables } from \"../slice/VariablesAleatoiresSlice\";\r\nimport { getSujet } from \"../slice/EnoncesSlice\";\r\nimport { getAllUnite } from '../slice/UniteSlice';\r\nimport { selectionnerModele, addNewModele, removeModele, selectModele, selectActualise } from \"../slice/ModeleSlice\";\r\n\r\n//setClose pour fermer la PopUp (fonction)\r\n//open pour connaitre l'état de la pop u (ouvert ou fermé)\r\n//tard pour savoir si on autorise a selectionner plus tard le modèle\r\nconst SelectionModele = ({ setClose, open, tard }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divNouveauModele: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"80% 20%\",\r\n            gridGap: \"7%\",\r\n            marginTop: 30\r\n        },\r\n        fabAdd: {\r\n            marginLeft: \"5%\"\r\n        },\r\n        form: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginBottom: 20\r\n        },\r\n        divSelectModele: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"80% 20%\",\r\n            gridGap: \"7%\",\r\n            marginTop: 15\r\n        },\r\n        selectModele: {\r\n            width: 200\r\n        },\r\n        menuItem: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        fabDelete: {\r\n            margin: \"5%\",\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        },\r\n        dialogActions: {\r\n            marginBottom: \"3%\",\r\n            justifyContent: \"space-around\"\r\n        },\r\n        buttonLater: {\r\n            backgroundColor: theme.palette.primary.light\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const modele = useSelector(selectModele);\r\n    const actualise = useSelector(selectActualise);\r\n\r\n    const [select, setSelect] = useState(modele.idModeleSelectionne === null ? \"\" : modele.idModeleSelectionne);\r\n    const [nouveauModele, setNouveauModele] = useState({ etat: false, nom: \"\", error: false });\r\n    const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setSelect(event.target.value);\r\n        event.target.value === \"Créer nouveau modèle\"\r\n            ? setNouveauModele({ etat: true, nom: nouveauModele.nom, error: false })\r\n            : setNouveauModele({ etat: false, nom: nouveauModele.nom, error: false });\r\n    };\r\n\r\n    const choisirModele = () => {\r\n        if (select !== modele.idModeleSelectionne) { // Le toString ne fonctionne pas ici (voir si cela pose probleme mais fix l'erreur fatal temporairement)\r\n            dispatch(selectionnerModele(select));\r\n            dispatch(getCategoriesFormules(select));\r\n            dispatch(getAllVariables(select));\r\n            dispatch(getSujet(select));\r\n            dispatch(getAllUnite());\r\n        }\r\n        setClose();\r\n    }\r\n\r\n    const onChangeNouveauModele = (e) => {\r\n        setNouveauModele({ etat: true, nom: e.target.value, error: false });\r\n    }\r\n\r\n    const addNouveauModele = () => {\r\n        if (modele.tabName.includes(nouveauModele.nom)) {\r\n            setNouveauModele({ etat: true, nom: nouveauModele.nom, error: true });\r\n        } else {\r\n            dispatch(addNewModele(nouveauModele.nom));\r\n            setNouveauModele({ etat: true, nom: \"\", error: false });\r\n        }\r\n    }\r\n\r\n    const displayNouveauModele = () => {\r\n        return (\r\n            nouveauModele.etat\r\n                ? <div className={classes.divNouveauModele}>\r\n                    <TextField autoFocus size=\"small\" label=\"Nom du modèle\" variant=\"outlined\" required\r\n                        error={nouveauModele.error}\r\n                        value={nouveauModele.nom}\r\n                        onChange={e => onChangeNouveauModele(e)}\r\n                    />\r\n                    <Fab className={classes.fabAdd}\r\n                        size=\"small\" color=\"primary\" aria-label=\"add\"\r\n                        disabled={nouveauModele.nom === \"\" ? true : false}\r\n                        onClick={() => addNouveauModele()}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </div>\r\n                : null\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={() => setClose()}>\r\n                <DialogTitle>Selection du modèle de sujet</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={classes.form}>\r\n                        <FormControl>\r\n                            <InputLabel>Modèle</InputLabel>\r\n                            <div className={classes.divSelectModele}>\r\n                                <Select className={classes.selectModele} value={select} onChange={handleChange} input={<Input />}>\r\n                                    <MenuItem className={classes.menuItem} value=\"Créer nouveau modèle\">Créer nouveau modèle</MenuItem>\r\n                                    {!actualise ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{ margin: \"30px auto\", display: \"flex\", justifyContent: \"center\" }} /> : modele.tabName.map(item => <MenuItem key={item.index} value={item.index}>{item.nom}</MenuItem>)}\r\n                                </Select>\r\n                                <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\"\r\n                                    disabled={select === \"\" || nouveauModele.etat}\r\n                                    onClick={() => setOpenConfirm(true)}\r\n                                >\r\n                                    <DeleteIcon />\r\n                                </Fab>\r\n                            </div>\r\n                            {displayNouveauModele()}\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className={classes.dialogActions}>\r\n                    {tard ? <Button className={classes.buttonLater} variant=\"contained\" onClick={() => setClose()}>Choisir plus tard</Button> : null}\r\n                    <Button disabled={select === \"\" || select === \"Créer nouveau modèle\" ? true : false} onClick={e => choisirModele()} variant=\"contained\" color=\"primary\">Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={openConfirm} onClose={() => setOpenConfirm(false)}>\r\n                <DialogTitle>Suppression</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Voulez-vous vraiment supprimer ce modèle ?</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenConfirm(false)} color=\"primary\">Annuler</Button>\r\n                    <Button onClick={() => dispatch(removeModele(select))} disabled={select === \"\"} color=\"primary\" autoFocus>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(SelectionModele);","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContentText, DialogActions, DialogContent, Button } from '@material-ui/core';\r\n\r\nimport { getModelPromoAPI, desatributionSujetAPI } from \"../utils/api\";\r\n\r\nimport PopUp from './PopUp';\r\nimport useKeyPress from './use/useKeyPressCtrlS';\r\nimport useUnload from './use/useUnload';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Enregistrement = ({ isEnregistre, action, disabled }) => {\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(true);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [listePromo, setListePromo] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const touche = useKeyPress();\r\n\r\n    //ne pas quitter la page si pas enregistré dans la BD\r\n    useUnload(!isEnregistre);\r\n\r\n    useEffect(() => setOpenPopUp(true), [isEnregistre]);\r\n\r\n    const envoyer = useCallback(() => {\r\n        if (!isEnregistre && !disabled) {\r\n            dispatch(action).then((e) => {\r\n                if (e.meta.requestStatus === \"rejected\") {\r\n                    if (e.error.message === \"Request failed with status code 405\") {\r\n                        if (listePromo.length === 0) {\r\n                            getModelPromoAPI().then((d) => {\r\n                                setListePromo(d.data);\r\n                            });\r\n                        }\r\n                        setOpenDialog(true);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [dispatch, action, isEnregistre, disabled, listePromo]);\r\n\r\n    const suppAsso = (e) => {\r\n        desatributionSujetAPI(e.id_promo);\r\n        let tempTab = [...listePromo];\r\n        tempTab.splice(listePromo.indexOf(e), 1);\r\n        setListePromo(tempTab);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (touche) {\r\n            envoyer();\r\n        }\r\n    }, [touche, envoyer]); //ne pas ajouter envoyer ! sinon ca ne marche plus\r\n\r\n    return (\r\n        <>\r\n            <PopUp\r\n                severity={isEnregistre ? \"success\" : \"warning\"}\r\n                message={isEnregistre ? \"Enregistré\" : \"Enregistrer les modifications\"}\r\n                actionName={isEnregistre ? null : \"Enregistrer\"}\r\n                action={() => { if (!isEnregistre) envoyer() }}\r\n                disabled={disabled}\r\n                open={openPopUp}\r\n                handleClose={() => { if (isEnregistre) setOpenPopUp(false) }}\r\n                pos=\"left\"\r\n            />\r\n            <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n                <DialogTitle>Attention</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Après vérification, le sujet que vous voulez modifier est déja associé à une architecture, que voulez-vous faire ?</DialogContentText>\r\n                    {listePromo.map((e, index) => (\r\n                        <div key={index} style={{ display: \"flex\" }}>\r\n                            <p style={{ margin: \"auto 0\" }}>{e.nom_promo}</p>\r\n                            <Button onClick={() => suppAsso(e)} size=\"small\" variant=\"contained\" style={{ marginLeft: 20 }}>Supprimer l'association</Button>\r\n                        </div>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)} color=\"primary\">Abandonner</Button>\r\n                    <Button onClick={() => {\r\n                        envoyer();\r\n                        setOpenDialog(false);\r\n                    }} disabled={listePromo.length > 0} color=\"primary\" autoFocus>Enregistrer</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Enregistrement);","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKeyPress() {\r\n\tconst [keyPressed, setKeyPressed] = useState(false);\r\n\r\n\tconst downHandler = (e) => {\r\n\t\tif ((window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) && e.keyCode === 83) {\r\n\t\t\te.preventDefault();\r\n\t\t\tsetKeyPressed(true);\r\n\t\t\tsetInterval(() => { \r\n\t\t\t\tsetKeyPressed(false);\r\n\t\t\t}, 500); //car si on appuie pas sur une autre touche, reste true\r\n\t\t} else {\r\n\t\t\tsetKeyPressed(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"keydown\", downHandler);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"keydown\", downHandler);\r\n\t\t};\r\n\t});\r\n\r\n\treturn keyPressed;\r\n}","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectEnregistreFormule, enregistrerFormules, selectCategorieFormule } from \"../../slice/FormulesSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nconst EnregistrementFormule = () => {\r\n\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const tabCatFormule = useSelector(selectCategorieFormule);\r\n\r\n    return (\r\n        <Enregistre isEnregistre={isEnregistre} action={enregistrerFormules({ tab: tabCatFormule, idModele: idModele })} disabled={tabCatFormule.some(cat => cat.modif) || tabCatFormule.some(cat => cat.tabFormule.some(formule => formule.modif))} />\r\n    );\r\n}\r\n\r\nexport default React.memo(EnregistrementFormule);","import React, { useState } from 'react';\r\nimport { Fab, makeStyles, Typography } from '@material-ui/core';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport Items from '../../components/formules/ItemCategorie';\r\nimport useConstructor from '../../components/use/useContructor';\r\nimport useUnload from '../../components/use/useUnload';\r\nimport SelectionModele from '../../components/SelectionModele';\r\nimport EnregistrementFormule from '../../components/formules/EnregistrementFormule';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectTabCategorieLength, selectActualiseFormule, selectEnregistreFormule, addCategorie, getCategoriesFormules } from \"../../slice/FormulesSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nexport default function TodoListAccordeon() {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        fab: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const tabCatLength = useSelector(selectTabCategorieLength);\r\n    const actualise = useSelector(selectActualiseFormule);\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            idModele === null ? setOpen(true) : dispatch(getCategoriesFormules(idModele));\r\n        }\r\n    });\r\n\r\n    useUnload(!isEnregistre);\r\n\r\n    const displayFormule = () => {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h1\">FORMULES</Typography>\r\n                <hr className={classes.hr} />\r\n                <Fab className={classes.fab}\r\n                    disabled={tabCatLength >= 30}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => dispatch(addCategorie())}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n                {Array(tabCatLength).fill(0).map((_, index) => (\r\n                    <Items index={index} key={index} length={tabCatLength} />\r\n                ))}\r\n                <EnregistrementFormule />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        idModele === null\r\n            ? <SelectionModele tard={false} setClose={() => setOpen(false)} open={open} />\r\n            : actualise ? displayFormule() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n    );\r\n}","import React from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default function Particules() {\r\n\r\n    return (\r\n        <Particles\r\n            style={{ position: \"absolute\", opacity: \"0.6\", top: 0 }}\r\n            height=\"100vh\"\r\n            width=\"100%\"\r\n            params={{\r\n                \"particles\": {\r\n                    \"number\": {\r\n                        \"value\": 35,\r\n                        \"density\": {\r\n                            \"enable\": true,\r\n                            \"value_area\": 1969.2792437967696\r\n                        }\r\n                    },\r\n                    \"color\": {\r\n                        \"value\": \"#043f4f\"\r\n                    },\r\n                    \"shape\": {\r\n                        \"type\": \"circle\",\r\n                        \"stroke\": {\r\n                            \"width\": 0,\r\n                            \"color\": \"#000000\"\r\n                        },\r\n                        \"polygon\": {\r\n                            \"nb_sides\": 6\r\n                        },\r\n                        \"image\": {\r\n                            \"src\": \"img/github.svg\",\r\n                            \"width\": 100,\r\n                            \"height\": 100\r\n                        }\r\n                    },\r\n                    \"opacity\": {\r\n                        \"value\": 1,\r\n                        \"random\": true,\r\n                        \"anim\": {\r\n                            \"enable\": true,\r\n                            \"speed\": 1,\r\n                            \"opacity_min\": 0,\r\n                            \"sync\": false\r\n                        }\r\n                    },\r\n                    \"size\": {\r\n                        \"value\": 4,\r\n                        \"random\": true,\r\n                        \"anim\": {\r\n                            \"enable\": false,\r\n                            \"speed\": 4,\r\n                            \"size_min\": 0.3,\r\n                            \"sync\": false\r\n                        }\r\n                    },\r\n                    \"line_linked\": {\r\n                        \"enable\": false,\r\n                        \"distance\": 126.03387160299326,\r\n                        \"color\": \"#00ff74\",\r\n                        \"opacity\": 1,\r\n                        \"width\": 1.7329657345411573\r\n                    },\r\n                    \"move\": {\r\n                        \"enable\": true,\r\n                        \"speed\": 0.8,\r\n                        \"direction\": \"bottom-left\",\r\n                        \"random\": true,\r\n                        \"straight\": false,\r\n                        \"out_mode\": \"out\",\r\n                        \"bounce\": false,\r\n                        \"attract\": {\r\n                            \"enable\": false,\r\n                            \"rotateX\": 1024.0252067743202,\r\n                            \"rotateY\": 945.2540370224496\r\n                        }\r\n                    }\r\n                }\r\n            }} \r\n        />\r\n    );\r\n}","import React from 'react';\r\n\r\nimport ParticulesFond from '../../components/ParticulesFond';\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\nimport { getCategoriesFormules, selectEnregistreFormule } from \"../../slice/FormulesSlice\";\r\nimport { getAllVariables, selectEnregistreVariable } from \"../../slice/VariablesAleatoiresSlice\";\r\nimport { getSujet, selectEnregistreEnonce } from \"../../slice/EnoncesSlice\";\r\nimport { selectEnregistreUnite, getAllUnite } from '../../slice/UniteSlice';\r\n\r\nexport default function Accueil() {\r\n\r\n    const dispatch = useDispatch();\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const isEnregistreVariable = useSelector(selectEnregistreVariable);\r\n    const isEnregistreFormule = useSelector(selectEnregistreFormule);\r\n    const isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n    const isEnregistreUnite = useSelector(selectEnregistreUnite);\r\n\r\n    useConstructor(() => {\r\n        if (idModele !== null) {\r\n            if (!isEnregistreFormule) dispatch(getCategoriesFormules(idModele));\r\n            if (!isEnregistreVariable) dispatch(getAllVariables(idModele));\r\n            if (!isEnregistreEnonce) dispatch(getSujet(idModele));\r\n            if (!isEnregistreUnite) dispatch(getAllUnite());\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <ParticulesFond />\r\n        </div>\r\n    );\r\n}","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\r\nimport imageCompression from 'browser-image-compression';\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default function DropFile(props) {\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tdivDrop: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.light\r\n\t\t\t},\r\n\t\t\tborder: \"dashed 2px\",\r\n\t\t\tborderColor: theme.palette.primary.main,\r\n\t\t\ttextAlign: \"center\",\r\n\t\t\tcursor: \"pointer\",\r\n\t\t\tpadding: \"0 2%\",\r\n\t\t\twidth: \"40%\",\r\n\t\t\tminWidth: \"250px\",\r\n\t\t\tmargin: \"auto\",\r\n\t\t\theight: 175,\r\n\t\t\tposition: \"relative\",\r\n\t\t\tzIndex: 10,\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: \"90%\",\r\n\t\t\t\tmarginBottom: \"2%\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tcloudIcon: {\r\n\t\t\tfontSize: \"400%\"\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\t//s'execute lors de l'ajout d'un (ou plusieurs) fichier(s) dans le dropFile\r\n\tconst onDrop = useCallback(accepted_files => {\r\n\t\t//pour lire tous les fichiers déposés\r\n\t\taccepted_files.forEach(async (file) => {\r\n\t\t\t//si on veut une compression d'image\r\n\t\t\tif (props.compressImage) {\r\n\t\t\t\tconst compressedFile = await imageCompression(file, { maxSizeMB: 1, maxWidthOrHeight: 800, useWebWorker: true });\r\n\t\t\t\t//retouner les fichiers à l'élément parent\r\n\t\t\t\tawait props.changeFile(compressedFile);\r\n\t\t\t} else {\r\n\t\t\t\t//retouner les fichiers à l'élément parent\r\n\t\t\t\tprops.changeFile(file);\r\n\t\t\t}\r\n\t\t})\r\n\t}, [props]);\r\n\r\n\t//définir les types de fichiers acceptés et le nombre de fichiers à déposer\r\n\tconst { acceptedFiles, getRootProps, getInputProps } = useDropzone({ onDrop, accept: props.typeFile, maxFiles: 1 });\r\n\r\n\t//affichage du nom des fichiers déposés\r\n\tconst files = acceptedFiles.map(file => (\r\n\t\t<p key={file.path}>{file.path.length > 20 ? file.path.substring(0, 20) + \"...\" : file.path}</p>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div {...getRootProps()} className={classes.divDrop}>\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<p>{props.message}</p>\r\n\t\t\t<CloudUploadOutlinedIcon className={classes.cloudIcon} />\r\n\t\t\t{files}\r\n\t\t</div>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { TextField, Button, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport DropFile from '../../components/DropFile';\r\n\r\nimport { addModele3DAPI, addArchiAPI, getVariablesArchiAPI } from '../../utils/api';\r\n\r\nexport default function Architecture() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            paddingBottom: \"2%\",\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divImportModele: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n            padding: \"2%\"\r\n        },\r\n        divDropModele: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                flexWrap: \"wrap\"\r\n            }\r\n        },\r\n        divNumSujet: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"3%\"\r\n        },\r\n        saveButton1: {\r\n            display: \"block\",\r\n            margin: \"20px auto\"\r\n        },\r\n        saveButton2: {\r\n            marginLeft: 20\r\n        },\r\n        button: {\r\n            marginLeft: 20,\r\n        },\r\n        buttonVariable: {\r\n            display: \"block\",\r\n            margin: \"0 auto 2%\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [sujet, setSujet] = useState(\"\");\r\n    const [image1, setImage1] = useState(\"\");\r\n    const [image2, setImage2] = useState(\"\");\r\n    const [excel, setExcel] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        if (!isNaN(e.target.value)) setSujet(e.target.value);\r\n    }\r\n\r\n    const envoieModele3D = () => {\r\n        const data = new FormData();\r\n        data.append('image1', image1);\r\n        data.append('image2', image2);\r\n\r\n        addModele3DAPI({ sujet: sujet, images: data });\r\n    }\r\n\r\n    const envoieArchi = () => {\r\n        const data = new FormData();\r\n        data.append('excel', excel);\r\n\r\n        addArchiAPI(data);\r\n    }\r\n\r\n    const getVariables = () => {\r\n        getVariablesArchiAPI();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h1\">Architecture</Typography>\r\n            <hr className={classes.hr} />\r\n            <Button className={classes.buttonVariable} variant=\"contained\" color=\"primary\" onClick={() => getVariables()}>Récupere la liste des variables d'architecture</Button>\r\n            <div>\r\n                <DropFile typeFile='.xlsx' compressImage={false} changeFile={e => setExcel(e)} message=\"Charger la liste des architectures\" />\r\n                <Button className={classes.saveButton1} disabled={excel === \"\"} variant=\"contained\" color=\"primary\" onClick={() => envoieArchi()}>Enregistrer</Button>\r\n            </div>\r\n            <div className={classes.divImportModele}>\r\n                <div className={classes.divDropModele}>\r\n                    <DropFile typeFile='image/*' compressImage={false} changeFile={e => setImage1(e)} message=\"Importer la PREMIERE image du modèle 3D\" />\r\n                    <DropFile typeFile='image/*' compressImage={true} changeFile={e => setImage2(e)} message=\"Importer la SECONDE image du modèle 3D\" />\r\n                </div>\r\n                <div className={classes.divNumSujet}>\r\n                    <TextField autoFocus size=\"small\" label=\"Numéro du sujet\" variant=\"outlined\" required value={sujet} onChange={e => onChange(e)} />\r\n                    <Button className={classes.saveButton2} disabled={image1 === \"\" || image2 === \"\" || sujet === \"\"} variant=\"contained\" color=\"primary\" onClick={() => envoieModele3D()}>Enregistrer</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getInfoPromoAPI, getAllPromoAPI, addPromoAPI, deletePromoAPI } from \"../utils/api.js\";\r\n\r\nexport const getEtudiantsPromo = createAsyncThunk(\"promo/getEtudiants\", async (idPromo) => {\r\n    const response = await getInfoPromoAPI(idPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const getAllPromo = createAsyncThunk(\"promo/getAllPromo\", async () => {\r\n    const response = await getAllPromoAPI();\r\n    return response.data;\r\n});\r\n\r\nexport const addPromo = createAsyncThunk(\"promo/addPromo\", async (nomPromo) => {\r\n    const response = await addPromoAPI(nomPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const removePromo = createAsyncThunk(\"promo/remove\", async (select) => {\r\n    const response = await deletePromoAPI(select.idPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const promoSlice = createSlice({\r\n    name: 'promo',\r\n    initialState: {\r\n        tabPromo: [],\r\n        tabEtudiants: [],\r\n        idPromo: undefined,\r\n        enregistre: false\r\n        // tabEtudiants : [{\r\n        //     id : 0,\r\n        //     nom : 'undefined',\r\n        //     prenom : '',\r\n        //     promo : '',\r\n        //     avancement : '', // %\r\n        //     note : '' // /20\r\n        // }],\r\n    },\r\n    reducers: {\r\n        //importe un jeu d'essai pour faire des tests sur liste d'étudiants\r\n        setEtudiantsForTests: (state) => {\r\n            state.tabEtudiants = [\r\n                { id: 0, prenom: 'Florian', nom: 'TORIBIO', avancement: 10, note: 4 },\r\n                { id: 1, prenom: 'Raphael', nom: 'GAUTHIER', avancement: 80, note: 17 },\r\n                { id: 2, prenom: 'Léana', nom: 'RENON', avancement: 50, note: 16 },\r\n                { id: 5, prenom: 'Léo', nom: 'MERCIER', avancement: 40, note: 11 },\r\n                { id: 9, prenom: 'Sylvain', nom: 'FREDIANI', avancement: 90, note: 16 },\r\n                { id: 15, prenom: 'Test', nom: 'TEST', avancement: 100, note: 20 },\r\n            ]\r\n        },\r\n        //change l'id de la promo que le prof est en train de corriger\r\n        setIdPromo: (state, action) => {\r\n            state.idPromo = action.payload\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getEtudiantsPromo.fulfilled]: (state, action) => {\r\n            state.tabEtudiants = [];\r\n            action.payload.forEach(etudiant => {\r\n                state.tabEtudiants.push({\r\n                    id: etudiant.id_auth,\r\n                    prenom: etudiant.prenom,\r\n                    nom: etudiant.nom,\r\n                    avancement: 50,\r\n                    note: 16\r\n                });\r\n            });\r\n        },\r\n        [getAllPromo.fulfilled]: (state, action) => {\r\n            let promo = [];\r\n            action.payload.forEach(elem => promo.push({ idPromo: elem.id_promo, nom: elem.nom_promo }));\r\n            state.tabPromo = promo;\r\n            state.enregistre = true;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const { setEtudiantsForTests, setIdPromo } = promoSlice.actions;\r\n\r\n//retourne tous le tableau d'étudiants\r\nexport const selectEtudiants = state => state.promo.tabEtudiants;\r\n\r\n//retourne l'id de promo qui est en train de se faire corriger\r\nexport const selectIdPromo = state => state.promo.idPromo;\r\n\r\nexport const selectPromo = state => state.promo.tabPromo;\r\n\r\nexport const selectEnregistrePromo = state => state.promo.enregistre;\r\n\r\nexport default promoSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getReponsesCorrigees, getEssaisEtudiant } from \"../utils/api.js\";\r\nimport _ from 'lodash';\r\n\r\nexport const getReponsesCorDB = createAsyncThunk(\"correction/getReponsesCorDB\", async (props) => {\r\n    const response = await getReponsesCorrigees(props.idPromo, props.idEtudiant);\r\n    return response.data;\r\n});\r\n\r\nexport const getEssaisDB = createAsyncThunk(\"correction/getEssaisDB\", async (props) => {\r\n    const response = await getEssaisEtudiant(props.idEtudiant);\r\n    return response.data;\r\n});\r\n\r\nexport const consulterSlice = createSlice({\r\n    name: 'consulter',\r\n    initialState: {\r\n        etudiant: {\r\n            id_promo: undefined,\r\n            nom: \"\",\r\n            prenom: \"\",\r\n            id_etudiant: undefined,\r\n        },\r\n        tabEssais: undefined\r\n        /*[{\r\n            corrige : false,\r\n            dateEssai : \"01/01/2020\",\r\n            tabQuestions : [{\r\n                justif : \"\",\r\n                commentProf : \"\",\r\n                note : \"\",\r\n                num : 1,\r\n                tabReponses : [{\r\n                    justeApp : true, //reponse juste d'après l'application\r\n                    justeProf : false, //reponse juste d'après le professeur\r\n                    ecart : \"\",\r\n                    value : \"0\",\r\n                    unite : \"\",\r\n                }]\r\n            }]\r\n        }]*/,\r\n        tabReponsesJustes: undefined\r\n        /*[{\r\n            contenu : \"\",\r\n            num : 1,\r\n            tabReponses : [{\r\n                value : \"0\",\r\n                tabUnites : [{\r\n                    abr : '',\r\n                    puissance : '',\r\n                }]\r\n            }]\r\n        }]*/,\r\n        message: \"\"\r\n    },\r\n    reducers: {\r\n        //change la reponse\r\n        changeReponseJuste: (state, action) => {\r\n            let { indexE, indexQ, indexR } = action.payload\r\n            state.tabEssais[indexE].tabQuestions[indexQ].tabReponses[indexR].justeProf =\r\n                !state.tabEssais[indexE].tabQuestions[indexQ].tabReponses[indexR].justeProf\r\n        },\r\n        //importe un jeu d'essai pour faire des tests sur liste d'essais\r\n        setEssaisForTest: (state) => {\r\n            state.tabEssais = [\r\n                {\r\n                    dateEssai: \"05/01/2020\",\r\n                    corrige: false,\r\n                    tabQuestions: [{\r\n                        num: 1, justif: \"Scotland Forever󠁧󠁢\", commentProf: \"\", note: \"\",\r\n                        tabReponses: [{\r\n                            justeApp: true, justeProf: false, value: 12,\r\n                            unite: \"N^12\", ecart: \"0.3\"\r\n                        }]\r\n                    }]\r\n                },\r\n                {\r\n                    dateEssai: \"05/01/2020\",\r\n                    corrige: false,\r\n                    tabQuestions: [{\r\n                        num: 1, justif: \"\", commentProf: \"\", note: \"\",\r\n                        tabReponses: [{\r\n                            justeApp: false, justeProf: false, value: 11,\r\n                            unite: \"N^11\", ecart: \"1.3\"\r\n                        }]\r\n                    }]\r\n                }\r\n            ]\r\n        },\r\n        //change le message que le prof peut envoyer\r\n        //paramètres : valeur du message\r\n        changeMessage: (state, action) => {\r\n            state.message = action.payload;\r\n        },\r\n        //change le commentaire d'une question dans un essai\r\n        //paramètres : indexEssai, indexQuestion, commentaire\r\n        changeCommentaire: (state, action) => {\r\n            let { indexE, indexQ, commentaire } = action.payload;\r\n            state.tabEssais[indexE].tabQuestions[indexQ].commentProf = commentaire;\r\n        },\r\n        //change la note d'une question pour un essai\r\n        //paramètres : indexEssai, indexQuestion, note\r\n        changeNote: (state, action) => {\r\n            let { indexE, indexQ, note } = action.payload;\r\n            if ((!isNaN(note) && note <= 100 && note >= 0) || note === \"\") {\r\n                state.tabEssais[indexE].tabQuestions[indexQ].note = note;\r\n            }\r\n        },\r\n        //applique la correction en changeant le booléen revu\r\n        //paramètres : indexEssai\r\n        setCorrigeTrue: (state, action) => {\r\n            let indexE = action.payload;\r\n            state.tabEssais[indexE].corrige = true;\r\n        },\r\n        //met les infos des étudiants\r\n        //paramètres : id, nom et prénom de l'étudiant\r\n        setEtudiantConsulter: (state, action) => {\r\n            let { id_promo, id_etudiant, prenom, nom } = action.payload;\r\n            state.etudiant = {\r\n                id_promo: id_promo,\r\n                id_etudiant: id_etudiant,\r\n                prenom: prenom,\r\n                nom: nom,\r\n            };\r\n        },\r\n        //Met l'avis de l'application sur l'essai\r\n        setAvisApplication: (state) => {\r\n            //operation faite pour chaque essai présent\r\n            state.tabEssais.forEach(essai => {\r\n\r\n                //on regarde pour chaque question présente dans l'essai\r\n                essai.tabQuestions.forEach(question => {\r\n                    //on regarde la question corrigée lié à la question de l'essai\r\n                    const questionJuste = _.find(state.tabReponsesJustes, (o) => { return o.num === question.num })\r\n\r\n                    //on regarde pour chaque réponse de la question corrigée\r\n                    questionJuste.tabReponses.forEach(repCor => {\r\n\r\n                        //on essai de trouver une réponse juste dans l'essai pour cette réponse corrigée\r\n                        const reponse = _.find(question.tabReponses, (o) => {\r\n                            return !o.justeApp &&\r\n                                o.value >= repCor.value * (1 - repCor.margeErreur / 100) &&\r\n                                o.value <= repCor.value * (1 + repCor.margeErreur / 100)\r\n                        });\r\n\r\n                        //si il y en a une, on met qu'elle est juste\r\n                        if (reponse !== undefined) {\r\n                            reponse.justeApp = true\r\n                            reponse.ecart = Math.abs(reponse.value - repCor.value)\r\n                        }\r\n                    });\r\n\r\n                    //on s'interesse aux reponses fausses\r\n                    const repFausses = _.filter(question.tabReponses, (o) => { return !o.justeApp })\r\n\r\n                    //on regarde chacune des réponses fausses\r\n                    repFausses.forEach(rep => {\r\n                        let min = undefined\r\n\r\n                        questionJuste.tabReponses.forEach(repCor => {\r\n                            if (min === undefined) {\r\n                                min = Math.abs(rep.value - repCor.value)\r\n                            } else {\r\n                                min = Math.min(min, Math.abs(rep.value - repCor.value))\r\n                            }\r\n                        });\r\n\r\n                        rep.ecart = min;\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getReponsesCorDB.fulfilled]: (state, action) => {\r\n\r\n            state.tabReponsesJustes = []\r\n\r\n            action.payload.forEach(question => {\r\n                let index = state.tabReponsesJustes.push({\r\n                    contenu: question.contenu,\r\n                    num: question.id_question,\r\n                    tabReponses: [],\r\n                }) - 1;\r\n\r\n                question.reponses.forEach(reponse => {\r\n                    state.tabReponsesJustes[index].tabReponses.push({\r\n                        value: reponse.value,\r\n                        margeErreur: reponse.margeErreur,\r\n                        tabUnites: reponse.tabUnites\r\n                    });\r\n                })\r\n            });\r\n        },\r\n        [getReponsesCorDB.rejected]: (state, action) => {\r\n            state.tabReponsesJustes = undefined\r\n        },\r\n        [getEssaisDB.fulfilled]: (state, action) => {\r\n            let essaisDB = action.payload;\r\n            state.tabEssais = [];\r\n\r\n            //on regarde par rapport aux lignes données\r\n            essaisDB.forEach(essaiQuestionDB => {\r\n                //on recherche si un essai à cette date existe déjà\r\n                let essai = _.find(state.tabEssais, (o) => { return o.dateEssai === essaiQuestionDB.date });\r\n\r\n                //si l'essai n'existe pas, on le crée\r\n                if (essai === undefined) {\r\n                    let taille = state.tabEssais.push({\r\n                        corrige: false,\r\n                        dateEssai: essaiQuestionDB.date,\r\n                        tabQuestions: []\r\n                    });\r\n                    essai = state.tabEssais[taille - 1];\r\n                }\r\n\r\n                //on push la question\r\n                let indexQ = essai.tabQuestions.push({\r\n                    justif: \"\",\r\n                    commentProf: \"\",\r\n                    note: \"\",\r\n                    num: essaiQuestionDB.id_question,\r\n                    tabReponses: []\r\n                }) - 1;\r\n\r\n                let question = essai.tabQuestions[indexQ];\r\n\r\n                //on push les réponses données par l'étudiant pour cette question\r\n                essaiQuestionDB.reponses.forEach(reponseDB => {\r\n                    question.tabReponses.push({\r\n                        justeApp: false,\r\n                        justeProf: false,\r\n                        ecart: \"\",\r\n                        value: reponseDB.value,\r\n                        unite: reponseDB.tabUnites,\r\n                    });\r\n                });\r\n            });\r\n\r\n        },\r\n        [getEssaisDB.rejected]: (state, action) => {\r\n            state.tabEssais = undefined;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setEssaisForTest, changeReponseJuste, changeMessage, changeCommentaire, changeNote, setCorrigeTrue, setEtudiantConsulter, setAvisApplication } = consulterSlice.actions;\r\n\r\n//retourne tous le tableau des essais\r\nexport const selectEssais = state => state.consulter.tabEssais;\r\n\r\n//retourne le message que le professeur peut envoyer à l'étudiant\r\nexport const selectMessage = state => state.consulter.message;\r\n\r\n//retourne un essai particulier suivant un ID\r\nexport const selectEssaisWithID = index => state => state.consulter.tabEssais[index];\r\n\r\n//retourne tous le tableau des reponses justes\r\nexport const selectReponsesJustes = state => state.consulter.tabReponsesJustes;\r\n\r\n//retourne l'objet étudiant\r\nexport const selectEtudiantConsulter = state => state.consulter.etudiant;\r\n\r\n//retourne le nombre de réponses dans le tableau des réponses justes\r\nexport const selectNbReponsesAAvoir = numQuestion => state => {\r\n    let indexQ = _.findIndex(state.consulter.tabReponsesJustes, function (o) { return o.num === numQuestion; })\r\n    return state.consulter.tabReponsesJustes[indexQ].tabReponses.length\r\n}\r\n\r\nexport const selectUneQuestionJuste = numQuestion => state => _.find(state.consulter.tabReponsesJustes, (o) => {\r\n    return o.num === numQuestion;\r\n});\r\n\r\nexport default consulterSlice.reducer;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setEtudiantConsulter } from '../../slice/ConsulterSlice';\r\nimport { selectEtudiants, selectIdPromo } from '../../slice/PromoSlice';\r\n\r\nexport default function StickyHeadTable() {\r\n\r\n\tconst useStyles = makeStyles(() => ({\r\n\t\tlinkConsulter: {\r\n\t\t\ttextDecoration: \"none\",\r\n\t\t\tcolor: \"white\"\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [page, setPage] = useState(0);\r\n\r\n\tconst rowsPerPage = 10;\r\n\r\n\tconst tabEtudiants = useSelector(selectEtudiants);\r\n\r\n\tconst idPromo = useSelector(selectIdPromo);\r\n\r\n\tconst columns = [\r\n\t\t{ id: 'nom', label: 'Nom', minWidth: 170 },\r\n\t\t{ id: 'prenom', label: 'Prénom', minWidth: 170 },\r\n\t\t{ id: 'avancement', label: 'Avancement', minWidth: 170, align: 'right' },\r\n\t\t{ id: 'note', label: 'Note actuelle', minWidth: 170, align: 'right' },\r\n\t\t{ id: 'sujet', label: \"Sujet de l'éleve\", minWidth: 170, align: 'right' },\r\n\t];\r\n\r\n\tconst columnConsulterSujet = columns[columns.length - 1];\r\n\r\n\t//si la colonne demande quelque chose d'autre à ajouter, le rajoutera\r\n\tconst affichageEnplus = (id) => {\r\n\t\tlet string;\r\n\t\tswitch (id) {\r\n\t\t\tcase \"note\":\r\n\t\t\t\tstring = \"/20\";\r\n\t\t\t\tbreak\r\n\t\t\tcase \"avancement\":\r\n\t\t\t\tstring = \"%\";\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tstring = \"\";\r\n\t\t}\r\n\t\treturn string;\r\n\t}\r\n\r\n\t//gère le changement de page\r\n\tconst handleChangePage = (event, newPage) => {\r\n\t\tsetPage(newPage);\r\n\t};\r\n\r\n\tconst handleClickConsulter = (etudiant) => {\r\n\t\tdispatch(setEtudiantConsulter({\r\n\t\t\tid_promo: idPromo,\r\n\t\t\tid_etudiant: etudiant.id,\r\n\t\t\tprenom: etudiant.prenom,\r\n\t\t\tnom: etudiant.nom\r\n\t\t}));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table stickyHeader aria-label=\"sticky table\">\r\n\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n\t\t\t\t\t\t\t\t\t{column.label}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t{/* affiche les lignes de rowd une par une dans le tableau */}\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{/* affiche les lignes 10 par 10 */}\r\n\t\t\t\t\t\t{tabEtudiants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow hover tabIndex={-1} key={row.nom}>\r\n\t\t\t\t\t\t\t\t\t{/* affiche les infos pour chaque colonne d'élément de rows */}\r\n\t\t\t\t\t\t\t\t\t{columns.map((column) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\tcolumn.id !== 'sujet' ?\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t//cas des données du tableau d'étudiants\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{row[column.id]}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* affiche /20 ou % dans certains cas */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{affichageEnplus(column.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t//cas de la colonne consulter sujet\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={'sujet'} align={columnConsulterSujet.align}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={e => handleClickConsulter(row)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={classes.linkConsulter} to={\"/prof/correction/\" + row.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tConsulter\r\n                          \t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\r\n\t\t\t<TablePagination\r\n\t\t\t\trowsPerPageOptions={[]}\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tcount={tabEtudiants.length}\r\n\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\tpage={page}\r\n\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t/>\r\n\t\t</Paper>\r\n\t);\r\n}","import React from 'react';\r\nimport { makeStyles, MenuItem, Typography, TextField } from \"@material-ui/core\";\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getEtudiantsPromo, selectIdPromo, setIdPromo, getAllPromo, selectEnregistrePromo, selectPromo } from '../../slice/PromoSlice';\r\nimport Table from '../../components/correction/TableConsulter';\r\n\r\nexport default function Correction() {\r\n    const useStyles = makeStyles(() => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divTable: {\r\n            width: \"90%\",\r\n            margin: \"0 auto 2% auto\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        choixPromoDiv: {\r\n            width: \"200px\",\r\n            margin: \"auto\",\r\n        },\r\n        choixPromoField: {\r\n            width: \"100%\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const idPromo = useSelector(selectIdPromo);\r\n    const isEnregistrePromo = useSelector(selectEnregistrePromo);\r\n    const tabPromos = useSelector(selectPromo);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useConstructor(() => { \r\n        if (!isEnregistrePromo) dispatch(getAllPromo());\r\n    });\r\n\r\n    //change l'id de promo qui est corrigée et importe les étudiants de cette promo\r\n    const handleChangePromo = (e) => {\r\n        dispatch(setIdPromo(e.target.value));\r\n        dispatch(getEtudiantsPromo(e.target.value));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h1\">Correction</Typography>\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Select pour le choix de la promo */}\r\n            <div className={classes.choixPromoDiv}>\r\n                <TextField select value={idPromo} onChange={e => handleChangePromo(e)} className={classes.choixPromoField}\r\n                    helperText=\"Choisissez la promotion\" >\r\n                    {tabPromos.map((element) => {\r\n                        return (\r\n                            <MenuItem key={element.idPromo} value={element.idPromo}>\r\n                                {element.nom}\r\n                            </MenuItem>\r\n                        );\r\n                    })}\r\n                </TextField>\r\n            </div>\r\n\r\n            { /* Table pour la correction */}\r\n            {idPromo !== undefined \r\n                ? <div className={classes.divTable}>\r\n                    <Table />\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport SunEditor from \"suneditor-react\";\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectQuestion } from \"../../slice/EnoncesSlice\";\r\n\r\nexport default function QuestionEnonce({ index, handleChange }) {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        divQuestion: {\r\n            display: \"block\",\r\n            margin: \"auto\",\r\n            width: '100%',\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.3)\",\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    const value = useSelector(selectQuestion(index))\r\n\r\n    return (\r\n        <div className={classes.divQuestion}>\r\n            <SunEditor\r\n                defaultValue={value}\r\n                onChange={handleChange}\r\n                setOptions={{\r\n                    buttonList: [\r\n                        ['undo', 'redo'],\r\n                        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                        ['table', 'list'],\r\n                        ['removeFormat'],\r\n                    ]\r\n                }}\r\n                lang=\"fr\"\r\n                placeholder=\"Tapez votre question ici...\"\r\n                height=\"200\"\r\n                setDefaultStyle=\"background-color: lightgrey\"\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n//donne en html l'unité en fonction d'un tableau d'unités\r\n//props -> tabUnites ({abr, puissance})\r\nexport function afficherUnites(tabUnites) {\r\n    return (\r\n        <div>\r\n            {tabUnites.map((i, index) => (\r\n                <var key={index}>\r\n                    {i.abr}\r\n                    <sup> {i.puissance !== 1 && i.abr !== \" \" ? i.puissance : null} </sup>\r\n                </var>\r\n            )\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport _ from \"lodash\";\r\n\r\nimport { Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, makeStyles, TextField, MenuItem, InputAdornment } from '@material-ui/core';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUnites, getAllUnite } from '../../slice/UniteSlice';\r\nimport useConstructor from '../use/useContructor';\r\n\r\n//props\r\n//  => open (booléen pour savoir si le dialog est ouvert ou fermé)\r\n//  => unite (tableau de parties unités faisant l'unité d'une réponse [{abr : string, puissance : int }])\r\n//  => setTabUnite() (fonction changeant le tableau d'unités)\r\n//  => handleClose() (fonction appelé à la fermeture du dialog (doit s'occupe de fermer le dialog))\r\nexport default function ChoixUnite(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        alignementHorizontal: {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            columnGap: \"20px\",\r\n            alignItems: \"center\",\r\n            flexWrap: \"wrap\"\r\n        },\r\n        buttonDelete: {\r\n            color: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                color: theme.palette.error.dark,\r\n            }\r\n        },\r\n        buttonGap: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            columnGap: \"10px\"\r\n        },\r\n        choixInput: {\r\n            marginBottom: \"10px\"\r\n        },\r\n        puissance: {\r\n            width: \"40px\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    //Partie unité : 'Kg^3' est une partie d'unité de 'm^2.Kg^3'\r\n    //caractérisé par un id (identifiant de l'unité dans le tableau unites)\r\n\r\n    const [actualise, setActualise] = useState(false);\r\n\r\n    const [tabUnites, setUnites] = useState([{ abr: \"\", puissance: 1 }]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const unitesReference = useSelector(selectUnites);\r\n\r\n    useConstructor(() => {\r\n        if (unitesReference.length === 0) {\r\n            dispatch(getAllUnite());\r\n        }\r\n    });\r\n\r\n    const NB_MAX_PARTIES_UNITE = 6;\r\n    const MAX_WIDTH = \"lg\"; //taille de la boite de dialogue\r\n\r\n    //gère l'ajout d'une partie d'unité dans l'unité de la réponse\r\n    const handleAjouterUnite = () => {\r\n        let newTab = [...tabUnites, { abr: \"\", puissance: 1 }];\r\n        setUnites(newTab);\r\n    }\r\n\r\n    //remete l'unité à [{id : 0, puissance : 1}], soit sans unité\r\n    const handleRemettreAZero = () => {\r\n        setUnites([{ abr: \"\", puissance: 1 }]);\r\n    }\r\n\r\n    const actualiseOpen = () => {\r\n        if (props.open && !actualise) {\r\n            setUnites(_.cloneDeep(props.unite));\r\n            setActualise(true);\r\n        } else if (!props.open && actualise) {\r\n            setActualise(false);\r\n        }\r\n    }\r\n\r\n    //gère le changement d'unité par action sur le select\r\n    const handleChangeUnite = (index, event) => {\r\n        let newTab = [...tabUnites];\r\n        newTab[index].abr = event.target.value;\r\n        setUnites(newTab);\r\n    }\r\n\r\n    //gère la suppression de cette partie d'unité\r\n    const handleDeleteUnite = (index) => {\r\n        let newTab = [...tabUnites];\r\n        newTab.splice(index, 1);\r\n        setUnites(newTab);\r\n    }\r\n\r\n    //gère le changement de la puissance au fur et à mesure que l'étudiant la tape\r\n    //n'accepte que nombres entre -100 et 100\r\n    const handleChangePuissance = (index, event) => {\r\n        let value = event.target.value\r\n        if ((!isNaN(value) && Math.abs(value) < 100) || value === '-') {\r\n            changePuissance(index, value);\r\n        }\r\n    }\r\n\r\n    //lorque l'on quitte le focus sur la puissance, s'assure que la puissance soit bonne\r\n    //si valeur est égal à 0, ou à '-' ou à '', transforme en 1\r\n    const handleBlurUnite = (index) => {\r\n        let pow = tabUnites[index].puissance\r\n        if (parseInt(pow) === 0 || pow === '-' || pow === '') {\r\n            changePuissance(index, 1);\r\n        }\r\n    }\r\n\r\n    //change directement la puissance d'une unité\r\n    const changePuissance = (index, value) => {\r\n        let newTab = [...tabUnites];\r\n        newTab[index].puissance = value;\r\n        setUnites(newTab);\r\n    }\r\n\r\n    //gère la fermeture de la fenêtre avec annulation\r\n    const handleAnnuler = () => {\r\n        props.handleClose();\r\n    }\r\n\r\n    //gère la fermeture de la fenêtre avec application\r\n    const handleAppliquer = () => {\r\n        supprimerIterationsSansUnite();\r\n        props.setTabUnite(tabUnites);\r\n        props.handleClose();\r\n    }\r\n\r\n    //supprime les itérations de Sans Unité (abr : \" \") qui ne sont pas utiles\r\n    //si le tableau ne contient que des Sans unité, il n'en restera qu'un\r\n    const supprimerIterationsSansUnite = () => {\r\n        _.remove(tabUnites, function (o) {\r\n            return o.abr === \"\";\r\n        })\r\n\r\n        if (tabUnites.length === 0) {\r\n            tabUnites.push({ abr: \"\", puissance: 1 });\r\n        }\r\n    }\r\n\r\n    //affiche une partie d'unité\r\n    const partieUnite = (unite, index) => {\r\n        return (\r\n            <div className={classes.choixInput}>\r\n                <div className={classes.buttonGap}>\r\n                    {tabUnites.length > 1\r\n                        ?\r\n                        <IconButton className={classes.buttonDelete} size=\"small\" onClick={e => handleDeleteUnite(index)} >\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                        : null\r\n                    }\r\n                </div>\r\n\r\n                {/* Select de l'unité */}\r\n                <TextField select value={unite.abr} onChange={e => handleChangeUnite(index, e)}>\r\n                    {unitesReference.map((i) =>\r\n                        <MenuItem key={i.abrev} value={i.abrev} >\r\n                            {i.nom}\r\n                        </MenuItem>)}\r\n                </TextField>\r\n\r\n                {/* affiche la modif de puissance que si n'est pas Sans unité */}\r\n                {unite.abr !== \"\" ?\r\n                    <>\r\n                        {/* modif puissance */}\r\n                        <TextField value={unite.puissance} className={classes.puissance}\r\n                            onChange={e => handleChangePuissance(index, e)}\r\n                            onBlur={e => handleBlurUnite(index)}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        ^\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }} />\r\n                    </>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open} //ouverture gérée dans ItemReponse\r\n            maxWidth={MAX_WIDTH}\r\n            fullWidth={false}\r\n        >\r\n            {actualiseOpen()}\r\n            <DialogTitle className={classes.alignementHorizontal}>\r\n                Choix de l'unité\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <div className={classes.alignementHorizontal}>\r\n                    {/* affiche un à un les différentes parties d'unités*/}\r\n                    {tabUnites.map((i, index) =>\r\n                        <div key={index}>\r\n                            {partieUnite(i, index)}\r\n\r\n                            {/* interserction avec des . entre les parties d'unité */}\r\n                            {/*index < tabUnites.length-1 ? <b>.</b> : null*/}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* boutons d'action dans la fenêtre */}\r\n                <div className={classes.alignementHorizontal}>\r\n\r\n                    {/* bouton ajout de partie d\"unité */}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleAjouterUnite}\r\n\r\n                        //disabled si on atteint la limite de partie d'unité (6)\r\n                        disabled={tabUnites.length >= NB_MAX_PARTIES_UNITE}\r\n                    >\r\n                        Ajouter Unite\r\n                    </Button>\r\n\r\n                    {/* bouton pour remettre à zéro cette unité en entière */}\r\n                    <IconButton size=\"small\" color=\"primary\" onClick={handleRemettreAZero}\r\n                        title=\"remettre à 0\">\r\n                        <LoopIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </DialogContent>\r\n\r\n            {/* boutons de fermeture de boite de dialogue */}\r\n            <DialogActions>\r\n\r\n                {/* bouton pour annuler la modification de l'unité */}\r\n                <Button onClick={handleAnnuler}>\r\n                    Annuler\r\n                </Button>\r\n\r\n                {/* bouton pour appliquer à toutes les réponses de la question cette même unité */}\r\n                {/*\r\n                <Button onClick={e=>props.handleClose(\"appliquer a tous\")} \r\n                    title=\"appliquer l'unité à toutes les réponses de la question\">\r\n                    Appliquer à tous\r\n                </Button>\r\n                */}\r\n\r\n                {/* bouton pour appliquer uniquement à cette réponse cette unité */}\r\n                <Button onClick={handleAppliquer}>\r\n                    Appliquer\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useCallback } from 'react';\r\nimport { Typography, Slider, makeStyles } from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { handleChangeMargeErreur, selectMargeErreur } from '../../slice/EnoncesSlice';\r\n\r\nconst SliderBar = ({ indexQuestion, indexReponse }) => {\r\n\r\n\tconst useStyles = makeStyles(() => ({\r\n\t\tdivSlideBar: {\r\n\t\t\twidth: \"70%\",\r\n\t\t\tmargin: \"5% auto 0 auto\"\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst margeErreur = useSelector(selectMargeErreur(indexQuestion, indexReponse));\r\n\r\n\tconst handleClickAway = useCallback((value) => {\r\n\t\tdispatch(handleChangeMargeErreur({ indexQuestion: indexQuestion, indexReponse: indexReponse, marge: value }));\r\n\t}, [dispatch, indexQuestion, indexReponse]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.divSlideBar}>\r\n\t\t\t<Typography variant=\"caption\" gutterBottom>Marge d'erreur autorisée</Typography>\r\n\t\t\t<Slider\r\n\t\t\t\tdefaultValue={margeErreur}\r\n\t\t\t\tmarks={[{ value: 0, label: '0%' }, { value: 100, label: \"100%\" }]}\r\n\t\t\t\tstep={5}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={100}\r\n\t\t\t\tonChangeCommitted={(_, value) => handleClickAway(value)}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\taria-labelledby=\"discrete-slider-always\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default React.memo(SliderBar);","import React, { useCallback, useState } from \"react\";\r\nimport { Button, Input, makeStyles, MenuItem, Select } from \"@material-ui/core\";\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport { afficherUnites } from '../unite/UniteFunctions';\r\nimport ChoixUnite from '../unite/ChoixUnite';\r\nimport SlideBar from './SlideBarMarge';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { handleChangeCat, handleChangeForm, handleChangeUnite, selectReponse } from '../../slice/EnoncesSlice';\r\nimport { selectActualiseFormule, selectCategorieFormule } from \"../../slice/FormulesSlice\";\r\n\r\nconst Reponse = ({ indexReponse, indexQuestion }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divReponse: {\r\n            marginTop: 20,\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\r\n            gap: \"0 1%\",\r\n            border: \"solid 1px\",\r\n            borderColor: theme.palette.primary.light,\r\n            borderRadius: 3,\r\n            padding: \"2% 1% 2% 2%\"\r\n        },\r\n        select: {\r\n            width: 200,\r\n            maxHeight: \"38px !important\",\r\n            top: 26\r\n        },\r\n        divUniteMarge: {\r\n            height: 40,\r\n            position: \"relative\",\r\n            margin: \"auto\",\r\n            gridColumn: 3,\r\n            marginLeft: \"15%\"\r\n        },\r\n        affichageUnite: {\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            bottom: 10\r\n        },\r\n        divMarge: {\r\n            gridColumn: 4\r\n        },\r\n        buttonAjouterUnite: {\r\n            display: \"block\",\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        center: {\r\n            textAlign: \"center\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const actualise = useSelector(selectActualiseFormule);\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = useState(false);\r\n    const element = useSelector(selectReponse(indexQuestion, indexReponse));\r\n    const tabCatForm = useSelector(selectCategorieFormule);\r\n\r\n    const changeCat = useCallback((e) => {\r\n        dispatch(handleChangeCat({ idQuestion: indexQuestion, idReponse: indexReponse, value: e.target.value, formule1: tabCatForm[e.target.value].tabFormule[0].nomFormule }));\r\n    }, [dispatch, indexQuestion, indexReponse, tabCatForm]);\r\n\r\n    const changeForm = useCallback((e) => {\r\n        dispatch(handleChangeForm({ idQuestion: indexQuestion, idReponse: indexReponse, value: e.target.value }));\r\n    }, [dispatch, indexQuestion, indexReponse]);\r\n\r\n    return (\r\n        <div key={indexReponse} className={classes.divReponse}>\r\n            <Select className={classes.select} value={element.selectCat} onChange={e => changeCat(e)} input={<Input />}>\r\n                {!actualise ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{ margin: \"30px auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n                    : tabCatForm.map((item, index) => <MenuItem key={index} value={index}>{item.nom}</MenuItem>)}\r\n            </Select>\r\n            <Select className={classes.select} value={element.selectForm} onChange={e => changeForm(e)} input={<Input />}>\r\n                {tabCatForm[element.selectCat] === undefined ? null : tabCatForm[element.selectCat].tabFormule.map((item, index) => <MenuItem key={index} value={item.nomFormule}>{item.nomFormule}</MenuItem>)}\r\n            </Select>\r\n            <div className={classes.divUniteMarge}>\r\n                <Button variant=\"contained\" className={classes.buttonAjouterUnite} onClick={() => setOpen(true)}>Choisir les unités</Button>\r\n                <div className={classes.center}>{afficherUnites(element.unite)}</div>\r\n            </div>\r\n            <ChoixUnite open={open} handleClose={() => setOpen(false)} unite={element.unite} setTabUnite={e => dispatch(handleChangeUnite({ idQuestion: indexQuestion, idReponse: indexReponse, tabUnite: e }))} />\r\n            <div className={classes.divMarge}>\r\n                <SlideBar key={indexReponse} indexQuestion={indexQuestion} indexReponse={indexReponse} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Reponse);","import React, { useCallback, useState } from \"react\";\r\nimport { Button, makeStyles, Accordion, AccordionSummary, AccordionDetails, Fab } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Reponse from './ItemReponse';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectEnregistreFormule, selectPremiereFormule } from \"../../slice/FormulesSlice\";\r\nimport { addReponse, selectTabReponse, removeReponse, selectReponseLength } from '../../slice/EnoncesSlice';\r\n\r\nconst ListeReponses = ({ index }) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        divListeReponses: {\r\n            width: \"100%\",\r\n            marginTop: \"1%\"\r\n        },\r\n        buttonSupprimerReponse: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark,\r\n            },\r\n            \"&:disabled\": {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            position: \"absolute\",\r\n            right: \"2.5%\",\r\n        },\r\n        accordionDetails: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-around\"\r\n        },\r\n        divReponse: {\r\n            marginTop: 20\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const tabReponse = useSelector(selectTabReponse(index))\r\n    const [expanded, setExpanded] = useState(true);\r\n    const tabReponseLength = useSelector(selectReponseLength(index));\r\n    const premierFormule = useSelector(selectPremiereFormule);\r\n\r\n    const add = useCallback(() => {\r\n        dispatch(addReponse({ id: index, formule1: premierFormule }));\r\n    }, [dispatch, index, premierFormule]);\r\n\r\n    const remove = useCallback((indexReponse) => {\r\n        dispatch(removeReponse({ indexQuestion: index, indexReponse: indexReponse }));\r\n    }, [dispatch, index]);\r\n\r\n    return (\r\n        <div className={classes.divListeReponses}>\r\n            <Accordion square expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>Réponses à la question {index + 1}</AccordionSummary>\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n                    <Button\r\n                        disabled={tabReponse.length >= 10}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => add()}\r\n                    >\r\n                        Ajouter une réponse\r\n                        </Button>\r\n                    {!isEnregistre ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{ margin: \"30px auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n                        :\r\n                        Array(tabReponseLength).fill(0).map((_, indexReponse) => (\r\n                            <div className={classes.divReponse} key={indexReponse}>\r\n                                <Fab className={classes.buttonSupprimerReponse} size=\"small\" aria-label=\"delete\"\r\n                                    disabled={tabReponse.length === 1}\r\n                                    onClick={() => remove(indexReponse)}\r\n                                >\r\n                                    <DeleteIcon />\r\n                                </Fab>\r\n                                <Reponse key={indexReponse} indexReponse={indexReponse} indexQuestion={index} />\r\n                            </div>\r\n                        ))}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ListeReponses);\r\n","import React from 'react';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nconst MyEditor = ({ handleChange, value }) => {\r\n\r\n    return (\r\n        <div>\r\n            <SunEditor\r\n                onChange={handleChange}\r\n                defaultValue={value}\r\n                setOptions={{\r\n                    buttonList: [\r\n                        ['undo', 'redo'],\r\n                        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                        ['table', 'list'],\r\n                        ['removeFormat'],\r\n                        ['outdent', 'indent'],\r\n                        ['fullScreen']\r\n                    ]\r\n                }}\r\n                lang=\"fr\"\r\n                placeholder={value === \"\" ? null : \"Tapez votre énoncé ici...\"}\r\n                height=\"300\"\r\n                setDefaultStyle=\"background-color: lightgrey\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyEditor;","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectEnonce, selectEnregistreEnonce, setQuestions } from \"../../slice/EnoncesSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nconst EnregistrementEnonce = () => {\r\n\r\n    const isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const enonce = useSelector(selectEnonce);\r\n\r\n    return (\r\n        <Enregistre isEnregistre={isEnregistreEnonce} action={setQuestions({ idModele: idModele, enonce: enonce.enonceContenu, tabQuestions: enonce.question })} />\r\n    );\r\n}\r\n\r\nexport default React.memo(EnregistrementEnonce);","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Button, makeStyles, Fab, Typography } from \"@material-ui/core\";\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport QuestionEnonce from \"../../components/enonce/QuestionEnonce\";\r\nimport useConstructor from \"../../components/use/useContructor\";\r\nimport ListeReponses from \"../../components/enonce/ListeReponses\";\r\nimport SelectionModele from '../../components/SelectionModele';\r\nimport MyEditor from '../../components/enonce/EnTete';\r\nimport useUnload from '../../components/use/useUnload';\r\nimport EnregistrementEnonce from '../../components/enonce/EnregistrementEnonce';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\nimport { addQuestion, removeQuestion, handleChangeEnonce, handleChangeQuestion, selectActualiseEnonce, selectTabQuestionLength, selectEnregistreEnonce, getSujet, selectContenuEnonce } from \"../../slice/EnoncesSlice\";\r\nimport { getCategoriesFormules, selectEnregistreFormule, selectPremiereFormule, selectChangement } from \"../../slice/FormulesSlice\";\r\n\r\nexport default function Enonces() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        enonceSujet: {\r\n            width: \"70%\",\r\n            margin: \"auto\"\r\n        },\r\n        divQuestion: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            width: \"80%\",\r\n            margin: \"40px auto\",\r\n            padding: \"1% 2% 2%\"\r\n        },\r\n        divQuestionReponse: {\r\n            marginTop: 40,\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            flexWrap: \"wrap\",\r\n        },\r\n        buttonAddQuestion: {\r\n            display: \"block\",\r\n            margin: \"50px auto\"\r\n        },\r\n        fabDelete: {\r\n            float: \"right\",\r\n            marginLeft: 20,\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const actualiseEnonce = useSelector(selectActualiseEnonce);\r\n    const isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n    const isEnregistreFormule = useSelector(selectEnregistreFormule);\r\n    const premierFormule = useSelector(selectPremiereFormule);\r\n    const tabQuestionLength = useSelector(selectTabQuestionLength);\r\n    const enTete = useSelector(selectContenuEnonce);\r\n    const changementFormule = useSelector(selectChangement);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistreEnonce) {\r\n            if (idModele === null) {\r\n                setOpen(true);\r\n            }\r\n            if (!isEnregistreFormule) dispatch(getCategoriesFormules(idModele));\r\n            if (!isEnregistreEnonce) dispatch(getSujet(idModele));\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (changementFormule) {\r\n            dispatch(getCategoriesFormules(idModele));\r\n        }\r\n    }, [changementFormule, dispatch, idModele]);\r\n\r\n    useUnload(!isEnregistreEnonce);\r\n\r\n    const deleteQuestion = useCallback((index) => {\r\n        dispatch(removeQuestion(index));\r\n    }, [dispatch]);\r\n\r\n    const displayEnonce = () => {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h1\">énoncé</Typography>\r\n                <hr className={classes.hr} />\r\n                <div className={classes.enonceSujet}>\r\n                    <MyEditor value={enTete} handleChange={e => dispatch(handleChangeEnonce(e))} />\r\n                </div>\r\n                {Array(tabQuestionLength).fill(0).map((_, index) => (\r\n                    <div key={index} className={classes.divQuestion}>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <p style={{ fontSize: \"200%\", margin: \"auto 0\" }}>Question {index + 1}</p>\r\n                            <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\"\r\n                                disabled={tabQuestionLength === 1}\r\n                                onClick={() => deleteQuestion()}\r\n                            >\r\n                                <DeleteIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        <div className={classes.divQuestionReponse}>\r\n                            <QuestionEnonce index={index} handleChange={e => dispatch(handleChangeQuestion({ contenu: e, index: index }))} />\r\n                            <ListeReponses index={index} idModele={idModele} />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <Button\r\n                    disabled={tabQuestionLength >= 20}\r\n                    className={classes.buttonAddQuestion}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => dispatch(addQuestion(premierFormule))}\r\n                >\r\n                    Ajouter une question\r\n                </Button>\r\n                <EnregistrementEnonce />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        idModele === null\r\n            ? <SelectionModele tard={false} setClose={() => setOpen(false)} open={open} />\r\n            : actualiseEnonce ? displayEnonce() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n    );\r\n}","import React, { useCallback } from 'react';\r\nimport { Typography, Slider, makeStyles } from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changePrecision, selectPrecision } from \"../../slice/VariablesAleatoiresSlice\";\r\n\r\nconst SlideBar = ({ index }) => {\r\n    const useStyles = makeStyles(() => ({\r\n        root: {\r\n            width: 120\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const precisionSlice = useSelector(selectPrecision(index));\r\n\r\n    const valueLabelFormat = (value) => {\r\n        if (value !== 0) {\r\n            return `10^${value}`;\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    const handleChange = useCallback((value) => {\r\n        dispatch(changePrecision({ index: index, precision: value }));\r\n    }, [dispatch, index]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Slider\r\n                defaultValue={precisionSlice}\r\n                min={-6}\r\n                step={1}\r\n                max={6}\r\n                getAriaValueText={valueLabelFormat}\r\n                valueLabelFormat={valueLabelFormat}\r\n                onChangeCommitted={(_, value) => handleChange(value)}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"non-linear-slider\"\r\n            />\r\n            <Typography gutterBottom>Précision</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(SlideBar);","import React, { useCallback } from 'react';\r\n\r\nimport { Fab, Typography, makeStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport DelayInput from '../InputAwait';\r\nimport SlideBar from './SlideBarVariable';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeNom, changeMax, changeMin, changeModif, selectElement, removeVariable } from \"../../slice/VariablesAleatoiresSlice\";\r\n\r\nconst ItemVariable = ({ index, length, onRemove }) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        typo: {\r\n            marginTop: 8\r\n        },\r\n        containerVariables: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"0.25fr 1fr 0.10fr 0.5fr 0.5fr 0.5fr 0.25fr\",\r\n            gridTemplateRows: \"1fr\",\r\n            gap: \"0px 30px\",\r\n            margin: \"auto\",\r\n            width: \"90%\",\r\n            marginTop: \"3%\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                gap: \"0px 12px\",\r\n                width: \"95%\",\r\n                marginTop: \"5%\"\r\n            }\r\n        },\r\n        center: {\r\n            margin: \"auto\",\r\n            display: \"block\",\r\n        },\r\n        fabDelete: {\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            },\r\n            color: \"white\"\r\n        },\r\n        fabSave: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fabModif: {\r\n            backgroundColor: theme.palette.primary.light\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const item = useSelector(selectElement(index));\r\n\r\n    const remove = useCallback(() => {\r\n        dispatch(removeVariable(index));\r\n        onRemove();\r\n    }, [dispatch, index, onRemove]);\r\n\r\n    const change = useCallback(() => dispatch(changeModif(index)), [dispatch, index]);\r\n\r\n    const displayModif = () => {\r\n        return (\r\n            <>\r\n                <Fab className={classes.fabSave} size=\"small\" aria-label=\"add\"\r\n                    disabled={item.nom === \"\" || parseFloat(item.min) > parseFloat(item.max)}\r\n                    onClick={() => change()}\r\n                >\r\n                    <SaveIcon />\r\n                </Fab>\r\n                <DelayInput\r\n                    label=\"Nom formule\"\r\n                    delay={300}\r\n                    value={item.nom}\r\n                    onChange={e => dispatch(changeNom({ index: index, event: e }))}\r\n                />\r\n                <ArrowRightIcon fontSize=\"large\" />\r\n                <DelayInput\r\n                    typeNumber={true}\r\n                    label=\"Min\"\r\n                    delayTimeout={300}\r\n                    value={item.min}\r\n                    onChange={e => dispatch(changeMin({ index: index, event: e }))}\r\n                />\r\n                <DelayInput\r\n                    typeNumber={true}\r\n                    label=\"Max\"\r\n                    delayTimeout={300}\r\n                    value={item.max}\r\n                    onChange={e => dispatch(changeMax({ index: index, event: e }))}\r\n                />\r\n                <SlideBar index={index} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const displayTxt = () => {\r\n        return (\r\n            <>\r\n                <Fab className={classes.fabModif}\r\n                    size=\"small\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => change()}\r\n                >\r\n                    <CreateIcon />\r\n                </Fab>\r\n                <Typography className={classes.typo}>{item.nom}</Typography>\r\n                <ArrowRightIcon fontSize=\"large\" />\r\n                <Typography align=\"center\">Min <br />{item.min}</Typography>\r\n                <Typography align=\"center\">Max <br />{item.max} </Typography>\r\n                <Typography align=\"center\">Précision <br />10^{item.precision}</Typography>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerVariables}>\r\n            {item.modif ? displayModif() : displayTxt()}\r\n            <Fab className={classes.fabDelete}\r\n                disabled={length <= 1}\r\n                size=\"small\"\r\n                aria-label=\"add\"\r\n                onClick={() => remove()}\r\n            >\r\n                <DeleteIcon className={classes.center} />\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ItemVariable);","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectVariablesAleatoires, selectEnregistreVariable, setVariables } from \"../../slice/VariablesAleatoiresSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nconst Enregistrement = () => {\r\n\r\n     const tableauVariables = useSelector(selectVariablesAleatoires);\r\n     const idModele = useSelector(selectIdModeleSelectionne);\r\n     const isEnregistre = useSelector(selectEnregistreVariable);\r\n\r\n     return (\r\n          <Enregistre isEnregistre={isEnregistre} action={setVariables({ tab: tableauVariables, idModele: idModele })} disabled={tableauVariables.some(variables => variables.modif)} />\r\n     );\r\n}\r\n\r\nexport default React.memo(Enregistrement);","import React, { useState } from 'react';\r\nimport { Fab, makeStyles, Typography } from '@material-ui/core';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport ItemVariablesAleatoire from '../../components/variable/ItemVariableAleatoire';\r\nimport useConstructor from '../../components/use/useContructor';\r\nimport PopUp from '../../components/PopUp';\r\nimport SelectionModele from '../../components/SelectionModele';\r\nimport EnregistrementVariableAleatoires from '../../components/variable/EnregistrementVariableAleatoires';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectActualise, selectEnregistreVariable, addVariable, undoVariable, getAllVariables, selectTabLength } from \"../../slice/VariablesAleatoiresSlice\"\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nexport default function VariablesAleatoires() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            paddingBottom: \"2%\"\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        fab: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divItemvariable: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"2% 3% 4% 3%\",\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: \"90%\"\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    //gerer pop up pour le undo lors de suppression\r\n    const [openPopUpUndo, setOpenPopUpUndo] = useState(false);\r\n\r\n    //gere la pop up de selection de modelee\r\n    const [openModele, setOpenModele] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const lengthTab = useSelector(selectTabLength);\r\n    //savoir si les variables sont récupérées de la BD\r\n    const isEnregistre = useSelector(selectEnregistreVariable);\r\n    //savoir si la recupération les données sont conectées à la BD\r\n    const isActualise = useSelector(selectActualise)\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n\r\n    useConstructor(() => {\r\n        //si pas encore récupérées de la BD \r\n        if (!isEnregistre) {\r\n            idModele === null ? setOpenModele(true) : dispatch(getAllVariables(idModele));\r\n        }\r\n    });\r\n\r\n    const undo = () => {\r\n        dispatch(undoVariable());\r\n        setOpenPopUpUndo(false);\r\n    }\r\n\r\n    const displayVariable = () => {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Typography variant=\"h1\">Variables aléatoires</Typography>\r\n                <hr className={classes.hr} />\r\n                <Fab className={classes.fab}\r\n                    disabled={lengthTab >= 75}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => dispatch(addVariable())}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n                <div className={classes.divItemvariable}>\r\n                    {/* EVITE DE FAIRE PASSER LE TABLEAU DE VARIABLE ET DE MODIFIER TOUTES LES VARIABLES A CHAQUE CHANGEMENT D'UNE */}\r\n                    {Array(lengthTab).fill(0).map((_, index) => (\r\n                        <ItemVariablesAleatoire onRemove={() => setOpenPopUpUndo(true)} length={lengthTab} key={index} index={index} />\r\n                    ))}\r\n                    <PopUp\r\n                        message=\"Variable supprimée\"\r\n                        actionName=\"RETOUR\"\r\n                        action={() => undo()}\r\n                        open={openPopUpUndo}\r\n                        handleClose={() => setOpenPopUpUndo(false)}\r\n                        pos=\"right\"\r\n                    />\r\n                </div>\r\n                <EnregistrementVariableAleatoires />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        idModele === null\r\n            ? <SelectionModele tard={false} setClose={() => setOpenModele(false)} open={openModele} />\r\n            : isActualise ? displayVariable() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport { Table, TableContainer, TableHead, TableRow, Paper, TableCell, TableBody, Typography, Collapse, Box, IconButton, DialogActions, Button, TextField, makeStyles } from '@material-ui/core';\r\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeReponseJuste, selectEssaisWithID, changeCommentaire, changeNote, setCorrigeTrue, selectUneQuestionJuste, setAvisApplication } from '../../slice/ConsulterSlice';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    boxReponses: {\r\n        paddingBottom: 0,\r\n        paddingTop: 0,\r\n        backgroundColor: \"#f2f2f2\"\r\n    },\r\n    commentaire: {\r\n        width: \"100%\"\r\n    },\r\n    noteTextField: {\r\n        width: '30px'\r\n    },\r\n    noteInput: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nexport default function EssaiEtudiant(props) {\r\n    const essai = useSelector(selectEssaisWithID(props.indexEssai));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [actualise, setActu] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            if (!actualise) {\r\n                dispatch(setAvisApplication());\r\n                setActu(true);\r\n            }\r\n        }\r\n\r\n    }, [actualise, dispatch, props.open]);\r\n\r\n\r\n    const handleClose = () => {\r\n        setActu(false);\r\n        props.setOpen(false);\r\n    }\r\n\r\n    const appliquerCorrection = () => {\r\n        dispatch(setCorrigeTrue(props.indexEssai));\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        essai === undefined ?\r\n            null :\r\n            <Dialog\r\n                open={props.open}\r\n                maxWidth=\"md\"\r\n                fullWidth={true}\r\n                onClose={handleClose}>\r\n                <DialogTitle>\r\n                    Essai du {moment(essai.dateEssai).format(\"DD/MM/YYYY\")}\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" />\r\n                                    <TableCell align=\"center\">Numéro Question</TableCell>\r\n                                    <TableCell align=\"center\">Réponses Justes</TableCell>\r\n                                    <TableCell align=\"center\">Réponses Attendues</TableCell>\r\n                                    <TableCell align=\"center\">Question Juste?</TableCell>\r\n                                    <TableCell align=\"center\"\r\n                                        title=\"Attention, cette note est à titre indicatif et ne concerne que cet essai\"\r\n                                    >Votre Note</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {essai.tabQuestions.map((item, index) => {\r\n                                    return (\r\n                                        <Question question={item} indexQuestion={index} indexEssai={props.indexEssai} />\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={appliquerCorrection}>Appliquer la correction</Button>\r\n                    <Button onClick={handleClose}>Fermer</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n    )\r\n}\r\n\r\nconst IconeJuste = (props) => {\r\n    return (\r\n        props.juste\r\n            ?\r\n            <CheckIcon />\r\n            :\r\n            <ClearIcon />\r\n    )\r\n}\r\n\r\nconst Question = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const questionCorrigee = useSelector(selectUneQuestionJuste(props.question.num));\r\n\r\n    //s'occupe de changer le bouléen disant qu'une réponse est juste ou non d'après le prof\r\n    const handleClickJuste = (indexQ, indexR) => {\r\n        dispatch(changeReponseJuste({\r\n            indexE: props.indexEssai,\r\n            indexQ: indexQ,\r\n            indexR: indexR\r\n        }));\r\n    }\r\n\r\n    //s'occupe de changer le commentaire du prof sur une question\r\n    const handleChangeCommentaire = (event) => {\r\n        dispatch(changeCommentaire({\r\n            indexE: props.indexEssai,\r\n            indexQ: props.indexQuestion,\r\n            commentaire: event.target.value\r\n        }));\r\n    }\r\n\r\n    //s'occupe de changer la note\r\n    const handleChangeNote = (event) => {\r\n        dispatch(changeNote({\r\n            indexE: props.indexEssai,\r\n            indexQ: props.indexQuestion,\r\n            note: event.target.value\r\n        }));\r\n    }\r\n\r\n    //s'occupe de donner le nombre de réponses correctes dans cette question\r\n    const nbReponsesJuste = () => {\r\n        let nb = 0\r\n        props.question.tabReponses.forEach(reponse => {\r\n            if (reponse.justeProf) {\r\n                nb++\r\n            }\r\n        });\r\n        return nb;\r\n    }\r\n\r\n    //la flècle pour afficher plus ou moins d'information sur la question\r\n    const collapseArrow = () => {\r\n        return (\r\n            <IconButton onClick={() => setOpen(!open)}>\r\n                {\r\n                    open\r\n                        ?\r\n                        <KeyboardArrowUpIcon />\r\n                        :\r\n                        <KeyboardArrowDownIcon />\r\n                }\r\n            </IconButton>\r\n        );\r\n    }\r\n\r\n    const questionJuste = () => {\r\n        return (\r\n            <IconeJuste juste={\r\n                props.question.tabReponses.length === questionCorrigee.tabReponses.length &&\r\n                nbReponsesJuste() === questionCorrigee.tabReponses.length} />\r\n        );\r\n    }\r\n\r\n    //bouton du prof pour dire si une réponse est juste ou non\r\n    //paramètres : index de la question, index de la reponse, bool\r\n    const boutonJustePourProf = (indexQ, indexR, juste) => {\r\n        return (\r\n            <IconButton onClick={e => handleClickJuste(indexQ, indexR)}>\r\n                <IconeJuste juste={juste} />\r\n            </IconButton>\r\n        );\r\n    }\r\n\r\n    //affiche la zone où le professeur peut saisir son commentaire\r\n    const commentaireProf = () => {\r\n        return (\r\n            <>\r\n                <Typography variant=\"h6\" padding={5}>Vos commentaires sur ce travail :</Typography>\r\n                <TextField value={props.question.commentProf} onChange={handleChangeCommentaire}\r\n                    multiline rows={4} variant=\"outlined\" placeholder=\"Écrivez vos commentaires\"\r\n                    className={classes.commentaire} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const note = () => {\r\n        return (\r\n            <TextField className={classes.noteTextField} align=\"center\"\r\n                onChange={e => handleChangeNote(e)}\r\n                value={props.question.note}\r\n                InputProps={{\r\n                    className: classes.noteInput\r\n                }} \r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableRow>\r\n                {/* On affiche la fleche pour avoir plus/moins d'information */}\r\n                <TableCell align=\"center\">{collapseArrow()}</TableCell>\r\n                {/* Numéro de la question */}\r\n                <TableCell align=\"center\">{props.indexQuestion + 1}</TableCell>\r\n                {/* nombre de réponses justes dans la question */}\r\n                <TableCell align=\"center\">{nbReponsesJuste()}</TableCell>\r\n                {/* nombre de réponses attendues */}\r\n                <TableCell align=\"center\">{questionCorrigee.tabReponses.length}</TableCell>\r\n                {/* voit si la question est juste */}\r\n                <TableCell align=\"center\">{questionJuste()}</TableCell>\r\n                {/* note */}\r\n                <TableCell align=\"center\">{note()}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell className={classes.boxReponses} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom >Contenu de la question</Typography>\r\n                            {ReactHtmlParser(questionCorrigee.contenu)}\r\n                            <Typography variant=\"h6\" gutterBottom >Reponses</Typography>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">\r\n                                            Valeur donnée\r\n                                    </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            Ecart avec la bonne valeur\r\n                                    </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            Conseil de l'application\r\n                                    </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            Votre avis\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {props.question.tabReponses.map((reponse, indexReponse) =>\r\n                                        <TableRow>\r\n                                            {/* Valeur donnée par l'étudiant */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                {reponse.value}\r\n                                            </TableCell>\r\n                                            {/* Ecart avec la valeur juste */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                {reponse.ecart}\r\n                                            </TableCell>\r\n                                            {/* l'avis de l'application pour savoir si la réponse est juste */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                <IconeJuste juste={reponse.justeApp} />\r\n                                            </TableCell>\r\n                                            {/* Réponse juste où non */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                {boutonJustePourProf(props.indexQuestion, indexReponse, reponse.justeProf)}\r\n                                            </TableCell>\r\n                                        </TableRow>)\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                            {\r\n                                props.question.justif !== \"\" ?\r\n                                    <>\r\n                                        <Typography variant=\"h6\" padding={5}>Justification de l'étudiant :</Typography>\r\n                                        <p>{props.question.justif}</p>\r\n                                    </>\r\n                                    :\r\n                                    <Typography variant=\"h6\">Pas de justification de l'étudiant</Typography>\r\n                            }\r\n\r\n                            {commentaireProf()}\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Typography, TextField, Button, makeStyles } from '@material-ui/core';\r\n\r\nexport default function Message(props) {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        messageField: {\r\n            width: \"100%\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    //s'occupe du changement du message\r\n    const handleChangeMessage = (event) => {\r\n        props.handleChangeMessage(event.target.value);\r\n    }\r\n\r\n    //ferme le dialog\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    //envoie le message\r\n    const handleSend = () => {\r\n        props.handleSend();\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            maxWidth=\"md\"\r\n            fullWidth={true}\r\n            onClose={handleClose}\r\n            rows={4}\r\n        >\r\n            <DialogTitle>\r\n                <Typography variant=\"h6\">Message adressé à {props.destinataire}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField className={classes.messageField} autoFocus multiline rows={4}\r\n                    variant=\"outlined\" placeholder=\"Saisissez votre message\"\r\n                    onChange={e => handleChangeMessage(e)} value={props.message} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>Annuler</Button>\r\n                <Button onClick={handleSend}>Envoyer</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { ListItemText, ListItem, List, Divider, Button, ListItemAvatar, Avatar, makeStyles } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectEssais, selectMessage, selectReponsesJustes, selectEtudiantConsulter, changeMessage, getReponsesCorDB, getEssaisDB } from '../../slice/ConsulterSlice';\r\n\r\nimport EssaiEtudiant from '../../components/correction/EssaiEtudiant';\r\nimport Message from '../../components/correction/Message';\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nexport default function Consulter() {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        messageBouton: {\r\n            float: \"right\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //le tableau d'essai\r\n    const tabEssais = useSelector(selectEssais);\r\n\r\n    //tableau des réponses qui sont justes\r\n    const tabReponsesJustes = useSelector(selectReponsesJustes);\r\n\r\n    //message qui est à envoyer\r\n    const message = useSelector(selectMessage);\r\n\r\n    //index de l'essai sur lequel les détails du dialogue EssaiEtudiant\r\n    const [indexEssaiDialog, setIndexEssai] = useState(0);\r\n\r\n    //booléen pour l'ouvertire des détails de l'essai\r\n    const [openDetails, setOpenDetails] = useState(false);\r\n\r\n    //booléen pour l'ouverture du message\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n\r\n    //numéro de l'étudiant\r\n    const etudiant = useSelector(selectEtudiantConsulter);\r\n\r\n    useConstructor(() => {\r\n        dispatch(getReponsesCorDB({\r\n            idPromo: etudiant.id_promo,\r\n            idEtudiant: etudiant.id_etudiant\r\n        }));\r\n        dispatch(getEssaisDB({\r\n            idEtudiant: etudiant.id_etudiant\r\n        }));\r\n    });\r\n\r\n    //affiche un dialog lors d'un clic sur un essai pour avoir plus de détail\r\n    //Paramètres : l'index de l'essai\r\n    const handleClickDetails = (index) => {\r\n        setIndexEssai(index);\r\n        setOpenDetails(true);\r\n    }\r\n\r\n    //s'occupe de l'ouverture de l'éditeur du message\r\n    const hancleClickMessage = () => {\r\n        setOpenMessage(true);\r\n    }\r\n\r\n    //s'occupe du changement du message au fur et à mesure de sa saisie\r\n    const handleChangeMessage = (msg) => {\r\n        dispatch(changeMessage(msg));\r\n    }\r\n\r\n    //PAS ENCORE FAIT LE LIEN A L'API\r\n    //envoie le message à l'étudiant\r\n    const handleSend = () => {\r\n        //console.log(\"lien avec l'api pour envoyer pas encore fait\")\r\n        //console.log(message)\r\n    }\r\n\r\n    //le nombre de question juste dans un essai\r\n    //Paramètre : index de l'essai\r\n    const nbQuestionsJustes = (index) => {\r\n        //le nombre de questions justes\r\n        let nb = 0;\r\n        //on analyse chaque question\r\n        tabEssais[index].tabQuestions.forEach(question => {\r\n            //on regarde si il y a le bon nombre de réponses justes\r\n            let indexQ = _.findIndex(tabReponsesJustes, function (o) {\r\n                return o.num === question.num;\r\n            });\r\n\r\n            let questionJuste = question.tabReponses.length === tabReponsesJustes[indexQ].tabReponses.length;\r\n            let i = 0;\r\n            //on regarde si toutes les réponses sont justes\r\n            while (questionJuste && i < question.tabReponses.length) {\r\n                questionJuste = question.tabReponses[i].justeProf;\r\n                i++;\r\n            }\r\n            if (questionJuste) {\r\n                nb++;\r\n            }\r\n        })\r\n        return nb;\r\n    }\r\n\r\n    //retourne le nombre de questions\r\n    const nbQuestions = () => {\r\n        return tabReponsesJustes.length;\r\n    }\r\n\r\n    //s'occupe de l'icone qui indique si l'essai a été revu par le professeur\r\n    const corrigeIcon = (revu) => {\r\n        if (revu) {\r\n            return (\r\n                <Avatar color=\"primary\">\r\n                    <CheckIcon />\r\n                </Avatar>\r\n            )\r\n        } else {\r\n            return (\r\n                <Avatar color=\"error\">\r\n                    <CloseIcon />\r\n                </Avatar>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        //on redirige vers la page de correction si il n'y a pas d'id étudiant donné\r\n        etudiant.id_etudiant === undefined\r\n            ? <Redirect to=\"/prof/gestion-correction\" />\r\n            : <div>\r\n                <Button className={classes.messageBouton} variant=\"contained\" color=\"primary\" onClick={hancleClickMessage}>\r\n                    <SendIcon />Envoyer un message à l'étudiant\r\n                    </Button>\r\n                <h1>\r\n                    Etudiant : {etudiant.prenom + ' ' + etudiant.nom}\r\n                </h1>\r\n\r\n                {tabEssais === undefined || tabReponsesJustes === undefined \r\n                    ? null \r\n                    : <>\r\n                        <List>\r\n                            <Divider />\r\n                            {tabEssais.map((item, index) => (\r\n                                <>\r\n                                    <ListItem button onClick={e => handleClickDetails(index)}>\r\n                                        <ListItemText\r\n                                            primary={\"Essai du \" + moment(item.dateEssai).format(\"DD/MM/YYYY\")}\r\n                                            secondary={\"Questions justes : \" + nbQuestionsJustes(index)\r\n                                                + \"/\" + nbQuestions()} />\r\n                                        <ListItemAvatar>\r\n                                            {corrigeIcon(item.corrige)}\r\n                                        </ListItemAvatar>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                        </List>\r\n                        <EssaiEtudiant indexEssai={indexEssaiDialog} open={openDetails} setOpen={setOpenDetails} />\r\n                    </>\r\n                }\r\n\r\n                <Message open={openMessage} destinataire={etudiant.prenom + \" \" + etudiant.nom} setOpen={setOpenMessage}\r\n                    message={message} handleChangeMessage={handleChangeMessage} handleSend={handleSend} />\r\n\r\n            </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nimport { Dialog, Button, DialogTitle, DialogContent, DialogActions, DialogContentText, Select, InputLabel, Input, MenuItem, FormControl } from '@material-ui/core';\r\n\r\nimport PopUp from '../PopUp';\r\n\r\nimport { selectModele } from \"../../slice/ModeleSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { attributionSujetAPI } from '../../utils/api';\r\n\r\nexport default function DialogAssociationModele({ open, setClose, selectPromo }) {\r\n\r\n    const modele = useSelector(selectModele);\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [selectionModele, setSelectionModele] = useState(\"\");\r\n\r\n    const envoieAttribution = () => {\r\n        attributionSujetAPI(selectPromo, selectionModele);\r\n        setSelectionModele(\"\");\r\n        setOpenPopUp(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={() => setClose()}>\r\n                <DialogTitle>Association à un modèle</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Associer une promotion à un modéle (empechera par la suite de modifier le modèle) ?</DialogContentText>\r\n                    <FormControl style={{ width: 200 }}>\r\n                        <InputLabel>Modèle selectionné</InputLabel>\r\n                        <Select value={selectionModele} onChange={e => setSelectionModele(e.target.value)} input={<Input />}>\r\n                            {modele.tabName.map((element, index) => (\r\n                                <MenuItem key={index} value={element.index}>{element.nom}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setClose()} color=\"primary\">Abandonner</Button>\r\n                    <Button disabled={selectionModele === \"\"} onClick={() => {\r\n                        envoieAttribution();\r\n                        setClose();\r\n                    }} color=\"primary\" autoFocus>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <PopUp severity=\"success\" message=\"Association réussie\" open={openPopUp} handleClose={() => setOpenPopUp(false)} />\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Dialog, Button, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@material-ui/core';\r\n\r\nimport PopUp from '../PopUp';\r\nimport DropFile from '../DropFile';\r\n\r\nimport { etudiantNewAPI } from '../../utils/api';\r\n\r\nexport default function AjoutListeEtu({ open, setClose, selectPromo }) {\r\n\r\n    const [excel, setExcel] = useState(\"\");\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n\r\n    const envoieExcel = () => {\r\n        const data = new FormData();\r\n        data.append('fileUploaded', excel);\r\n        etudiantNewAPI(selectPromo, data);\r\n        setOpenPopUp(true);\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={() => setClose()}>\r\n            <DialogTitle>Charger une promotion</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>Charger la liste excel de vos étudiants </DialogContentText>\r\n                <DropFile typeFile='.xlsx' compressImage={false} changeFile={e => setExcel(e)} message=\"Charger la liste des étudiants de la promotion\" />\r\n                <PopUp severity=\"success\" message=\"Etudiants ajoutés à la promotion\" open={openPopUp} handleClose={() => setOpenPopUp(false)} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => setClose()} color=\"primary\">Abandonner</Button>\r\n                <Button disabled={excel === \"\"} onClick={() => envoieExcel()} color=\"primary\" autoFocus>Charger</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nimport { Button, Toolbar, Typography, Tooltip, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { selectEtudiants } from '../../slice/PromoSlice';\r\n\r\nexport default function StickyHeadTable() {\r\n\r\n\tconst [page, setPage] = useState(0);\r\n\tconst [filtre, setFiltre] = useState(false);\r\n\tconst tabEtudiants = useSelector(selectEtudiants);\r\n\tconst rowsPerPage = 10;\r\n\r\n\tconst columns = [\r\n\t\t{ id: 'nom', label: 'Nom', minWidth: 170 },\r\n\t\t{ id: 'prenom', label: 'Prénom', minWidth: 170 },\r\n\t\t{ id: 'mdp', label: 'Mot de passe', minWidth: 170, align: 'right' },\r\n\t\t{ id: 'id', label: 'Sujet n°', minWidth: 170, align: 'right' },\r\n\t\t{ id: 'modele', label: \"Modèle 3D\", minWidth: 170, align: 'right' },\r\n\t];\r\n\r\n\t//gère le changement de page\r\n\tconst handleChangePage = (event, newPage) => {\r\n\t\tsetPage(newPage);\r\n\t};\r\n\r\n\tconst displayColumn = (column, row) => {\r\n\r\n\t\tif (column.id === 'mdp') {\r\n\t\t\treturn (\r\n\t\t\t\t<Button variant=\"outlined\" color=\"primary\">\r\n\t\t\t\t\tRéinitialiser mot de passe\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t} else if (column.id === 'modele') {\r\n\t\t\treturn (\r\n\t\t\t\t<Button startIcon={row.id % 2 === 0 ? <CheckIcon /> : <CloseIcon />} variant=\"outlined\" color={row.id % 2 === 0 ? \"primary\" : \"default\"}>\r\n\t\t\t\t\tAjouter les modèles 3D pour ce sujet\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\trow[column.id]\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst EnhancedTableToolbar = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Typography style={{ width: \"98%\" }} variant=\"h6\" id=\"tableTitle\" component=\"div\">Promotion</Typography>\r\n\t\t\t\t<Tooltip title=\"filtrer les modèles déja ajoutés\">\r\n\t\t\t\t\t<IconButton onClick={() => setFiltre(!filtre)} aria-label=\"filter list\">\r\n\t\t\t\t\t\t<FilterListIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Toolbar>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<EnhancedTableToolbar />\r\n\t\t\t<TableContainer >\r\n\t\t\t\t<Table stickyHeader aria-label=\"sticky table\">\r\n\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n\t\t\t\t\t\t\t\t\t{column.label}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t{/* affiche les lignes de row une par une dans le tableau */}\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{/* affiche les lignes 10 par 10 */}\r\n\t\t\t\t\t\t{tabEtudiants.filter(elem => filtre ? elem.id === 87 : true).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow hover tabIndex={-1} key={row.nom}>\r\n\t\t\t\t\t\t\t\t\t{/* affiche les infos pour chaque colonne d'élément de rows */}\r\n\t\t\t\t\t\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align}>\r\n\t\t\t\t\t\t\t\t\t\t\t{displayColumn(column, row)}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\r\n\t\t\t<TablePagination\r\n\t\t\t\trowsPerPageOptions={[]}\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tcount={tabEtudiants.length}\r\n\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\tpage={page}\r\n\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t/>\r\n\t\t</Paper>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { TextField, Button, Select, MenuItem, Input, InputLabel, FormControl, makeStyles, Fab, Typography } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport AssociationModele from '../../components/promo/DialogAssociationModele';\r\nimport AjoutListeEtu from '../../components/promo/AjoutListeEtu';\r\nimport Table from '../../components/promo/TableEtudiant';\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllPromo, selectPromo, selectEnregistrePromo, addPromo, removePromo, getEtudiantsPromo } from \"../../slice/PromoSlice\";\r\n\r\nexport default function Promo() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        mapDisplayEtu: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\"\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divNomPromo: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"3%\",\r\n        },\r\n        button: {\r\n            display: \"block\",\r\n            margin: \"20px auto\"\r\n        },\r\n        divPromo: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"1% 0.5%\",\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n        },\r\n        typo: {\r\n            textAlign: \"center\"\r\n        },\r\n        form: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginBottom: 20\r\n        },\r\n        formControl: {\r\n            display: \"block\",\r\n            margin: \"30px auto\",\r\n            width: \"100%\"\r\n        },\r\n        divSelectPromo: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr\",\r\n            margin: \"auto\",\r\n            width: \"18%\",\r\n            gridGap: 20\r\n        },\r\n        labelSelectPromo: {\r\n            position: \"relative\"\r\n        },\r\n        selectPromo: {\r\n            width: 200,\r\n            marginTop: \"0 !important\"\r\n        },\r\n        menuItem: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        fabDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [nouvellePromo, setNouvellePromo] = useState([]);\r\n    const [select, setSelect] = useState(\"\");\r\n    const [assoModele, setAssoModele] = useState(false);\r\n    const [listEtu, setListEtu] = useState(false);\r\n    const isEnregistre = useSelector(selectEnregistrePromo);\r\n    const tabPromo = useSelector(selectPromo);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) dispatch(getAllPromo());\r\n    });\r\n\r\n    const ajouterPromo = () => {\r\n        dispatch(addPromo(nouvellePromo)).then(() => dispatch(getAllPromo()));\r\n        setNouvellePromo(\"\");\r\n    }\r\n\r\n    const remove = () => {\r\n        dispatch(removePromo(select)).then(() => dispatch(getAllPromo()));\r\n        setSelect(\"\");\r\n    }\r\n\r\n    const changePromo = (e) => {\r\n        setSelect(e.target.value);\r\n        dispatch(getEtudiantsPromo(e.target.value.idPromo));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h1\">PROMOTION</Typography>\r\n            <hr className={classes.hr} />\r\n            <div className={classes.divPromo}>\r\n                <form className={classes.form}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.divSelectPromo}>\r\n                            <div>\r\n                                <InputLabel className={classes.labelSelectPromo}>Promotion selectionnée</InputLabel>\r\n                                <Select className={classes.selectPromo} value={select} onChange={(e) => changePromo(e)} input={<Input />}>\r\n                                    <MenuItem className={classes.menuItem} value={\"ajoutPromo\"}>Ajouter promotion</MenuItem>\r\n                                    {tabPromo === undefined ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{ margin: \"30px auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n                                        : tabPromo.map((element, index) => (\r\n                                            <MenuItem key={index} value={element}>{element.nom}</MenuItem>\r\n                                        ))}\r\n                                </Select>\r\n                            </div>\r\n                            <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\" disabled={select.idPromo === \"\" || select === \"ajoutPromo\"} onClick={() => remove()}>\r\n                                <DeleteIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        {select !== \"ajoutPromo\"\r\n                            ? <>\r\n                                <Button className={classes.button} disabled={select === \"\"} variant=\"contained\" color=\"primary\" onClick={() => setAssoModele(true)}>Associer à un modèle</Button>\r\n                                <Button className={classes.button} disabled={select === \"\"} variant=\"contained\" color=\"primary\" onClick={() => setListEtu(true)}>Ajouter une liste d'étudiants</Button>\r\n                                <AssociationModele selectPromo={select.idPromo} open={assoModele} setClose={() => setAssoModele(false)} />\r\n                                <AjoutListeEtu selectPromo={select.idPromo} open={listEtu} setClose={() => setListEtu(false)} />\r\n                                {select !== \"\" ? <Table /> : null}\r\n                            </>\r\n                            : <div className={classes.divNomPromo}>\r\n                                <TextField autoFocus size=\"small\" label=\"Nom de la promo\" variant=\"outlined\" required value={nouvellePromo} onChange={e => setNouvellePromo(e.target.value)} />\r\n                                <Button className={classes.button} disabled={nouvellePromo === \"\"} variant=\"outlined\" onClick={() => ajouterPromo()}>Créer</Button>\r\n                            </div>\r\n                        }\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Button, Table, TableCell, TableHead, TableRow, TableBody, TextField, Typography, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { getAllUnite, selectUnites, enregistreUnites, selectActualise, addUnite, setIndexEnModif, selectIndexEnMofid, changeNomComplet, changeAbreviation, deleteUnite, selectEnregistreUnite, setEnregistre } from '../../slice/UniteSlice';\r\nimport PopUp from '../../components/PopUp';\r\n\r\nexport default function GestionUnites() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        tableauUnite: {\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        addButton: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        deleteButton: {\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            },\r\n            color: \"white\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        modifButton: {\r\n            backgroundColor: theme.palette.primary.light,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.secondary.main\r\n            },\r\n            color: \"black\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            marginRight: \"10%\"\r\n        },\r\n        tableCell: {\r\n            textAlign: \"center\"\r\n        },\r\n        tableRow: {\r\n            backgroundColor: theme.palette.secondary.light\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const tabUnites = useSelector(selectUnites);\r\n    const actualise = useSelector(selectActualise);\r\n    const indexEnModif = useSelector(selectIndexEnMofid);\r\n    const isEnregistre = useSelector(selectEnregistreUnite);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            dispatch(getAllUnite());\r\n        }\r\n    });\r\n\r\n    //permet de savoir si ce nom est utilisé une seule fois dans le tabUnites\r\n    //renvoie aussi une valeur fausse si les chaines sont vides\r\n    const modifIsUnique = () => {\r\n\r\n        if (indexEnModif < 0) { // si il n'y pas de champ qui est en train d'être modifié\r\n            return true;\r\n        } else if (tabUnites[indexEnModif].abrev.length === 0 ||\r\n            tabUnites[indexEnModif].nom.length === 0) { // si l'un des champ est vide\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i < tabUnites.length; i++) {\r\n            let verif = (i === indexEnModif) || (tabUnites[i].nom !== tabUnites[indexEnModif].nom && tabUnites[i].abrev !== tabUnites[indexEnModif].abrev);\r\n            if (!verif) return false; // renvoie faux si le nom ou l'abreviation est retrouvée autre part\r\n        }\r\n\r\n        return true // retourne vrai par défaut\r\n    }\r\n\r\n    //change le nom complet d'une unité au fur et à mesure de sa saisie\r\n    //paramètres : index de l'unité et event (valeur)\r\n    const handleChangeNomComplet = (index, event) => {\r\n        dispatch(changeNomComplet({\r\n            index: index,\r\n            value: event.target.value\r\n        }));\r\n    }\r\n\r\n    //change le nom complet d'une unité au fur et à mesure de sa saisie\r\n    //paramètres : index de l'unité et event (valeur)\r\n    const handleChangeAbreviation = (index, event) => {\r\n        dispatch(changeAbreviation({\r\n            index: index,\r\n            value: event.target.value\r\n        }));\r\n    }\r\n\r\n    //enregistre l'unité dans la base de données\r\n    const enregistrer = () => {\r\n        dispatch(enregistreUnites(tabUnites));\r\n        setEnregistre(true);\r\n    }\r\n\r\n    //ajoute une unité dans le tableau (n'enregistre pas dans la BD)\r\n    const handleAjouterUnite = () => {\r\n        dispatch(addUnite());\r\n    }\r\n\r\n    const handleDeleteUnite = (index) => {\r\n        if (tabUnites[index].nom !== \"Sans Unité\") {\r\n            dispatch(deleteUnite(index));\r\n        }\r\n    }\r\n\r\n    const handleModifUnite = (index) => {\r\n        dispatch(setIndexEnModif(index));\r\n    }\r\n\r\n    const handleSaveLocal = () => {\r\n        dispatch(setIndexEnModif(-1));\r\n    }\r\n\r\n    const buttonsUniteSansModif = (index) => {\r\n        return (\r\n            tabUnites[index].nom !== \"Sans Unité\"\r\n                ?\r\n                <div>\r\n                    <IconButton className={classes.modifButton} onClick={e => handleModifUnite(index)} disabled={!modifIsUnique()}>\r\n                        <CreateIcon />\r\n                    </IconButton>\r\n                    <IconButton className={classes.deleteButton} onClick={e => handleDeleteUnite(index)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </div>\r\n                :\r\n                null\r\n        )\r\n    }\r\n\r\n    //affiche l'unité en fonction du fait qu'il est en train d'être modifié ou non\r\n    const afficherUnite = (unite, index) => {\r\n        return (\r\n            index !== indexEnModif \r\n                ? <>\r\n                    <TableCell className={classes.tableCell}> {unite.nom} </TableCell>\r\n                    <TableCell className={classes.tableCell}> {unite.abrev} </TableCell>\r\n                    <TableCell className={classes.tableCell}> {buttonsUniteSansModif(index)} </TableCell>\r\n                </>\r\n\r\n                : <>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <TextField value={unite.nom}\r\n                            onChange={e => handleChangeNomComplet(index, e)} />\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <TextField value={unite.abrev}\r\n                            onChange={e => handleChangeAbreviation(index, e)} />\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <IconButton onClick={e => handleSaveLocal()} disabled={!modifIsUnique()}>\r\n                            <SaveIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={e => handleDeleteUnite(index)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </TableCell>\r\n                </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        !actualise\r\n            ? <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n            : <div>\r\n                <Typography variant=\"h1\">Gestion des unités</Typography>\r\n                <hr className={classes.hr} />\r\n\r\n                <Button className={classes.addButton} variant=\"contained\" color=\"primary\" onClick={handleAjouterUnite}> Ajouter une unité </Button>\r\n\r\n                <Table className={classes.tableauUnite}>\r\n                    <TableHead>\r\n                        <TableRow className={classes.tableRow}>\r\n                            <TableCell className={classes.tableCell}> Nom Complet </TableCell>\r\n                            <TableCell className={classes.tableCell}> Abréviation </TableCell>\r\n                            <TableCell /> {/*  Pour les boutons */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tabUnites.map((unite, index) => {\r\n                            return (\r\n                                <TableRow key={index}>\r\n                                    {afficherUnite(unite, index)}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n                <PopUp\r\n                    open={indexEnModif < 0 && !isEnregistre}\r\n                    handleClose={() => enregistrer()}\r\n                    actionName=\"enregistrer\"\r\n                    action={() => enregistrer()}\r\n                    message=\"Cliquez ici pour enregistrer les unités\"\r\n                    severity=\"warning\"\r\n                />\r\n            </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, TextField, Fab, InputAdornment, makeStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeReponse, peutSupprimer, deleteReponse, setUnite } from '../../slice/RepondreQuestionsSlice';\r\n\r\nimport ChoixUnite from '../unite/ChoixUnite';\r\nimport { afficherUnites } from '../unite/UniteFunctions';\r\n\r\nexport default function Item(props) {\r\n\r\n     const useStyles = makeStyles((theme) => ({\r\n          buttonDelete: {\r\n               color: \"white\",\r\n               backgroundColor: theme.palette.error.main,\r\n               \"&:hover\": {\r\n                    backgroundColor: theme.palette.error.dark\r\n               },\r\n          },\r\n          reponse: {\r\n               margin: \"5px 0px\",\r\n               display: \"flex\",\r\n               alignItems: \"center\",\r\n               columnGap: \"10px\"\r\n          },\r\n          inputAdornmentReponse: {\r\n               width: \"100px\",\r\n          }\r\n     }));\r\n\r\n     const classes = useStyles();\r\n\r\n     //indique si la boite de dialogue choix unité est ouverte ou fermée\r\n     const [choixUniteOpen, setOpen] = useState(false);\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     //booléen qui autorise la suppression d'une réponse si il y a plus d'une réponse affiché\r\n     const canDelete = useSelector(peutSupprimer(props.indexQuestion))\r\n\r\n     //s'occupe de changer la réponse au fur et à mesure que l'étudiant la tape\r\n     //s'assure que la réponse soit un nombre\r\n     const handleChangeReponse = (value) => {\r\n          dispatch(changeReponse({\r\n               indexQuestion: props.indexQuestion,\r\n               indexReponse: props.num,\r\n               value: value\r\n          }));\r\n     }\r\n\r\n     //dès que la réponse perd le focus, s'assure que la réponse ne puisse être un '-' tout seul\r\n     const handleBlurReponse = () => {\r\n          if (props.reponse.value === '-') {\r\n               dispatch(changeReponse({\r\n                    indexQuestion: props.indexQuestion,\r\n                    indexReponse: props.num,\r\n                    value: ''\r\n               }));\r\n          }\r\n     }\r\n\r\n     //gere la suppression de cette réponse\r\n     const handleDeleteReponse = () => {\r\n          dispatch(deleteReponse({\r\n               indexQuestion: props.indexQuestion,\r\n               indexReponse: props.num,\r\n          }));\r\n     }\r\n\r\n     //s'occupe de fermer la boite de dialogue du choix de l'unité\r\n     //et de s'occuper des différentes actions demandée par la boite à sa fermeture\r\n     //paramètre : string (seul \"annuler\" ou \"appliquer a tous\" sont gérés)\r\n     const handleClose = () => {\r\n          //ferme la boite de dialogue\r\n          setOpen(false);\r\n     }\r\n\r\n     //s'occupe de l'ouverture de la boite de dialogue choixUnité\r\n     const handleOpen = () => {\r\n          //ouvre la boite de dialogue\r\n          setOpen(true);\r\n     }\r\n\r\n     //remplace le tableau d'unités de cette réponse\r\n     const setUniteReponse = (tab) => {\r\n          dispatch(setUnite({\r\n               indexQuestion: props.indexQuestion,\r\n               indexReponse: props.num,\r\n               newTab: tab\r\n          }));\r\n     }\r\n\r\n     //affiche le bouton pour supprimer cette réponse\r\n     const buttonDelete = () => {\r\n          return (\r\n               <Fab className={classes.buttonDelete} size=\"small\" aria-label=\"delete\"\r\n                    onClick={handleDeleteReponse}\r\n               >\r\n                    <DeleteIcon />\r\n               </Fab>\r\n          )\r\n     }\r\n\r\n     return (\r\n          <div className={classes.reponse}>\r\n               {/* input de la réponse */}\r\n               <TextField label={\"Reponse \" + (props.num + 1)} variant=\"outlined\" size=\"small\"\r\n                    value={props.reponse.value} onChange={e => handleChangeReponse(e.target.value)}\r\n                    onBlur={handleBlurReponse}\r\n                    InputProps={{ //affichage unité\r\n                         endAdornment: (\r\n                              <InputAdornment className={classes.inputAdornmentReponse} position=\"start\">\r\n                                   {afficherUnites(props.reponse.tabUnite)}\r\n                              </InputAdornment>\r\n                         ),\r\n                    }} />\r\n\r\n               {/* bouton pour changer l'unité (ouvre la boite de dialogue) */}\r\n               <Button size=\"small\" onClick={e => handleOpen()}>Unite</Button>\r\n\r\n               {/* boite de dialogue pour changer l'unité */}\r\n               <ChoixUnite open={choixUniteOpen} unite={props.reponse.tabUnite}\r\n                    setTabUnite={setUniteReponse} handleClose={handleClose} />\r\n\r\n               {/* affiche le bouton de suppression si il est possible de supprimer */}\r\n               {canDelete ? buttonDelete() : null}\r\n          </div>\r\n     );\r\n}","import React from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addReponse, changeJustification } from '../../slice/RepondreQuestionsSlice';\r\n\r\nimport DelayInput from '../InputAwait';\r\nimport Reponse from './ItemReponse';\r\n\r\nexport default function Question(props) {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        listeReponses: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flexWrap: \"wrap\",\r\n            rowGap: \"30px\",\r\n            alignItems: \"center\",\r\n        },\r\n        listeQuestions: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"2% 3% 2% 3%\",\r\n        },\r\n        enonce: {\r\n            margin: \"4% 0 0 8%\",\r\n            fontSize: \"18px\",\r\n\r\n        },\r\n        buttonAjouterReponse: {\r\n            display: \"block\",\r\n            margin: \"20px auto\"\r\n        },\r\n        hr: {\r\n            border: \"1px dashed\",\r\n            width: \"50%\",\r\n            margin: \"50px auto\"\r\n        },\r\n        h2: {\r\n            textAlign: \"left\",\r\n            margin: \"1%\"\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //fonction pour ajouter une réponse (valeur vide) à cette question\r\n    const handleAddReponse = () => {\r\n        dispatch(addReponse(props.id));\r\n    }\r\n\r\n    //liste les différentes réponses\r\n    const listeReponses = () => {\r\n        return (\r\n            <div className={classes.listeReponses}>\r\n                {/* affichage des réponses une par une */}\r\n                {props.question.tabReponses.map((i, index) => (\r\n                    <Reponse key={index} num={index} reponse={i}\r\n                        indexQuestion={props.id} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr className={classes.hr} />\r\n            <div className={classes.listeQuestions} >\r\n                <h2 className={classes.h2}>Question {props.id + 1} :</h2>\r\n                {/* affichage énoncé de la question */}\r\n                <div className={classes.enonce}>{ReactHtmlParser(props.question.enonce)}</div>\r\n\r\n                <DelayInput\r\n                    style={{ width: \"100%\", margin: \"4% 0\" }}\r\n                    rows={4}\r\n                    label=\"Justification\"\r\n                    delayTimeout={300}\r\n                    value={props.question.justification}\r\n                    onChange={e => dispatch(changeJustification({ indexQuestion: props.id, justif: e }))}\r\n                />\r\n\r\n                {listeReponses()}\r\n\r\n                {/* bouton ajouter réponse visible uniquement si la question attend plus d'une réponse */}\r\n                {props.question.nbMaxReponses > 1 ?\r\n                    <Button variant=\"contained\"\r\n                        className={classes.buttonAjouterReponse}\r\n                        color=\"primary\"\r\n                        onClick={handleAddReponse}\r\n                        //est disabled dès que la limte de réponses possibles est atteinte\r\n                        disabled={props.question.tabReponses.length >= props.question.nbMaxReponses}\r\n                    >\r\n                        Ajouter Réponse\r\n                    </Button>\r\n                    : null\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { useCallback } from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport jsPDF from 'jspdf';\r\nimport { Button, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectReponses, getSujet, enregistrerReponses, selectSujetEnregistre, etudiantVariables, getModele3D, getEtudiantModele } from \"../../slice/RepondreQuestionsSlice\";\r\n\r\nimport useConstructor from '../../components/use/useContructor';\r\nimport Question from '../../components/reponses/ItemQuestion';\r\n\r\nexport default function RepondreQuestions() {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        hr: {\r\n            marginBottom: \"2%\"\r\n        },\r\n        contenant: {\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n        },\r\n        buttonFixed: {\r\n            position: \"absolute\",\r\n            top: \"30px\",\r\n            right: \"120px\"\r\n        },\r\n        sujet: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"1% 2% 4% 2%\",\r\n            margin: \"4%\"\r\n        },\r\n        center: {\r\n            textAlign: \"center\",\r\n            display: \"block\",\r\n            margin: \"2% auto\"\r\n        },\r\n        modeles: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\"\r\n        },\r\n        image: {\r\n            width: 200\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const reponses = useSelector(selectReponses);\r\n    const isEnregistre = useSelector(selectSujetEnregistre);\r\n    const dispatch = useDispatch();\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            dispatch(getEtudiantModele()).then(modele => {\r\n                if (modele.payload[0] !== undefined) {\r\n                    dispatch(getSujet(modele.payload[0].id_modele)).then((sujet) => {\r\n                        dispatch(etudiantVariables(sujet.payload.id_auth));\r\n                        dispatch(getModele3D(sujet.payload.id_auth));\r\n                    });\r\n                } else {\r\n                    alert(\"erreur, pas de sujet asoscié\");\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    const handleEnvoyerReponses = useCallback(() => {\r\n        dispatch(enregistrerReponses(reponses.tabQuestions))\r\n    }, [dispatch, reponses]);\r\n\r\n    //trandforme en pdf le sujet\r\n    const downloadPdf = () => {\r\n        const MARGE_COTE = 15;\r\n        const MARGE_HAUT = 20;\r\n        const MARGE_BAS = 20;\r\n        const HAUTEUR_A4 = 297;\r\n        const LARGEUR_A4 = 210;\r\n\r\n        //met le sujet dans la bonne font family\r\n        let sujetForPdf = '<p style=\"font-family: sans-serif; display : block; margin : auto;\">' + reponses.sujet + '</p><br/><br/><br/><br/><hr>'\r\n\r\n        reponses.tabQuestions.forEach((elem, index) => {\r\n            sujetForPdf += `<p>Question ${index + 1} :</p><br/>${elem.enonce}<br/><br/>`;\r\n        });\r\n\r\n        //document pdf en format a4\r\n        const doc = new jsPDF('p', 'mm', 'a4');\r\n\r\n        const options = {\r\n            pagesplit: true,\r\n            'width': LARGEUR_A4 - 2 * MARGE_COTE,\r\n            'height': HAUTEUR_A4 - MARGE_HAUT - MARGE_BAS,\r\n        };\r\n\r\n        //transmet le sujet au document pdf\r\n        doc.fromHTML(sujetForPdf, MARGE_COTE, MARGE_HAUT + 10, options);\r\n\r\n        doc.addPage();\r\n\r\n        //ajout image\r\n        const img = new Image();\r\n        img.src = reponses.image1;\r\n        //doc.addImage(img, 'JPEG', 10, 78, 50, 15); //PROBLEME, NE RECONNAIS PAS QUE C'EST UNE IMAGE\r\n\r\n        const number_of_pages = doc.internal.getNumberOfPages();\r\n        for (let i = 1; i <= number_of_pages; ++i) {\r\n            doc.setPage(i);\r\n\r\n            //header\r\n            doc.text(MARGE_COTE, MARGE_HAUT, \"N° étudiant : 1 - N° sujet : 14582\");\r\n            doc.text(LARGEUR_A4 - MARGE_COTE, MARGE_HAUT, \"Sujet de Pierre Dupont\", 'right');\r\n\r\n            //footer\r\n            doc.setLineWidth(0.5);\r\n            doc.line(MARGE_COTE, HAUTEUR_A4 - MARGE_BAS - 5, LARGEUR_A4 - MARGE_COTE, HAUTEUR_A4 - MARGE_BAS - 5);\r\n            doc.text(MARGE_COTE, HAUTEUR_A4 - MARGE_BAS, \"Pierre Carillo\");\r\n            doc.text(LARGEUR_A4 / 2, HAUTEUR_A4 - MARGE_BAS, \"IUT du Limousin - GMP\", \"center\");\r\n            doc.text(LARGEUR_A4 - MARGE_COTE, HAUTEUR_A4 - MARGE_BAS, \"Page \" + i + \"/\" + number_of_pages, \"right\");\r\n        }\r\n\r\n        doc.save(\"sujet.pdf\");\r\n    }\r\n\r\n    //affiche les différentes questions avec leurs réponses\r\n    const displayQuestions = () => {\r\n        //n'affiche rien si il n'y a pas de questions\r\n        return (\r\n            reponses.tabQuestions.length === 0 \r\n            ? <div>Pas de questions pour l'instant</div>\r\n            : reponses.tabQuestions.map((i, index) => (\r\n                <Question key={i.indexQuestion} question={i} id={index} />\r\n            ))\r\n        );\r\n    }\r\n\r\n    return isEnregistre && (\r\n        <div className={classes.contenant}>\r\n            <Typography variant=\"h1\">Réponses aux questions</Typography>\r\n            <hr className={classes.hr} />\r\n            <div className={classes.buttonFixed} >\r\n                {/*bouton de téléchargement du sujet en pdf */}\r\n                <Button variant=\"contained\" color=\"primary\" onClick={downloadPdf}>\r\n                    <GetAppIcon />\r\n                    Télécharger\r\n                </Button>\r\n            </div>\r\n\r\n            {/* affichage du sujet */}\r\n            <div className={classes.sujet}>\r\n                <h2 className={classes.center}>Sujet</h2>\r\n                <div id=\"sujet\">{ReactHtmlParser(reponses.sujet)}</div>\r\n            </div>\r\n\r\n\r\n            <div className={classes.modeles}>\r\n                <div>\r\n                    <img className={classes.image} src={reponses.image1} alt=\"img modele1\" />\r\n                    <p className={classes.center}>modèle 1</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <img className={classes.image} src={reponses.image2} alt=\"img modele2\" />\r\n                    <p className={classes.center}>modèle 2</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* affichage des questions */}\r\n            {displayQuestions()}\r\n\r\n            <Button variant=\"contained\" color=\"primary\"\r\n                onClick={handleEnvoyerReponses}\r\n                className={classes.center}>\r\n                Envoyer les réponses\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Avatar, IconButton, Menu, MenuItem, ListItemIcon, Typography, makeStyles, Tooltip } from '@material-ui/core';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport AccountBoxOutlinedIcon from '@material-ui/icons/AccountBoxOutlined';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport AppsOutlinedIcon from '@material-ui/icons/AppsOutlined';\r\n\r\nimport useConstructor from './use/useContructor';\r\nimport SelectionModele from './SelectionModele';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserName, getUserImage, logoutUser } from \"../slice/UserSlice\";\r\nimport { selectModeleActuel, selectActualise, getModele } from '../slice/ModeleSlice';\r\nimport { getAllPromo, selectEnregistrePromo } from '../slice/PromoSlice';\r\n\r\nexport default function MenuProfil() {\r\n    const useStyles = makeStyles((theme) => ({\r\n        divMenuProfil: {\r\n            position: \"absolute\",\r\n            right: 30,\r\n            top: 17.5,\r\n            display: \"flex\",\r\n            zIndex: 10\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.palette.error.main\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    //permet de placer le menu de profil correctement sur la page\r\n    const [openLocation, setOpenLocation] = useState(null);\r\n    //gerer ouverture/fermeture du modele\r\n    const [open, setOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(selectUserName);\r\n    const actualiseModele = useSelector(selectActualise);\r\n    const modele = useSelector(selectModeleActuel);\r\n    const isEnregistrePromo = useSelector(selectEnregistrePromo);\r\n\r\n    useConstructor(() => {\r\n        //gerer le stockage local\r\n        let myStorage = window.localStorage;\r\n        //si le nom de l'utilisateur est vide et que l'image est vide et que le stockage local de l'image est vide \r\n        if (user.name !== \"\" && user.image === undefined && myStorage.getItem(user.name) === null) dispatch(getUserImage(user.name));\r\n\r\n        //recupere les modeles\r\n        if (!actualiseModele && user.isProf) dispatch(getModele());\r\n\r\n        //recupère les promo\r\n        if (!isEnregistrePromo) dispatch(getAllPromo());\r\n    });\r\n\r\n    return (\r\n        <div className={classes.divMenuProfil}>\r\n            <Tooltip disableHoverListener={modele === undefined ? true : false} title={modele === undefined || !user.isProf ? \"\" : modele.nom}>\r\n                <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => setOpenLocation(e.currentTarget)}>\r\n                    {user.image === undefined\r\n                        ? <Avatar className={classes.avatar}>{user.name.substring(0, 1).toUpperCase()}</Avatar>\r\n                        : <Avatar src={user.image} />\r\n                    }\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                transformOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                disableScrollLock={true}\r\n                id=\"simple-menu\"\r\n                anchorEl={openLocation}\r\n                keepMounted\r\n                open={Boolean(openLocation)}\r\n                onClose={() => setOpenLocation(null)}\r\n            >\r\n                <MenuItem component={Link} to='/profil' onClick={() => setOpenLocation(null)}>\r\n                    <ListItemIcon>\r\n                        <AccountBoxOutlinedIcon />\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\">Profil</Typography>\r\n                </MenuItem>\r\n                {user.isProf\r\n                    ? <MenuItem onClick={e => setOpen(true)}>\r\n                        <ListItemIcon>\r\n                            <AppsOutlinedIcon />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\">Modèle</Typography>\r\n                    </MenuItem>\r\n                    : null}\r\n                <MenuItem onClick={e => dispatch(logoutUser())}>\r\n                    <ListItemIcon>\r\n                        <ExitToAppOutlinedIcon />\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\">Déconnexion</Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n            {user.isProf ? <SelectionModele tard={true} setClose={() => setOpen(false)} open={open} /> : null}\r\n            {user.isLogin ? null : <Redirect to='/' />}\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { LinearProgress, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\nimport MenuProfil from '../../components/MenuProfil';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSujet, selectSujetEnregistre, etudiantVariables, getModele3D, getEtudiantModele } from \"../../slice/RepondreQuestionsSlice\";\r\nimport { logoutUser } from \"../../slice/UserSlice\";\r\n\r\nexport default function Accueil(props) {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        divProgress: {\r\n            width: \"50%\",\r\n            margin: \"auto\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const isEnregistre = useSelector(selectSujetEnregistre);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            dispatch(getEtudiantModele()).then(modele => {\r\n                if (modele.payload[0] !== undefined) {\r\n                    dispatch(getSujet(modele.payload[0].id_modele)).then((sujet) => {\r\n                        dispatch(etudiantVariables(sujet.payload.id_auth));\r\n                        dispatch(getModele3D(sujet.payload.id_auth));\r\n                    });\r\n                } else {\r\n                    setOpen(true);\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <MenuProfil info={props.info} />\r\n                <div className={classes.divProgress}>\r\n                    <p>Progression dans le traitement du sujet</p>\r\n                    <LinearProgress variant=\"determinate\" value={10} />\r\n                    <p>Date limite de rendu : 10/01/21</p>\r\n                </div>\r\n            </div>\r\n            <Dialog open={open} onClose={() => setOpen(false)}>\r\n                <DialogTitle>Sujet non attribué</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Ton sujet n'a pas encore été attribué, contactes le professeur en cas de problème ou reviens plus tard</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => dispatch(logoutUser())} color=\"primary\">Quitter</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport { FormControl, IconButton, InputAdornment, InputLabel, makeStyles, OutlinedInput } from '@material-ui/core'\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from \"clsx\";\r\n\r\n//label, nom du input \r\n//error si erreur\r\n//value : valeur du input\r\n//onChange quand changement\r\n//onKeyPress quand touche préssée\r\nexport default function InputPwd({ label, error, value, onChange, onKeyPress }) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divInputPassword: {\r\n            margin: \"auto\",\r\n            width: \"max-content\"\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n        textField: {\r\n            width: 225\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const [showMdp, setShowMdp] = useState(false);\r\n    const changeShowMdp = () => setShowMdp(!showMdp);\r\n\r\n    return (\r\n        <div className={classes.divInputPassword}>\r\n            <FormControl size=\"small\" variant=\"outlined\" className={clsx(classes.margin, classes.textField)}>\r\n                <InputLabel error={error} htmlFor=\"outlined-adornment-password\" required>{label}</InputLabel>\r\n                <OutlinedInput\r\n                    required\r\n                    label={label + \"*\"}\r\n                    error={error}\r\n                    id=\"outlined-adornment-password\"\r\n                    type={showMdp ? \"text\" : \"password\"}\r\n                    value={value}\r\n                    onChange={e => onChange(e)}\r\n                    onKeyPress={e => onKeyPress !== undefined ? onKeyPress(e) : null}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={() => changeShowMdp()}\r\n                                size=\"small\"\r\n                            >\r\n                                {showMdp ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Button, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport InputPassword from '../components/InputPassword';\r\nimport PopUp from '../components/PopUp';\r\nimport DropFile from '../components/DropFile'\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserName, setUserImage } from \"../slice/UserSlice\";\r\n\r\nimport { setPwdUserAPI } from '../utils/api.js';\r\n\r\nexport default function Profile() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        carteProfil: {\r\n            display: \"flex\",\r\n            width: \"60%\",\r\n            height: \"max-content\",\r\n            margin: \"0 auto 2% auto\",\r\n            boxShadow: \"-2px 5px 12px 4px rgba(0,0,0,0.62)\",\r\n        },\r\n        imageProfil: {\r\n            width: 220,\r\n            height: \"100\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                display: \"none\"\r\n            }\r\n        },\r\n        wrapper: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n        },\r\n        dropPhotoProfil: {\r\n            height: \"40%\",\r\n            width: \"100%\",\r\n            margin: \"auto\"\r\n        },\r\n        buttonEnvoyerImageProfil: {\r\n            display: \"block\",\r\n            margin: \"3% auto\"\r\n        },\r\n        hr: {\r\n            width: \"70%\"\r\n        },\r\n        divPasswordChange: {\r\n            width: \"max-content\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: \"2% auto\",\r\n        },\r\n        buttonChangePwd: {\r\n            margin: \"2% auto\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const user = useSelector(selectUserName);\r\n    const dispatch = useDispatch();\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [password, setPassword] = useState({ oldPassword: \"\", newPassword: \"\", error: false });\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const changePasswordAPI = () => {\r\n        setPwdUserAPI(user.name, { oldPassword: password.oldPassword, newPassword: password.newPassword }).then(() => {\r\n            setOpenPopUp(true);\r\n        }).catch(() => {\r\n            setPassword({ oldPassword: password.oldPassword, newPassword: password.newPassword, error: true });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.carteProfil}>\r\n            {(user.image === undefined || user.image === \"\") ? null : <div className={classes.imageProfil} style={{ backgroundImage: \"url('\" + user.image + \"')\" }} />}\r\n            <div className={classes.wrapper}>\r\n                <Typography align=\"center\" gutterBottom variant=\"h2\" component=\"h2\">{user.name.charAt(0).toUpperCase() + user.name.slice(1)}</Typography>\r\n                <div className={classes.dropPhotoProfil}>\r\n                    <DropFile typeFile='image/*' compressImage={true} changeFile={e => setImage(e)} message=\"Importer une nouvelle image de profil\" />\r\n                    <Button\r\n                        className={classes.buttonEnvoyerImageProfil}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={image === \"\"}\r\n                        onClick={() => dispatch(setUserImage({ name: user.name, image: image }))}\r\n                    >\r\n                        Enregistrer l'image\r\n                    </Button>\r\n                </div>\r\n                <hr className={classes.hr} />\r\n                <div className={classes.divPasswordChange} id=\"divPasswordChange\">\r\n                    <InputPassword label={\"Mot de passe actuel\"} error={password.error}\r\n                        onChange={e => setPassword({ oldPassword: e.target.value, newPassword: password.newPassword, error: false })}\r\n                    />\r\n                    <InputPassword label={\"Nouveau mot de passe\"} error={password.error}\r\n                        onChange={e => setPassword({ oldPassword: password.oldPassword, newPassword: e.target.value, error: false })}\r\n                    />\r\n                    <Button className={classes.buttonChangePwd} variant=\"contained\" color=\"primary\" size=\"small\" onClick={e => changePasswordAPI()}>Changer de mot de passe</Button>\r\n                </div>\r\n                <PopUp severity=\"success\" message=\"Changement de mot de passe réussi\" open={openPopUp} handleClose={e => setOpenPopUp(false)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default function Particules() {\r\n\r\n\treturn (\r\n\t\t<Particles\r\n\t\t\tstyle={{ position: \"absolute\", opacity: \"0.6\", top: 0 }}\r\n\t\t\theight=\"100vh\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\tparams={{\r\n\t\t\t\tparticles: {\r\n\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\tvalue: \"#000000\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tline_linked: {\r\n\t\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\t\tvalue: \"#000000\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnumber: {\r\n\t\t\t\t\t\tvalue: 50\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsize: {\r\n\t\t\t\t\t\tvalue: 3\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"interactivity\": {\r\n\t\t\t\t\t\"events\": {\r\n\t\t\t\t\t\t\"onhover\": {\r\n\t\t\t\t\t\t\t\"enable\": true,\r\n\t\t\t\t\t\t\t\"mode\": \"repulse\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button, makeStyles, FormControl } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\r\n\r\nimport PopUp from '../components/PopUp';\r\nimport Particules from '../components/ParticulesBackLogin';\r\nimport useConstructor from '../components/use/useContructor';\r\nimport InputPassword from '../components/InputPassword';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userDetails, loginUser, selectError, setError, selectIsProf, selectIsLogin } from \"../slice/UserSlice\";\r\n\r\nexport default function Login() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divLogin: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"120px\",\r\n            margin: \"30px auto\"\r\n        },\r\n        backgroundLogin: {\r\n            display: \"block\",\r\n            margin: \"10% auto 0 auto\",\r\n            border: \"solid  2px\",\r\n            borderColor: theme.palette.primary.main,\r\n            borderRadius: \"2%\",\r\n            padding: \"2% 3%\",\r\n            backgroundColor: \"rgba(255,255,255,0.6)\",\r\n            zIndex: 2\r\n        },\r\n        buttonConnexion: {\r\n            display: \"block\",\r\n            margin: \"20px auto 10px auto\",\r\n            backgroundColor: theme.palette.primary.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.primary.dark,\r\n            },\r\n            border: \"none\",\r\n            color: \"white\"\r\n        },\r\n        fieldLogin: {\r\n            display: \"flex\",\r\n            marginTop: \"20px\",\r\n        },\r\n        textField: {\r\n            width: 225,\r\n        },\r\n        iconLogin: {\r\n            marginRight: \"29px\",\r\n            marginTop: \"8px\"\r\n        },\r\n        iconPwd: {\r\n            marginRight: \"25px\",\r\n            marginTop: \"10px\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const error = useSelector(selectError);\r\n    const isProf = useSelector(selectIsProf);\r\n    const isLogin = useSelector(selectIsLogin);\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [loginConnect, setLoginConnect] = useState({ user: \"\", pwd: \"\" });\r\n\r\n    useConstructor(() => {\r\n        dispatch(userDetails())\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (error) setOpenPopUp(true)\r\n    }, [error]);\r\n\r\n    const connexionRedirection = () => {\r\n        return isLogin ? (isProf ? <Redirect push to='/prof/home' /> : <Redirect push to='/etu/home' />) : null;\r\n    }\r\n\r\n    const onChangeUserName = (e) => {\r\n        dispatch(setError(false));\r\n        setLoginConnect({ user: e.target.value, pwd: loginConnect.pwd });\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        dispatch(setError(false));\r\n        setLoginConnect({ user: loginConnect.user, pwd: e.target.value });\r\n    }\r\n\r\n    const connectClick = () => {\r\n        dispatch(loginUser({ name: loginConnect.user, password: loginConnect.pwd }));\r\n    }\r\n\r\n    return (\r\n        (isLogin === undefined)\r\n            ? null\r\n            : <div className={classes.divLogin}>\r\n                <Particules />\r\n                <div className={classes.backgroundLogin}>\r\n                    <div className={classes.fieldLogin}>\r\n                        <AccountCircleOutlinedIcon className={classes.iconLogin} />\r\n                        <FormControl size=\"small\" variant=\"outlined\">\r\n                            <TextField id=\"outlined-login\" className={classes.textField} autoFocus size=\"small\" variant=\"outlined\" required error={error}\r\n                                value={loginConnect.user}\r\n                                label=\"Login\"\r\n                                onChange={e => onChangeUserName(e)}\r\n                                onKeyPress={(e) => { if (e.code === \"Enter\") connectClick() }}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className={classes.fieldLogin}>\r\n                        <VpnKeyOutlinedIcon className={classes.iconPwd} />\r\n                        <InputPassword label={\"Mot de passe\"} error={error}\r\n                            onKeyPress={e => { if (e.code === \"Enter\") connectClick() }}\r\n                            value={loginConnect.pwd}\r\n                            onChange={e => onChangePassword(e)}\r\n                        />\r\n                    </div>\r\n                    <Button type=\"submit\" className={classes.buttonConnexion} variant=\"outlined\" onClick={() => connectClick()}>Connexion</Button>\r\n                    <PopUp severity=\"error\" message=\"Identification invalide\" open={openPopUp} handleClose={() => setOpenPopUp(false)} />\r\n                </div>\r\n                {connexionRedirection()}\r\n            </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { ListItemIcon, ListItemText, Divider, ListItem, List, SwipeableDrawer, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport SchoolOutlinedIcon from \"@material-ui/icons/SchoolOutlined\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PolymerIcon from '@material-ui/icons/Polymer';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser, selectUserName } from \"../slice/UserSlice\";\r\n\r\nexport default function NavBar() {\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tdivNavigation: {\r\n\t\t\tpadding: \"5px 10px\",\r\n\t\t\tzIndex: 99\r\n\t\t},\r\n\t\tdivider: {\r\n\t\t\tmargin: \"3% 0\"\r\n\t\t},\r\n\t\tdeconnexionNav: {\r\n\t\t\tbackgroundColor: theme.palette.error.main,\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tbackgroundColor: theme.palette.error.dark,\r\n\t\t\t},\r\n\t\t\tborderRadius: \"3px\",\r\n\t\t},\r\n\t\tdeconnexionText: {\r\n\t\t\tcolor: \"white\"\r\n\t\t},\r\n\t\tdeconnexionIcon: {\r\n\t\t\tcolor: \"white\"\r\n\t\t},\r\n\t\tdivNavBar: {\r\n\t\t\tmarginBottom: 100\r\n\t\t},\r\n\t\tburger: {\r\n\t\t\tposition: \"fixed\",\r\n\t\t\tleft: \"20px\",\r\n\t\t\ttop: \"20px\",\r\n\t\t\tzIndex: 10\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst user = useSelector(selectUserName);\r\n\tconst dispatch = useDispatch();\r\n\r\n\t//gerer ouverture/fermeture du burger\r\n\tconst [menu, setMenu] = useState(false);\r\n\r\n\t//gerer la liste des pages affichées pour le prof\r\n\tconst listeProf = [\r\n\t\t{\r\n\t\t\ticon: <HomeOutlinedIcon />,\r\n\t\t\tnom: \"Accueil\",\r\n\t\t\troute: \"/prof/home\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <AccountCircleOutlinedIcon />,\r\n\t\t\tnom: \"Profil\",\r\n\t\t\troute: \"/profil\",\r\n\t\t\tdivider: true\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SystemUpdateAltIcon />,\r\n\t\t\tnom: \"Architecture\",\r\n\t\t\troute: \"/prof/architecture\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SchoolIcon />,\r\n\t\t\tnom: \"Promotion\",\r\n\t\t\troute: \"/prof/promo\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <AllInclusiveIcon />,\r\n\t\t\tnom: \"Création variables aléatoires\",\r\n\t\t\troute: \"/prof/variable-aleatoires\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <FunctionsIcon />,\r\n\t\t\tnom: \"Enregistrement des formules\",\r\n\t\t\troute: \"/prof/formules\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <PolymerIcon />,\r\n\t\t\tnom: \"Gérer les unités\",\r\n\t\t\troute: \"/prof/unites\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <PostAddIcon />,\r\n\t\t\tnom: \"Création des énoncés\",\r\n\t\t\troute: \"/prof/enonces\",\r\n\t\t\tdivider: true\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SchoolOutlinedIcon />,\r\n\t\t\tnom: \"Gestion de la correction\",\r\n\t\t\troute: \"/prof/gestion-correction\",\r\n\t\t\tdivider: true\r\n\t\t},\r\n\t];\r\n\r\n\t//gerer la liste des pages affichées pour les étudiants\r\n\tconst listeEtudiant = [\r\n\t\t{\r\n\t\t\ticon: <HomeOutlinedIcon />,\r\n\t\t\tnom: \"Accueil\",\r\n\t\t\troute: \"/etu/home\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <AccountCircleOutlinedIcon />,\r\n\t\t\tnom: \"Profil\",\r\n\t\t\troute: \"/profil\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SchoolOutlinedIcon />,\r\n\t\t\tnom: \"Répondre aux Questions\",\r\n\t\t\troute: \"/etu/repondre-questions\",\r\n\t\t\tdivider: true\r\n\t\t}\r\n\t];\r\n\r\n\t//selectionne la bonne liste de pages\r\n\tconst liste = user.isProf ? listeProf : listeEtudiant;\r\n\r\n\tconst navigation = () => (\r\n\t\t<SwipeableDrawer onOpen={() => setMenu(true)} open={menu} onClose={() => setMenu(false)}>\r\n\t\t\t<nav className={classes.divNavigation}>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{liste.map((item) => (\r\n\t\t\t\t\t\t<div key={item.nom}>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} to={item.route}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{item.icon}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText>{item.nom}</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t{item.divider == null ? null : <Divider className={classes.divider} />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<ListItem className={classes.deconnexionNav} button onClick={() => dispatch(logoutUser())}>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<ExitToAppIcon className={classes.deconnexionIcon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText className={classes.deconnexionText}>Déconnexion</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</nav>\r\n\t\t</SwipeableDrawer>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={classes.divNavBar}>\r\n\t\t\t<IconButton className={classes.burger} onClick={(e) => setMenu(true)}>\r\n\t\t\t\t<MenuRoundedIcon fontSize=\"large\" />\r\n\t\t\t</IconButton>\r\n\t\t\t{navigation()}\r\n\t\t</div>\r\n\t);\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport MenuProfil from \"./MenuProfil\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserName, selectJustLogin, setJustLogin, userDetails} from \"../slice/UserSlice\";\r\n\r\nexport default function PrivateRoute({ forProf, component: Component, ...rest }) {\r\n\r\n\tconst dispatch = useDispatch();\r\n\t//information de l'utilisateur \r\n\tconst user = useSelector(selectUserName);\r\n\t//savoir si la personne vient juste de se connecter\r\n\tconst justLogin = useSelector(selectJustLogin);\r\n\r\n\tconst selection = (props) => {\r\n\t\t//si l'utilisateur n'était pas connecté et que ce n'est pas une connexion depuis la page de login, récuperer les informations\r\n\t\tif (!justLogin || user.isLogin === undefined) {\r\n\t\t\tdispatch(userDetails());\r\n\t\t\tsetJustLogin(false);\r\n\t\t}\r\n\r\n\t\tif (user.isLogin !== undefined) {\r\n\t\t\treturn user.isProf === forProf || forProf === undefined ? (\r\n\t\t\t\t//si tout est ok, afficher la nav bar et le menu profil sur toutes les pages et le composant (la page) en question\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<MenuProfil />\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t//si ce n'est pas un prof et qu'il veut acceder a une page prof, redirection \r\n\t\t\t\t//le window location recharge la page ! \r\n\t\t\t\t<>\r\n\t\t\t\t\t{window.location.href = '/'}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn <Route {...rest} render={(props) => selection(props)} />;\r\n}","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport userReducer from '../slice/UserSlice';\r\nimport formuleReducer from '../slice/FormulesSlice';\r\nimport modeleReducer from '../slice/ModeleSlice';\r\nimport variablesAleatoiresReducer from '../slice/VariablesAleatoiresSlice';\r\nimport reponseReducer from '../slice/RepondreQuestionsSlice';\r\nimport enoncesReducer from '../slice/EnoncesSlice';\r\nimport promoReducer from '../slice/PromoSlice';\r\nimport consulterReducer from '../slice/ConsulterSlice';\r\nimport uniteReducer from '../slice/UniteSlice';\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tuser: userReducer,\r\n\t\tformule: formuleReducer,\r\n\t\tmodele: modeleReducer,\r\n\t\tvariableAleatoire: variablesAleatoiresReducer,\r\n\t\treponse: reponseReducer,\r\n\t\tenonce: enoncesReducer,\r\n\t\tpromo: promoReducer,\r\n\t\tconsulter: consulterReducer,\r\n\t\tunite: uniteReducer,\r\n\t},\r\n\tmiddleware: getDefaultMiddleware({\r\n\t\tserializableCheck: false\r\n\t}),\r\n});","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { MuiThemeProvider, unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\r\n//unstable_createMuiStrictModeTheme pour éviter les warnings strict mod de theme material ui\r\nimport frFR from '@material-ui/core/locale';\r\n\r\nimport Formules from './pages/Prof/Formules';\r\nimport AccueilProf from './pages/Prof/AccueilProf';\r\nimport Architecture from './pages/Prof/Architecture';\r\nimport Correction from './pages/Prof/Correction';\r\nimport Enonces from \"./pages/Prof/Enonces\";\r\nimport VariableAleatoires from './pages/Prof/VariablesAleatoires';\r\nimport Consulter from './pages/Prof/ConsulterEtudiant';\r\nimport Promo from './pages/Prof/Promo';\r\nimport GestionUnites from './pages/Prof/GestionUnites';\r\n\r\nimport RepondreQuestions from './pages/Etu/RepondreQuestions';\r\nimport AccueilEtu from './pages/Etu/AccueilEtu';\r\n\r\nimport Profil from './pages/Profil';\r\nimport Login from './pages/Login';\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './utils/store';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nexport default function App() {\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                light: '#c0dff8',\r\n                main: '#075b72'\r\n            },\r\n            secondary: {\r\n                main: '#cfcfcf'\r\n            },\r\n            error: {\r\n                main: '#c51150'\r\n            },\r\n            warning: {\r\n                main: '#ffa016',\r\n                dark: '#b75c08'\r\n            },\r\n            success: {\r\n                main: '#5bb65f',\r\n                dark: '#244826'\r\n            },\r\n        },\r\n        typography: {\r\n            fontFamily: \"Amaranth\",\r\n            h1: {\r\n                fontSize: 28,\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n                textTransform: \"uppercase\",\r\n                color: \"#393939\",\r\n            },\r\n            button: {\r\n                height: 36,\r\n                width: \"max-content\",\r\n            }\r\n        },\r\n    }, frFR);\r\n\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <Provider store={store}>\r\n                <CssBaseline />\r\n                <BrowserRouter>\r\n                    <Switch>\r\n\r\n                        {/* LOGIN */}\r\n                        <Route exact path='/' component={Login} />\r\n\r\n                        {/* PROF */}\r\n\r\n                        <PrivateRoute forProf={true} exact path='/prof/home' component={AccueilProf} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/gestion-sujets' component={AccueilProf} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/promo' component={Promo} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/unites' component={GestionUnites} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/enonces' component={Enonces} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/formules' component={Formules} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/architecture' component={Architecture} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/gestion-correction' component={Correction} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/variable-aleatoires' component={VariableAleatoires} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/correction/:value' component={Consulter} />\r\n\r\n                        {/* ETU */}\r\n                        <PrivateRoute forProf={false} exact path='/etu/home' component={AccueilEtu} />\r\n                        <PrivateRoute forProf={false} exact path='/etu/repondre-questions' component={RepondreQuestions} />\r\n\r\n                        {/* POUR LES DEUX */}\r\n                        <PrivateRoute exact path='/profil' component={Profil} />\r\n\r\n                        {/* REDIRECTION */}\r\n                        <Route render={() => <Redirect to=\"/\" />} />\r\n\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </MuiThemeProvider>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}