{"version":3,"sources":["utils/api.js","slice/UserSlice.jsx","slice/RepondreQuestionsSlice.jsx","components/InputAwait.jsx","slice/FormulesSlice.jsx","components/formules/ItemFormule.jsx","components/PopUp.jsx","components/formules/TodoListFormule.jsx","components/formules/ItemCategorie.jsx","components/use/useContructor.jsx","components/use/useUnload.jsx","slice/VariablesAleatoiresSlice.jsx","slice/EnoncesSlice.jsx","slice/UniteSlice.jsx","slice/ModeleSlice.jsx","components/SelectionModele.jsx","components/Enregistrement.jsx","components/use/useKeyPressCtrlS.jsx","components/formules/EnregistrementFormule.jsx","pages/Prof/Formules.jsx","components/ParticulesFond.jsx","components/CircularProgressLabel.jsx","pages/Prof/AccueilProf.jsx","components/DropFile.jsx","pages/Prof/Architecture.jsx","slice/PromoSlice.jsx","slice/ConsulterSlice.jsx","components/correction/TableConsulter.jsx","pages/Prof/Correction.jsx","components/enonce/QuestionEnonce.jsx","components/unite/UniteFunctions.jsx","components/unite/ChoixUnite.jsx","components/enonce/SlideBarMarge.jsx","components/enonce/ItemReponse.jsx","components/enonce/ListeReponses.jsx","components/enonce/EnTete.jsx","components/enonce/EnregistrementEnonce.jsx","pages/Prof/Enonces.jsx","components/variable/SlideBarVariable.jsx","components/variable/ItemVariableAleatoire.jsx","components/variable/EnregistrementVariableAleatoires.jsx","pages/Prof/VariablesAleatoires.jsx","components/correction/EssaiEtudiant.jsx","components/correction/Message.jsx","pages/Prof/ConsulterEtudiant.jsx","components/promo/DialogAssociationModele.jsx","components/promo/AjoutListeEtu.jsx","components/promo/TableEtudiant.jsx","pages/Prof/Promo.jsx","pages/Prof/GestionUnites.jsx","components/reponses/ItemReponse.jsx","components/reponses/ItemQuestion.jsx","pages/Etu/RepondreQuestions.jsx","components/MenuProfil.jsx","pages/Etu/AccueilEtu.jsx","components/InputPassword.jsx","pages/Profil.jsx","components/ParticulesBackLogin.jsx","pages/Login.jsx","components/Navbar.jsx","components/PrivateRoute.jsx","utils/store.jsx","App.js","reportWebVitals.js","index.js"],"names":["host","window","port","credentials","withCredentials","protocol","location","href","split","getInfoUserAPI","axios","get","logoutAPI","getImageUserAPI","username","loginAPI","password","post","setImageUserAPI","image","setPwdUserAPI","passwords","deleteImageUserAPI","addNewProfAPI","getCategoriesFormulesAPI","idModele","addCategorieFormuleAPI","tabFormules","deleteModeleAPI","getAllModeleAPI","addModeleAPI","nomModele","getModele3DAPI","idAuth","addModele3DAPI","archi","sujet","images","addArchiAPI","excel","getVariablesArchiAPI","addPromoAPI","nomPromo","getAllPromoAPI","getInfoPromoAPI","idPromo","attributionSujetAPI","deletePromoAPI","desatributionSujetAPI","getModelPromoAPI","addVariableAPI","tabVariables","getVariablesAPI","setQuestionsAPI","enonce","tabQuestions","addUniteAPI","tabUnites","getAllUniteAPI","etudiantNewAPI","fileUploaded","etudiantReponsesNewAPI","etudiantVariablesAPI","getSujetAPI","getReponsesCorrigees","getEssaisEtudiant","userDetails","createAsyncThunk","a","response","data","logoutUser","loginUser","user","name","setUserImage","props","FormData","append","deleteUserImage","getUserImage","myStorage","localStorage","userSlice","createSlice","initialState","undefined","isProf","isLogin","error","justLogin","reducers","setUser","state","action","payload","setError","setJustLogin","extraReducers","rejected","disconnect","fulfilled","connect","setItem","pending","URL","createObjectURL","meta","arg","reader","FileReader","readAsDataURL","onloadend","base64data","result","imageBase64","Buffer","from","profilepic","toString","getItem","actions","changeUserName","selectUserName","selectIsLogin","selectError","selectIsProf","selectJustLogin","getEtudiantModele","getSujet","enregistrerReponses","etudiantVariables","getModele3D","idArchi","reponseSlice","indexQuestion","justification","nbMaxReponses","tabReponses","value","tabUnite","abr","puissance","sujetEnregistre","id_auth","image1","image2","addReponse","indexReponseAvantDernier","length","push","_","cloneDeep","changeReponse","indexReponse","isNaN","deleteReponse","splice","changeUniteForAllReponses","tab","map","i","changeUniteReponses","changeJustification","justif","setUnite","newTab","questions","forEach","question","reponsesTab","reponse","reponses","element","id_question","contenu","variable","regx","RegExp","nom","replaceAll","valeur","selectReponses","peutSupprimer","selectSujetEnregistre","DebounceInput","label","typeNumber","onChange","delay","style","rows","useState","userdata","setUserdata","delayeddata","useRef","debounce","e","current","onChangeIn","target","TextField","multiline","variant","size","getCategoriesFormules","enregistrerFormules","formuleSlice","modif","tabFormule","nomFormule","formule","saveElement","elem","indexCategorie","indexFormule","actualise","enregistre","changement","addCategorie","changeNom","index","event","removeCategorie","changeModifCategorie","addFormule","changeNomFormule","changeFormule","changeModifFormule","removeFormule","undoFormule","changePositionFormule","up","save","message","array","formules","elemForm","saveTabFormule","setActualise","selectCategorieFormule","selectActualiseFormule","selectEnregistreFormule","selectTabCategorieLength","selectPremiereFormule","selectChangement","ItemFomrule","onRemove","classes","makeStyles","theme","affichageFormule","display","nomForm","width","center","margin","marginLeft","buttonSave","backgroundColor","palette","primary","light","typoNomFormule","overflowWrap","typoFormule","buttonModif","containerFormules","gridTemplateColumns","gridTemplateRows","gap","breakpoints","down","fabDelete","color","main","dark","useStyles","dispatch","useDispatch","matches","useMediaQuery","item","useSelector","indexCat","selectFormule","changeModif","className","Fab","clsx","disabled","aria-label","onClick","Button","Typography","React","memo","PopUp","open","handleClose","actionName","severity","pos","snackbar","zIndex","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","IconButton","fontSize","TodoListFormule","buttonAjouterFormule","openPopUpSave","setOpenPopUpSave","tabFormuleLength","max_formule","ajout","useCallback","Array","fill","ItemCategorie","fieldNomCategorie","textNomCategorie","marginTop","fabModif","divItemAccordeon","minWidth","borderRadius","padding","boxShadow","enteteItemAccordeon","justifyContent","buttonDelete","accordion","accordionDetails","flexDirection","expanded","setExpanded","setOpen","selectCategorie","change","remove","delayTimeout","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Accordion","square","AccordionSummary","expandIcon","AccordionDetails","useConstructor","initializer","useUnload","active","handleBeforeUnload","preventDefault","useEffect","addEventListener","removeEventListener","getAllVariables","setVariables","variablesAleatoiresReducer","min","max","precision","addVariable","changeMin","changeMax","removeVariable","changePrecision","undoVariable","selectVariablesAleatoires","variableAleatoire","selectActualise","selectEnregistreVariable","selectTabLength","setQuestions","enoncesReducer","enonceContenu","selectCat","selectForm","margeErreur","unite","addQuestion","removeQuestion","handleChangeQuestion","handleChangeSelect","handleChangeUnite","idQuestion","idReponse","id","formule1","handleChangeCat","handleChangeForm","handleChangeMargeErreur","marge","handleChangeEnonce","removeReponse","selectEnonce","selectActualiseEnonce","selectEnregistreEnonce","selectTabQuestionLength","selectContenuEnonce","getAllUnite","enregistreUnites","uniteSlice","indexEnModif","addUnite","abrev","changeNomComplet","changeAbreviation","deleteUnite","setIndexEnModif","setEnregistre","setTest","sansUnite","o","selectUnites","selectIndexEnMofid","selectEnregistreUnite","getModele","removeModele","addNewModele","modeleSlice","tabName","idModeleSelectionne","selectionnerModele","id_modele","nom_modele","chargementSuppression","some","Number","insertId","selectModele","modele","selectIdModeleSelectionne","selectModeleActuel","SelectionModele","setClose","tard","divNouveauModele","gridGap","fabAdd","form","marginBottom","divSelectModele","menuItem","dialogActions","buttonLater","select","setSelect","etat","nouveauModele","setNouveauModele","openConfirm","setOpenConfirm","disableBackdropClick","disableEscapeKeyDown","FormControl","InputLabel","Select","input","Input","MenuItem","css","required","onChangeNouveauModele","includes","Enregistrement","isEnregistre","openPopUp","setOpenPopUp","openDialog","setOpenDialog","listePromo","setListePromo","touche","keyPressed","setKeyPressed","downHandler","navigator","platform","match","metaKey","ctrlKey","keyCode","setInterval","useKeyPress","envoyer","then","requestStatus","d","nom_promo","id_promo","catch","tempTab","indexOf","suppAsso","EnregistrementFormule","tabCatFormule","cat","TodoListAccordeon","hr","fab","tabCatLength","max_catformule","Particules","position","opacity","top","height","params","CircularProgressLabel","Box","CircularProgress","valueMax","left","bottom","right","alignItems","component","Accueil","rootCard","rootSkeleton","marginElement","isEnregistreVariable","isEnregistreFormule","isEnregistreEnonce","isEnregistreUnite","tabVarLength","tabQuestionLength","max_variable","max_question","Card","CardContent","DropFile","divDrop","secondary","border","borderColor","textAlign","cursor","cloudIcon","onDrop","accepted_files","file","compressImage","imageCompression","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","changeFile","useDropzone","accept","typeFile","maxFiles","acceptedFiles","getRootProps","getInputProps","files","path","substring","Architecture","root","paddingBottom","divImportModele","divDropModele","flexWrap","divNumSujet","saveButton1","saveButton2","button","buttonVariable","setSujet","setImage1","setImage2","setExcel","openPopUpYesArchi","setopenPopUpYesArchi","openPopUpNoArchi","setopenPopUpNoArchi","openPopUpYesImages","setopenPopUpYesImages","openPopUpNoImages","setopenPopUpNoImages","console","log","err","envoieArchi","envoieModele3D","getEtudiantsPromo","getAllPromo","addPromo","removePromo","promoSlice","tabPromo","tabEtudiants","setIdPromo","etudiant","prenom","id_architecture","promo","selectEtudiants","selectIdPromo","selectPromo","selectEnregistrePromo","getReponsesCorDB","idEtudiant","getEssaisDB","consulterSlice","id_etudiant","tabEssais","tabReponsesJustes","changeReponseJuste","indexE","indexQ","indexR","justeProf","setEssaisForTest","dateEssai","corrige","num","commentProf","note","justeApp","valueCorrection","changeMessage","changeCommentaire","commentaire","changeNote","setCorrigeTrue","setEtudiantConsulter","setAvisApplication","essai","questionJuste","find","repCor","uniteCorrection","filter","rep","Math","abs","essaisDB","essaiQuestionDB","date","taille","reponseDB","selectEssais","consulter","selectMessage","selectReponsesJustes","selectEtudiantConsulter","StickyHeadTable","linkConsulter","textDecoration","page","setPage","columns","align","columnConsulterSujet","affichageEnplus","string","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","tabIndex","to","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","Correction","divTable","choixPromoDiv","choixPromoField","isEnregistrePromo","tabPromos","handleChangePromo","helperText","QuestionEnonce","handleChange","divQuestion","selectQuestion","defaultValue","setOptions","buttonList","lang","placeholder","setDefaultStyle","afficherUnites","ChoixUnite","alignementHorizontal","columnGap","buttonGap","choixInput","setUnites","unitesReference","changePuissance","supprimerIterationsSansUnite","partieUnite","handleDeleteUnite","handleChangePuissance","onBlur","pow","parseInt","handleBlurUnite","InputProps","startAdornment","InputAdornment","maxWidth","fullWidth","findIndex","actualiseOpen","title","setTabUnite","SliderBar","divSlideBar","selectMargeErreur","handleClickAway","gutterBottom","Slider","marks","step","onChangeCommitted","valueLabelDisplay","aria-labelledby","Reponse","divReponse","maxHeight","divUniteMarge","gridColumn","affichageUnite","divMarge","buttonAjouterUnite","selectReponse","tabCatForm","changeCat","changeForm","ListeReponses","divListeReponses","buttonSupprimerReponse","tabReponse","selectTabReponse","tabReponseLength","selectReponseLength","premierFormule","max_reponse","add","MyEditor","EnregistrementEnonce","Enonces","enonceSujet","divQuestionReponse","buttonAddQuestion","float","actualiseEnonce","enTete","changementFormule","deleteQuestion","SlideBar","precisionSlice","selectPrecision","valueLabelFormat","getAriaValueText","ItemVariable","typo","containerVariables","fabSave","selectElement","parseFloat","tableauVariables","variables","VariablesAleatoires","divItemvariable","openPopUpUndo","setOpenPopUpUndo","openModele","setOpenModele","lengthTab","isActualise","EnregistrementVariableAleatoires","boxReponses","paddingTop","noteTextField","noteInput","fontWeight","EssaiEtudiant","indexEssai","setActu","moment","format","IconeJuste","juste","Question","numQuestion","questionCorrigee","handleChangeCommentaire","nbReponsesJuste","nb","boutonJustePourProf","handleClickJuste","colSpan","Collapse","in","timeout","unmountOnExit","ReactHtmlParser","Message","messageField","destinataire","handleChangeMessage","handleSend","Consulter","messageBouton","indexEssaiDialog","setIndexEssai","openDetails","setOpenDetails","openMessage","setOpenMessage","nbQuestionsJustes","List","Divider","ListItem","handleClickDetails","ListItemText","ListItemAvatar","revu","Avatar","msg","DialogAssociationModele","openPopUpYes","setOpenPopUpYes","openPopUpNo","setOpenPopUpNo","selectionModele","setSelectionModele","AjoutListeEtu","csvData","setCsvData","separator","pwd","envoieExcel","filtre","setFiltre","displayColumn","indexEtu","startIcon","EnhancedTableToolbar","Toolbar","Tooltip","_event","Promo","mapDisplayEtu","divNomPromo","divPromo","formControl","divSelectPromo","labelSelectPromo","nouvellePromo","setNouvellePromo","assoModele","setAssoModele","listEtu","setListEtu","popUpAssoYes","setPopUpAssoYes","changePromo","GestionUnites","tableauUnite","addButton","deleteButton","modifButton","marginRight","tableCell","tableRow","modifIsUnique","enregistrer","buttonsUniteSansModif","handleModifUnite","afficherUnite","handleChangeNomComplet","handleChangeAbreviation","Item","inputAdornmentReponse","choixUniteOpen","canDelete","handleDeleteReponse","endAdornment","listeReponses","rowGap","listeQuestions","buttonAjouterReponse","h2","RepondreQuestions","contenant","buttonFixed","modeles","popUp","setPopUp","alert","handleEnvoyerReponses","sujetForPdf","jsPDF","html","callback","doc","setFontSize","setFont","addPage","img","Image","src","addImage","img2","number_of_pages","internal","getNumberOfPages","text","setDrawColor","setLineWidth","line","x","y","alt","MenuProfil","divMenuProfil","avatar","openLocation","setOpenLocation","actualiseModele","disableHoverListener","aria-controls","aria-haspopup","currentTarget","toUpperCase","Menu","transformOrigin","disableScrollLock","anchorEl","keepMounted","Boolean","Link","ListItemIcon","info","InputPwd","onKeyPress","divInputPassword","spacing","textField","showMdp","setShowMdp","htmlFor","OutlinedInput","type","Profile","carteProfil","imageProfil","backgroundSize","backgroundPosition","wrapper","dropPhotoProfil","buttonEnvoyerImageProfil","divPasswordChange","buttonChangePwd","rootNewProf","marginNewProf","oldPassword","newPassword","setPassword","setImage","prof","setProf","backgroundImage","charAt","particles","line_linked","number","Login","divLogin","backgroundLogin","buttonConnexion","fieldLogin","iconLogin","iconPwd","loginConnect","setLoginConnect","connectClick","onChangeUserName","code","onChangePassword","NavBar","divNavigation","divider","deconnexionNav","deconnexionText","deconnexionIcon","divNavBar","burger","menu","setMenu","listeProf","icon","route","listeEtudiant","liste","SwipeableDrawer","onOpen","PrivateRoute","forProf","Component","rest","render","selection","configureStore","reducer","userReducer","formuleReducer","modeleReducer","reponseReducer","promoReducer","consulterReducer","uniteReducer","middleware","getDefaultMiddleware","serializableCheck","App","createMuiTheme","warning","success","typography","fontFamily","h1","textTransform","frFR","store","CssBaseline","exact","AccueilProf","Formules","VariableAleatoires","AccueilEtu","Profil","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e02a821.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst { host } = window;\r\nconst { port } = window;\r\nconst credentials = { withCredentials: true };\r\nconst protocol = window.location.href.split(\"/\")[0];\r\n\r\n// User\r\n\r\nexport function getInfoUserAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/auth`, credentials);\r\n}\r\n\r\nexport function logoutAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/auth/logout`, credentials);\r\n}\r\n\r\nexport function getImageUserAPI(username) {\r\n    return axios.get(`${protocol}//${host}:${port}/auth/${username}/profilepic`, credentials);\r\n}\r\n\r\nexport function loginAPI(username, password) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/login`, { username, password }, credentials);\r\n}\r\n\r\nexport function setImageUserAPI(username, image) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/${username}/profilepic/new`, image, credentials);\r\n}\r\n\r\nexport function setPwdUserAPI(username, passwords) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/${username}/changepwd`, { passwords }, credentials);\r\n}\r\n\r\nexport function deleteImageUserAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/auth/profilepic/remove`, credentials);\r\n}\r\n\r\nexport function addNewProfAPI(username, password) {\r\n    return axios.post(`${protocol}//${host}:${port}/auth/addnewprof`, { username, password }, credentials)\r\n}\r\n\r\n// Formules\r\n\r\nexport function getCategoriesFormulesAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/categories`, credentials);\r\n}\r\n\r\nexport function addCategorieFormuleAPI(idModele, tabFormules) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/categories/new`, tabFormules, credentials);\r\n}\r\n\r\n// Modele\r\n\r\nexport function getInfoModeleAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}`, credentials);\r\n}\r\n\r\nexport function deleteModeleAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/delete`, credentials);\r\n}\r\n\r\nexport function getAllModeleAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/modele`, credentials);\r\n}\r\n\r\n// renvoie ausi le numéro modele\r\n\r\nexport function addModeleAPI(nomModele) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/new`, { \"nommodele\": nomModele }, credentials);\r\n}\r\n\r\n// Modeles 3D\r\n\r\nexport function getModele3DAPI(idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/modeles`, credentials);\r\n}\r\n\r\nexport function addModele3DAPI(archi) {\r\n    return axios.post(`${protocol}//${host}:${port}/architecture/${archi.sujet}/modeles/new`, archi.images, credentials);\r\n}\r\n\r\n// Architectures\r\n\r\nexport function addArchiAPI(excel) {\r\n    return axios.post(`${protocol}//${host}:${port}/architecture/new`, excel, credentials);\r\n}\r\n\r\nexport function getVariablesArchiAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/architecture/attribued_without_modeles/excel`, credentials);\r\n}\r\n\r\n// Promotion\r\n\r\nexport function addPromoAPI(nomPromo) {\r\n    return axios.post(`${protocol}//${host}:${port}/promo/new`, { nomPromo: nomPromo }, credentials);\r\n}\r\n\r\nexport function getAllPromoAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/`, credentials);\r\n}\r\n\r\nexport function getInfoPromoAPI(idPromo) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}`, credentials);\r\n}\r\n\r\nexport function attributionSujetAPI(idPromo, idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/${idModele}/attribution`, credentials);\r\n}\r\n\r\nexport function deletePromoAPI(idPromo) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/delete`, credentials);\r\n}\r\n\r\nexport function desatributionSujetAPI(idPromo) {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/${idPromo}/desatribution`, credentials);\r\n}\r\n\r\nexport function getModelPromoAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/promo/modele`, credentials);\r\n}\r\n\r\n// Variables aléatoires\r\n\r\nexport function addVariableAPI(idModele, tabVariables) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/variables/new`, tabVariables, credentials);\r\n}\r\n\r\nexport function getVariablesAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/variables`, credentials);\r\n}\r\n\r\n// Enonces\r\n\r\nexport function setQuestionsAPI(idModele, enonce, tabQuestions) {\r\n    return axios.post(`${protocol}//${host}:${port}/modele/${idModele}/questions/new`, { tabQuestions, enonce }, credentials);\r\n}\r\n\r\nexport function addUniteAPI(tabUnites) {\r\n    return axios.post(`${protocol}//${host}:${port}/unite/new`, { tabUnites }, credentials);\r\n}\r\n\r\nexport function getAllUniteAPI() {\r\n    return axios.get(`${protocol}//${host}:${port}/unite/`, credentials);\r\n}\r\n\r\n// Etudiant \r\n\r\nexport function etudiantNewAPI(idPromo, fileUploaded) {\r\n    return axios.post(`${protocol}//${host}:${port}/etudiant/${idPromo}/new`, fileUploaded, credentials);\r\n}\r\n\r\nexport function etudiantReponsesNewAPI(tabQuestions) {\r\n    return axios.post(`${protocol}//${host}:${port}/etudiant/reponses/new`, { tabQuestions }, credentials);\r\n}\r\n\r\nexport function etudiantVariablesAPI(idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/variables`, credentials);\r\n}\r\n\r\n// Sujet \r\n\r\nexport function getSujetAPI(idModele) {\r\n    return axios.get(`${protocol}//${host}:${port}/modele/${idModele}/sujet`, credentials);\r\n}\r\n\r\n//Correction\r\n\r\nexport function getReponsesCorrigees(idPromo, idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/correction/${idPromo}/${idAuth}`, credentials);\r\n}\r\n\r\nexport function getEssaisEtudiant(idAuth) {\r\n    return axios.get(`${protocol}//${host}:${port}/etudiant/${idAuth}/reponses`, credentials);\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getInfoUserAPI, logoutAPI, setImageUserAPI, getImageUserAPI, loginAPI, deleteImageUserAPI } from \"../utils/api.js\";\r\n\r\nexport const userDetails = createAsyncThunk(\"users/getInfoUser\", async () => {\r\n\tconst response = await getInfoUserAPI();\r\n\treturn response.data;\r\n});\r\n\r\nexport const logoutUser = createAsyncThunk(\"users/logout\", async () => {\r\n\tconst response = await logoutAPI();\r\n\treturn response.data;\r\n});\r\n\r\nexport const loginUser = createAsyncThunk(\"users/login\", async (user) => {\r\n\tconst response = await loginAPI(user.name, user.password);\r\n\treturn response.data;\r\n});\r\n\r\nexport const setUserImage = createAsyncThunk(\"users/setUserImage\", async (props) => {\r\n\tconst data = new FormData();\r\n\tdata.append(\"profilePic\", props.image);\r\n\tconst response = await setImageUserAPI(props.name, data);\r\n\treturn response.data;\r\n});\r\n\r\nexport const deleteUserImage = createAsyncThunk(\"users/deleteUserImage\", async (props) => {\r\n\tconst response = await deleteImageUserAPI(props);\r\n\treturn response.data;\r\n});\r\n\r\nexport const getUserImage = createAsyncThunk(\"users/getUserImage\", async (name) => {\r\n\tconst response = await getImageUserAPI(name);\r\n\treturn response.data;\r\n});\r\n\r\nlet myStorage = window.localStorage;\r\n\r\nexport const userSlice = createSlice({\r\n\tname: \"user\",\r\n\tinitialState: {\r\n\t\tname: \"\",\r\n\t\tpassword: \"\",\r\n\t\timage: undefined,\r\n\t\tisProf: false,\r\n\t\tisLogin: undefined,\r\n\t\terror: false,\r\n\t\tjustLogin: false\r\n\t},\r\n\treducers: {\r\n\t\tsetUser: (state, action) => {\r\n\t\t\tconst { name, password, isProf } = action.payload;\r\n\t\t\tstate.name = name;\r\n\t\t\tstate.password = password;\r\n\t\t\tstate.isProf = isProf;\r\n\t\t},\r\n\t\tsetError: (state, action) => {\r\n\t\t\tstate.error = action.payload;\r\n\t\t},\r\n\t\tsetJustLogin: (state, action) => {\r\n\t\t\tstate.justLogin = action.payload;\r\n\t\t}\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[userDetails.rejected]: (state) => {\r\n\t\t\tdisconnect(state);\r\n\t\t},\r\n\t\t[userDetails.fulfilled]: (state, action) => {\r\n\t\t\tconnect(state, action);\r\n\t\t},\r\n\t\t[deleteUserImage.fulfilled]: (state, action) => {\r\n\t\t\tstate.image = undefined;\r\n\t\t\tmyStorage.setItem(state.name, \"\");\r\n\t\t},\r\n\t\t[loginUser.rejected]: (state) => {\r\n\t\t\tstate.error = true;\r\n\t\t},\r\n\t\t[loginUser.fulfilled]: (state, action) => {\r\n\t\t\tconnect(state, action);\r\n\t\t\tstate.justLogin = true;\r\n\t\t},\r\n\t\t[logoutUser.rejected]: (state) => {\r\n\t\t\tdisconnect(state);\r\n\t\t},\r\n\t\t[logoutUser.fulfilled]: (state) => {\r\n\t\t\tdisconnect(state);\r\n\t\t},\r\n\t\t[setUserImage.pending]: (state, action) => {\r\n\t\t\tstate.image = URL.createObjectURL(action.meta.arg.image);\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\tconst name = state.name;\r\n\t\t\treader.readAsDataURL(action.meta.arg.image);\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tlet base64data = reader.result;\r\n\t\t\t\tmyStorage.setItem(name, base64data);\r\n\t\t\t};\r\n\t\t},\r\n\t\t[getUserImage.fulfilled]: (state, action) => {\r\n\t\t\tconst imageBase64 = \"data:image/jpeg;base64,\" + Buffer.from(action.payload.profilepic).toString(\"base64\");\r\n\t\t\tstate.image = imageBase64;\r\n\t\t\tmyStorage.setItem(state.name, imageBase64);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst disconnect = (state) => {\r\n\tstate.name = \"\";\r\n\tstate.password = \"\";\r\n\tstate.isLogin = false;\r\n\tstate.isProf = undefined;\r\n\tstate.image = undefined;\r\n};\r\n\r\nconst connect = (state, action) => {\r\n\tstate.name = action.payload.username;\r\n\tstate.isProf = action.payload.isProf === 1 ? true : false;\r\n\tstate.isLogin = true;\r\n\tif (state.image === undefined) {\r\n\t\tstate.image = myStorage.getItem(action.payload.username) === null\r\n\t\t\t? undefined\r\n\t\t\t: myStorage.getItem(action.payload.username)\r\n\t}\r\n};\r\n\r\nexport const { setUser, changeUserName, setError, setJustLogin } = userSlice.actions;\r\n\r\nexport const selectUserName = (state) => state.user;\r\n\r\nexport const selectIsLogin = (state) => state.user.isLogin;\r\n\r\nexport const selectError = (state) => state.user.error;\r\n\r\nexport const selectIsProf = (state) => state.user.isProf;\r\n\r\nexport const selectJustLogin = (state) => state.user.justLogin;\r\n\r\nexport default userSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getSujetAPI, etudiantVariablesAPI, etudiantReponsesNewAPI, getModele3DAPI, getModelPromoAPI } from \"../utils/api.js\";\r\nimport _ from \"lodash\";\r\n\r\nexport const getEtudiantModele = createAsyncThunk(\"etudiant/getEtudiantModele\", async () => {\r\n    const response = await getModelPromoAPI();\r\n    return response.data;\r\n});\r\n\r\nexport const getSujet = createAsyncThunk(\"etudiant/getSujet\", async (idModele) => {\r\n    const response = await getSujetAPI(idModele);\r\n    return response.data;\r\n});\r\n\r\nexport const enregistrerReponses = createAsyncThunk(\"etudiant/enregistrerReponses\", async (tabQuestions) => {\r\n    const response = await etudiantReponsesNewAPI(tabQuestions);\r\n    return response.data;\r\n});\r\n\r\nexport const etudiantVariables = createAsyncThunk(\"etudiant/etudiantVariables\", async (idAuth) => {\r\n    const response = await etudiantVariablesAPI(idAuth);\r\n    return response.data;\r\n});\r\n\r\nexport const getModele3D = createAsyncThunk(\"etudiant/getModele3D\", async (idArchi) => {\r\n    const response = await getModele3DAPI(idArchi);\r\n    return response.data;\r\n});\r\n\r\nexport const reponseSlice = createSlice({\r\n    name: \"reponse\",\r\n    initialState: {\r\n        tabQuestions: [{\r\n            indexQuestion: 0,\r\n            enonce: \"\",\r\n            justification: \"\",\r\n            nbMaxReponses: 5,\r\n            tabReponses: [{\r\n                value: \"\",\r\n                tabUnite: [{\r\n                    abr: \" \",\r\n                    puissance: 1\r\n                }]\r\n            }]\r\n        }],\r\n        sujet: \"\",\r\n        sujetEnregistre: false,\r\n        id_auth: \"\",\r\n        image1: \"\",\r\n        image2: \"\"\r\n    },\r\n    reducers: {\r\n        //ajoute une réponse pour une question\r\n        //paramètre : indexQuestion\r\n        addReponse: (state, action) => {\r\n            let indexQuestion = action.payload;\r\n            let indexReponseAvantDernier = state.tabQuestions[action.payload].tabReponses.length - 1;\r\n            state.tabQuestions[indexQuestion].tabReponses.push({\r\n                value: '',\r\n                tabUnite: _.cloneDeep(state.tabQuestions[indexQuestion].tabReponses[indexReponseAvantDernier].tabUnite)\r\n            });\r\n        },\r\n\r\n        //change la valeur d'une réponse pour une question\r\n        //paramètres : indexQuestion, index Réponse, valeurReponse\r\n        changeReponse: (state, action) => {\r\n            /*const reg = '#-?[1-9]*(\\.[1-9]*)?(\\*10\\^[1-9]*)?#'\r\n            const reg = '[a-z]'\r\n            \r\n            if(value.match(reg)){\r\n                state.tabQuestions[indexQuestion].tabReponses[indexReponse].value = value\r\n            }*/\r\n\r\n            let { indexQuestion, indexReponse, value } = action.payload;\r\n            if (!isNaN(value) || value === '-') {\r\n                state.tabQuestions[indexQuestion].tabReponses[indexReponse].value = value;\r\n            }\r\n        },\r\n\r\n        //supprime une réponse pour une question\r\n        //paramètres : indexQuestion, index Réponse\r\n        deleteReponse: (state, action) => {\r\n            let { indexQuestion, indexReponse } = action.payload;\r\n            if (state.tabQuestions[indexQuestion].tabReponses.length > 1) {\r\n                state.tabQuestions[indexQuestion].tabReponses.splice(indexReponse, 1);\r\n            }\r\n        },\r\n\r\n        //change les tableaux d'unités de toutes les réponses assignées à une question\r\n        //paramètres : indexQuestion, tabUnité\r\n        changeUniteForAllReponses: (state, action) => {\r\n            let { indexQuestion, tab } = action.payload;\r\n            state.tabQuestions[indexQuestion].tabReponses.map((i) =>\r\n                i.tabUnite = _.cloneDeep(tab)\r\n            );\r\n        },\r\n\r\n        //change le tableau d'unité en entier d'une réponse\r\n        //paramètres : indexQuestion, indexReponse, tabUnité\r\n        changeUniteReponses: (state, action) => {\r\n            let { indexQuestion, indexReponse, tab } = action.payload;\r\n            state.tabQuestions[indexQuestion].tabReponses[indexReponse].tabUnite = tab;\r\n        },\r\n\r\n        changeJustification: (state, action) => {\r\n            state.tabQuestions[action.payload.indexQuestion].justification = action.payload.justif;\r\n        },\r\n\r\n        //change le tableau d'unités d'une réponse\r\n        //paramètres : indexQuestion, indexReponse, tabUnité\r\n        setUnite: (state, action) => {\r\n            let { indexQuestion, indexReponse, newTab } = action.payload;\r\n            state.tabQuestions[indexQuestion].tabReponses[indexReponse].tabUnite = newTab;\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getSujet.fulfilled]: (state, action) => {\r\n            state.tabQuestions = [];\r\n            state.sujet = action.payload.enonce;\r\n            action.payload.questions.forEach((question) => {\r\n\r\n                const reponsesTab = [];\r\n                if (question.reponse !== undefined) {\r\n                    question.reponses.forEach(element => {\r\n                        reponsesTab.push({\r\n                            value: element.value,\r\n                            tabUnite: element.tabUnite\r\n                        });\r\n                    });\r\n                } else {\r\n                    reponsesTab.push({ value: \"\", tabUnite: [] });\r\n                }\r\n\r\n                state.tabQuestions.push({\r\n                    indexQuestion: question.id_question,\r\n                    enonce: question.contenu,\r\n                    nbMaxReponses: 5,\r\n                    justification: \"\", //question.justification A AJOUTER !!!!\r\n                    tabReponses: reponsesTab\r\n                });\r\n            });\r\n            state.id_auth = action.payload.id_auth;\r\n            state.sujetEnregistre = true;\r\n        },\r\n        [enregistrerReponses.fulfilled]: (state) => {\r\n            state.sujetEnregistre = true;\r\n        },\r\n        [etudiantVariables.fulfilled]: (state, action) => {\r\n            let enonce = state.sujet;\r\n            action.payload.forEach(variable => {\r\n                const regx = new RegExp(\"\\\\$\\\\{\\\\s*\" + variable.nom + \"\\\\s*\\\\}\", 'g');\r\n                enonce = enonce.replaceAll(regx, variable.valeur);\r\n                state.tabQuestions.forEach(question => {\r\n                    question.enonce = question.enonce.replaceAll(regx, variable.valeur)\r\n                });\r\n            });\r\n            state.sujet = enonce;\r\n        },\r\n        [getModele3D.fulfilled]: (state, action) => {\r\n            state.image1 = \"data:image/jpeg;base64,\" + Buffer.from(action.payload.image1).toString(\"base64\");\r\n            state.image2 = \"data:image/jpeg;base64,\" + Buffer.from(action.payload.image2).toString(\"base64\");\r\n        },\r\n    }\r\n});\r\n\r\nexport const { addReponse, changeReponse, deleteReponse, changeUniteReponses, changeUniteForAllReponses, setUnite, changeJustification } = reponseSlice.actions;\r\n\r\n//renvoie l'ensemble d'un tableau de questions\r\nexport const selectReponses = state => state.reponse;\r\n\r\n//renvoie un bouleen pour dire si l'on peut supprimer une réponse pour une question\r\nexport const peutSupprimer = indexQuestion => state => state.reponse.tabQuestions[indexQuestion].tabReponses.length > 1;\r\n\r\nexport const selectSujetEnregistre = state => state.reponse.sujetEnregistre;\r\n\r\nexport default reponseSlice.reducer;","import React, { useRef, useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport _ from \"lodash\";\r\n\r\nexport default function DebounceInput({ label, typeNumber, onChange, delay, value, style, rows }) {\r\n\r\n\tconst [userdata, setUserdata] = useState(value);\r\n\r\n\tconst sendData = (data) => onChange(data);\r\n\r\n\tconst delayeddata = useRef(_.debounce(e => sendData(e), delay)).current;\r\n\r\n\tconst onChangeIn = (e) => {\r\n\t\tsetUserdata(e.target.value);\r\n\t\tdelayeddata(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tstyle={style}\r\n\t\t\tmultiline\r\n\t\t\trows={rows}\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tsize=\"small\"\r\n\t\t\tlabel={label}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tif (typeNumber === undefined || typeNumber === false) {\r\n\t\t\t\t\tonChangeIn(e);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!isNaN(e.target.value) || e.target.value === '-') onChangeIn(e);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tvalue={userdata}\r\n\t\t/>\r\n\t);\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getCategoriesFormulesAPI, addCategorieFormuleAPI } from \"../utils/api.js\";\r\n\r\nexport const getCategoriesFormules = createAsyncThunk(\"formule/getCategoriesFormules\", async (idModele) => {\r\n\tconst response = await getCategoriesFormulesAPI(idModele);\r\n\treturn response.data;\r\n});\r\n\r\nexport const enregistrerFormules = createAsyncThunk(\"formule/enregistrerFormules\", async (props) => {\r\n\tconst response = await addCategorieFormuleAPI(props.idModele, props.tab);\r\n\treturn response.data;\r\n});\r\n\r\nexport const formuleSlice = createSlice({\r\n\tname: \"formule\",\r\n\tinitialState: {\r\n\t\ttab: [\r\n\t\t\t{\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tmodif: true,\r\n\t\t\t\ttabFormule: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnomFormule: \"\",\r\n\t\t\t\t\t\tformule: \"\",\r\n\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tsaveElement: { elem: null, indexCategorie: undefined, indexFormule: undefined }\r\n\t\t\t},\r\n\t\t],\r\n\t\tactualise: false,\r\n\t\tenregistre: false,\r\n\t\tchangement: false\r\n\t},\r\n\treducers: {\r\n\t\taddCategorie: (state) => {\r\n\t\t\tstate.tab.push({\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tmodif: true,\r\n\t\t\t\ttabFormule: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnomFormule: \"\",\r\n\t\t\t\t\t\tformule: \"\",\r\n\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t});\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tchangeNom: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].nom = action.payload.event;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tremoveCategorie: (state, action) => {\r\n\t\t\tstate.tab.splice(action.payload, 1);\r\n\t\t\tstate.enregistre = false;\r\n\t\t\tstate.changement = true;\r\n\t\t},\r\n\t\tchangeModifCategorie: (state, action) => {\r\n\t\t\tstate.tab[action.payload].modif = !state.tab[action.payload].modif;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\taddFormule: (state, action) => {\r\n\t\t\tstate.tab[action.payload].tabFormule[\r\n\t\t\t\tstate.tab[action.payload].tabFormule.length - 1\r\n\t\t\t].modif = false;\r\n\t\t\tstate.tab[action.payload].tabFormule.push({\r\n\t\t\t\tnomFormule: \"\",\r\n\t\t\t\tformule: \"\",\r\n\t\t\t\tmodif: true,\r\n\t\t\t});\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tchangeNomFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule, event } = action.payload;\r\n\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule].nomFormule = event;\r\n\t\t},\r\n\t\tchangeFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule, event } = action.payload;\r\n\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule].formule = event;\r\n\t\t},\r\n\t\tchangeModifFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule } = action.payload;\r\n\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule].modif = !state.tab[\r\n\t\t\t\tindexCategorie\r\n\t\t\t].tabFormule[indexFormule].modif;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tremoveFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule } = action.payload;\r\n\t\t\tstate.saveElement = { elem: state.tab[indexCategorie].tabFormule[indexFormule], indexCategorie: indexCategorie, indexFormule: indexFormule };\r\n\t\t\tstate.tab[indexCategorie].tabFormule.splice(indexFormule, 1);\r\n\t\t\tstate.enregistre = false;\r\n\t\t\tstate.changement = true;\r\n\t\t},\r\n\t\tundoFormule: (state) => {\r\n\t\t\tstate.tab[state.saveElement.indexCategorie].tabFormule.splice(state.saveElement.indexFormule, 0, {\r\n\t\t\t\tnomFormule: state.saveElement.elem.nomFormule,\r\n\t\t\t\tformule: state.saveElement.elem.formule,\r\n\t\t\t\tmodif: state.saveElement.elem.modif,\r\n\t\t\t});\r\n\t\t\tstate.changement = true;\r\n\t\t},\r\n\t\tchangePositionFormule: (state, action) => {\r\n\t\t\tconst { indexCategorie, indexFormule, up } = action.payload;\r\n\t\t\tif (\r\n\t\t\t\t(up && indexFormule > 0) ||\r\n\t\t\t\t(!up && indexFormule < state.tab[indexCategorie].tabFormule.length - 1)\r\n\t\t\t) {\r\n\t\t\t\tlet value = up ? -1 : 1;\r\n\t\t\t\tlet save = state.tab[indexCategorie].tabFormule[indexFormule + value];\r\n\t\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule + value] = state.tab[indexCategorie].tabFormule[indexFormule];\r\n\t\t\t\tstate.tab[indexCategorie].tabFormule[indexFormule] = save;\r\n\t\t\t}\r\n\t\t\tstate.enregistre = false;\r\n\t\t\tstate.changement = true;\r\n\t\t},\r\n\t\tenregistre: (state) => {\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[getCategoriesFormules.pending]: (state) => {\r\n\t\t\tstate.actualise = false;\r\n\t\t},\r\n\t\t[getCategoriesFormules.rejected]: (state, action) => {\r\n\t\t\tif (action.error.message === \"Request failed with status code 404\") {\r\n\t\t\t\tstate.tab = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnom: \"\",\r\n\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t\ttabFormule: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnomFormule: \"\",\r\n\t\t\t\t\t\t\t\tformule: \"\",\r\n\t\t\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t\tstate.actualise = true;\r\n\t\t\t\tstate.enregistre = true;\r\n\t\t\t\tstate.changement = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getCategoriesFormules.fulfilled]: (state, action) => {\r\n\t\t\tlet array = [];\r\n\t\t\taction.payload.forEach((element) => {\r\n\t\t\t\tlet tabFormule = [];\r\n\t\t\t\telement.formules.forEach((elemForm) => {\r\n\t\t\t\t\ttabFormule.push({\r\n\t\t\t\t\t\tnomFormule: elemForm.nom,\r\n\t\t\t\t\t\tformule: elemForm.contenu,\r\n\t\t\t\t\t\tmodif: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tarray.push({\r\n\t\t\t\t\tnom: element.nom,\r\n\t\t\t\t\tmodif: false,\r\n\t\t\t\t\ttabFormule: tabFormule,\r\n\t\t\t\t\tsaveTabFormule: tabFormule,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tstate.actualise = true;\r\n\t\t\tstate.enregistre = true;\r\n\t\t\tstate.changement = false;\r\n\t\t\tstate.tab = array;\r\n\t\t},\r\n\t\t[enregistrerFormules.fulfilled]: (state) => {\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setActualise, changeNom, addCategorie, removeCategorie, changeModifCategorie, addFormule, undoFormule, changeNomFormule, changeFormule, changeModifFormule, removeFormule, changePositionFormule } = formuleSlice.actions;\r\n\r\nexport const selectCategorieFormule = (state) => state.formule.tab;\r\n\r\nexport const selectFormule = (indexCat, indexFormule) => (state) => state.formule.tab[indexCat].tabFormule[indexFormule];\r\n\r\nexport const selectActualiseFormule = (state) => state.formule.actualise;\r\n\r\nexport const selectEnregistreFormule = (state) => state.formule.enregistre;\r\n\r\nexport const selectTabCategorieLength = (state) => state.formule.tab.length;\r\n\r\nexport const selectCategorie = (index) => (state) => state.formule.tab[index];\r\n\r\nexport const selectTabFormuleLength = (index) => (state) => state.formule.tab[index].tabFormule.length;\r\n\r\nexport const selectPremiereFormule = (state) => state.formule.tab[0].tabFormule[0].nomFormule;\r\n\r\nexport const selectChangement = (state) => state.formule.changement;\r\n\r\nexport default formuleSlice.reducer;","import React from 'react';\r\n\r\nimport { Button, Typography, Fab, makeStyles } from '@material-ui/core';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport DelayInput from '../InputAwait';\r\n\r\nimport { changeNomFormule, changeFormule, changeModifFormule, changePositionFormule, selectFormule, removeFormule } from \"../../slice/FormulesSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from 'clsx'\r\n\r\nconst ItemFomrule = ({ indexCategorie, indexFormule, length, onRemove }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        affichageFormule: {\r\n            display: \"flex\",\r\n        },\r\n        nomForm: {\r\n            width: \"30%\",\r\n        },\r\n        center: {\r\n            display: \"block\",\r\n            margin: \"auto\"\r\n        },\r\n        formule: {\r\n            width: \"40%\",\r\n            marginLeft: \"2%\"\r\n        },\r\n        buttonSave: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        typoNomFormule: {\r\n            overflowWrap: \"break-word\",\r\n            width: \"30%\"\r\n        },\r\n        typoFormule: {\r\n            overflowWrap: \"break-word\",\r\n            width: \"40%\",\r\n            marginLeft: \"2%\"\r\n        },\r\n        buttonModif: {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        containerFormules: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"0.5fr 3.5fr 2fr 0.75fr 0.75fr\",\r\n            gridTemplateRows: \"1fr\",\r\n            gap: \"0px 15px\",\r\n            margin: \"0px 1% 3%\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                gridTemplateColumns: \"0.5fr 3.5fr 2fr\",\r\n                gap: \"0, 10px\"\r\n            }\r\n        },\r\n        fabDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            },\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const matches = useMediaQuery('(min-width:960px)');\r\n\r\n    const item = useSelector(selectFormule(indexCategorie, indexFormule));\r\n\r\n    const changeModif = () => {\r\n        dispatch(changeModifFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule }));\r\n    }\r\n\r\n    const field = () => {\r\n        return (\r\n            <>\r\n                <div className={classes.affichageFormule}>\r\n                    <DelayInput\r\n                        label=\"Nom formule\"\r\n                        delay={300}\r\n                        value={item.nomFormule}\r\n                        onChange={e => dispatch(changeNomFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule, event: e }))}\r\n                    />\r\n                    <ArrowForwardIcon className={classes.center} />\r\n                    <DelayInput\r\n                        label=\"Formule\"\r\n                        delay={250}\r\n                        value={item.formule}\r\n                        onChange={e => dispatch(changeFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule, event: e }))}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    className={clsx(classes.buttonSave, classes.center)}\r\n                    variant=\"contained\"\r\n                    onClick={() => changeModif()}\r\n                    disabled={item.nomFormule === \"\" || item.formule === \"\"}\r\n                >\r\n                    Enregistrer\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const txt = () => {\r\n        return (\r\n            <>\r\n                <div className={classes.affichageFormule}>\r\n                    <Typography className={clsx(classes.typoNomFormule, classes.center)}>{item.nomFormule}</Typography>\r\n                    <ArrowForwardIcon className={classes.center} />\r\n                    <Typography className={clsx(classes.typoFormule, classes.center)}>{item.formule}</Typography>\r\n                </div>\r\n                <Button\r\n                    className={clsx(classes.buttonModif, classes.center)}\r\n                    variant=\"contained\"\r\n                    onClick={() => changeModif()}\r\n                >\r\n                    Modifier\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerFormules}>\r\n\r\n            <Fab\r\n                className={clsx(classes.fabDelete, classes.center)}\r\n                disabled={length === 1}\r\n                size=\"small\"\r\n                aria-label=\"add\"\r\n                onClick={() => {\r\n                    dispatch(removeFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule }));\r\n                    onRemove();\r\n                }}\r\n            >\r\n                <DeleteIcon className={classes.center} />\r\n            </Fab>\r\n\r\n            {item.modif ? field() : txt()}\r\n\r\n            {matches ?\r\n                <>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        variant='extended'\r\n                        size='small'\r\n                        onClick={e => dispatch(changePositionFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule, up: true }))}\r\n                    >\r\n                        <ArrowUpwardIcon />\r\n                    </Fab>\r\n                    <Fab color=\"primary\"\r\n                        variant='extended'\r\n                        size='small'\r\n                        onClick={() => dispatch(changePositionFormule({ indexCategorie: indexCategorie, indexFormule: indexFormule, up: false }))}\r\n                    >\r\n                        <ArrowDownwardIcon />\r\n                    </Fab>\r\n                </>\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ItemFomrule);","import React from 'react';\r\nimport { Button, Snackbar, IconButton, makeStyles } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//open : dire l'état du pop up (ouvert ou fermé)\r\n//handleClose : actiona  faire lors de la fermeture (fonction)\r\n//actionName : nom de l'action (par exemple undo), si vide, pas d'action\r\n//si actionName, action = action a réaliser (fonction)\r\n//pos : position, si vide, à guauche par default\r\n//message : message a afficher dans la pop up\r\nexport default function PopUp({ open, handleClose, actionName, severity, pos, action, message, disabled }) {\r\n\tconst useStyles = makeStyles(() => ({\r\n\t\tsnackbar: {\r\n\t\t\tzIndex: 10\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Snackbar\r\n\t\t\t\tclassName={classes.snackbar}\r\n\t\t\t\tanchorOrigin={{ vertical: 'bottom', horizontal: pos !== undefined ? pos : \"left\" }}\r\n\t\t\t\topen={open}\r\n\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t>\r\n\t\t\t\t<Alert onClose={handleClose} severity={severity}\r\n\t\t\t\t\taction={(actionName !== null)\r\n\t\t\t\t\t\t? <Button disabled={disabled === null ? false : disabled} color=\"primary\" onClick={() => action()}>{actionName}</Button>\r\n\t\t\t\t\t\t: <IconButton color=\"inherit\" size=\"small\" onClick={() => handleClose()}>\r\n\t\t\t\t\t\t\t<CloseIcon fontSize=\"inherit\" />\r\n\t\t\t\t\t\t</IconButton>}\r\n\t\t\t\t>\r\n\t\t\t\t\t{message}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</div>\r\n\t);\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nimport Item from './ItemFormule';\r\nimport PopUp from '../PopUp';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addFormule, undoFormule, selectTabFormuleLength } from \"../../slice/FormulesSlice\";\r\n\r\nconst TodoListFormule = ({ indexCategorie }) => {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        buttonAjouterFormule: {\r\n            display: \"block\",\r\n            margin: \"6% auto 0 auto\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [openPopUpSave, setOpenPopUpSave] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const tabFormuleLength = useSelector(selectTabFormuleLength(indexCategorie));\r\n    const { max_formule } = window;\r\n\r\n    const undo = () => {\r\n        dispatch(undoFormule())\r\n        setOpenPopUpSave(false);\r\n    }\r\n\r\n    const ajout = useCallback(() => {\r\n        dispatch(addFormule(indexCategorie));\r\n    }, [dispatch, indexCategorie]);\r\n\r\n    return (\r\n        <div>\r\n            {Array(tabFormuleLength).fill(0).map((_, index) => (\r\n                <Item onRemove={() => setOpenPopUpSave(true)} indexFormule={index} length={tabFormuleLength} key={index} indexCategorie={indexCategorie} />\r\n            ))}\r\n            <Button\r\n                className={classes.buttonAjouterFormule}\r\n                disabled={tabFormuleLength >= max_formule}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => ajout()}\r\n            >\r\n                Ajouter des formules\r\n            </Button>\r\n            <PopUp\r\n                message=\"Formule supprimée\"\r\n                actionName=\"RETOUR\"\r\n                action={() => undo()}\r\n                open={openPopUpSave}\r\n                handleClose={() => setOpenPopUpSave(false)}\r\n                pos=\"right\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListFormule);","import React, { useCallback, useState } from 'react';\r\n\r\nimport { Button, Fab, Typography, Accordion, AccordionSummary, AccordionDetails, makeStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport DelayInput from '../InputAwait';\r\nimport TodoListFormule from './TodoListFormule';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeModifCategorie, changeNom, removeCategorie, selectCategorie } from \"../../slice/FormulesSlice\";\r\n\r\nconst ItemCategorie = ({ index, length }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        fieldNomCategorie: {\r\n            width: \"30%\",\r\n        },\r\n        textNomCategorie: {\r\n            width: \"30%\",\r\n            marginTop: \"8px\"\r\n        },\r\n        fabModif: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        divItemAccordeon: {\r\n            display: \"block\",\r\n            margin: \"0 auto 2% auto\",\r\n            width: \"70%\",\r\n            minWidth: \"420px\",\r\n            borderRadius: \"3px\",\r\n            padding: \"2% 3%\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\"\r\n        },\r\n        enteteItemAccordeon: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\"\r\n        },\r\n        buttonDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        },\r\n        accordion: {\r\n            marginTop: 15\r\n        },\r\n        accordionDetails: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const item = useSelector(selectCategorie(index));\r\n\r\n    const change = useCallback(() => {\r\n        dispatch(changeModifCategorie(index));\r\n    }, [dispatch, index]);\r\n\r\n    const remove = useCallback(() => {\r\n        setOpen(false);\r\n        if (open) dispatch(removeCategorie(index));\r\n    }, [dispatch, index, open]);\r\n\r\n    //Quand les champs sont a remplir\r\n    const field = () => {\r\n        return (\r\n            <>\r\n                <DelayInput\r\n                    label=\"Nom Catégorie\"\r\n                    delayTimeout={250}\r\n                    value={item.nom}\r\n                    onChange={e => dispatch(changeNom({ index: index, event: e }))}\r\n                />\r\n                <Fab\r\n                    disabled={item.nom === \"\"}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => change()}\r\n                >\r\n                    <SaveIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n\r\n    //Quand les champs sont enregistrés\r\n    const txt = () => {\r\n        return (\r\n            <>\r\n                <Typography className={classes.textNomCategorie}>{item.nom}</Typography>\r\n                <Fab className={classes.fabModif}\r\n                    size=\"small\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => change()}\r\n                >\r\n                    <CreateIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.divItemAccordeon}>\r\n\r\n            <div className={classes.enteteItemAccordeon}>\r\n                {item.modif ? field() : txt()}\r\n                <Button className={classes.buttonDelete}\r\n                    disabled={length === 1}\r\n                    variant=\"contained\"\r\n                    onClick={e => setOpen(true)}\r\n                >\r\n                    Supprimer la catégorie\r\n                </Button>\r\n                <Dialog open={open} onClose={() => setOpen(false)}>\r\n                    <DialogTitle>Suppression</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Voulez-vous vraiment supprimer la catégorie ?</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpen(false)} color=\"primary\">Annuler</Button>\r\n                        <Button onClick={() => remove()} color=\"primary\" autoFocus>OK</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\r\n            <Accordion className={classes.accordion} square expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} />\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n                    <TodoListFormule indexCategorie={index} />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ItemCategorie);","import { useState } from \"react\";\r\n\r\nexport default function useConstructor(initializer) {\r\n    useState(initializer);\r\n}","import { useEffect } from 'react';\r\n\r\nexport default function useUnload(active) {\r\n\r\n    const handleBeforeUnload = event => {\r\n        if (active) event.preventDefault();\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n        }\r\n    });\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addVariableAPI, getVariablesAPI } from \"../utils/api.js\";\r\n\r\nexport const getAllVariables = createAsyncThunk(\"variable/getAllVariables\", async (idModele) => {\r\n\tconst response = await getVariablesAPI(idModele);\r\n\treturn response.data;\r\n});\r\n\r\nexport const setVariables = createAsyncThunk(\"variable/setVariables\", async (variable) => {\r\n\tconst response = await addVariableAPI(variable.idModele, variable.tab);\r\n\treturn response.data;\r\n});\r\n\r\nexport const variablesAleatoiresReducer = createSlice({\r\n\tname: \"variableAleatoire\",\r\n\tinitialState: {\r\n\t\ttab: [\r\n\t\t\t{\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 0,\r\n\t\t\t\tprecision: 0,\r\n\t\t\t\tmodif: true,\r\n\t\t\t},\r\n\t\t],\r\n\t\tsaveElement: { elem: null, index: undefined },\r\n\t\tactualise: false,\r\n\t\tenregistre: false,\r\n\t},\r\n\treducers: {\r\n\t\taddVariable: (state) => {\r\n\t\t\tstate.tab.push({\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 0,\r\n\t\t\t\tprecision: 0,\r\n\t\t\t\tmodif: true\r\n\t\t\t});\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tchangeNom: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].nom = action.payload.event;\r\n\t\t},\r\n\t\tchangeMin: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].min = action.payload.event;\r\n\t\t},\r\n\t\tchangeMax: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].max = action.payload.event;\r\n\t\t},\r\n\t\tremoveVariable: (state, action) => {\r\n\t\t\tif (state.tab.length > 1) {\r\n\t\t\t\tstate.saveElement = { elem: state.tab[action.payload], index: action.payload };\r\n\t\t\t\tstate.tab.splice(action.payload, 1);\r\n\t\t\t\tstate.enregistre = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tchangeModif: (state, action) => {\r\n\t\t\tstate.tab[action.payload].modif = !state.tab[action.payload].modif;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\tchangePrecision: (state, action) => {\r\n\t\t\tstate.tab[action.payload.index].precision = action.payload.precision;\r\n\t\t},\r\n\t\tundoVariable: (state) => {\r\n\t\t\tstate.tab.splice(state.saveElement.index, 0, {\r\n\t\t\t\tnom: state.saveElement.elem.nom,\r\n\t\t\t\tmin: state.saveElement.elem.min,\r\n\t\t\t\tmax: state.saveElement.elem.max,\r\n\t\t\t\tprecision: state.saveElement.elem.precision,\r\n\t\t\t\tmodif: state.saveElement.elem.modif\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[getAllVariables.pending]: (state) => {\r\n\t\t\tstate.actualise = false;\r\n\t\t},\r\n\t\t[getAllVariables.rejected]: (state, action) => {\r\n\t\t\tif (action.error.message === \"Request failed with status code 404\") {\r\n\t\t\t\tstate.tab = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnom: \"\",\r\n\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\tmax: 0,\r\n\t\t\t\t\t\tprecision: 0,\r\n\t\t\t\t\t\tmodif: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t\tstate.actualise = true;\r\n\t\t\t\tstate.enregistre = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getAllVariables.fulfilled]: (state, action) => {\r\n\t\t\tlet array = [];\r\n\t\t\taction.payload.forEach((element) => {\r\n\t\t\t\tarray.push({\r\n\t\t\t\t\tnom: element.nom,\r\n\t\t\t\t\tmin: element.min,\r\n\t\t\t\t\tmax: element.max,\r\n\t\t\t\t\tprecision: element.precision,\r\n\t\t\t\t\tmodif: false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tstate.actualise = true;\r\n\t\t\tstate.enregistre = true;\r\n\t\t\tstate.tab = array;\r\n\t\t},\r\n\t\t[setVariables.fulfilled]: (state) => {\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addVariable, changeNom, removeVariable, changeModif, changePrecision, changeMin, changeMax, undoVariable } = variablesAleatoiresReducer.actions;\r\n\r\nexport const selectVariablesAleatoires = (state) => state.variableAleatoire.tab;\r\n\r\nexport const selectActualise = (state) => state.variableAleatoire.actualise;\r\n\r\nexport const selectPrecision = (index) => (state) => state.variableAleatoire.tab[index].precision;\r\n\r\nexport const selectEnregistreVariable = (state) => state.variableAleatoire.enregistre;\r\n\r\nexport const selectTabLength = (state) => state.variableAleatoire.tab.length;\r\n\r\nexport const selectElement = (index) => (state) => state.variableAleatoire.tab[index];\r\n\r\nexport default variablesAleatoiresReducer.reducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getSujetAPI, setQuestionsAPI } from \"../utils/api.js\";\r\n\r\nexport const getSujet = createAsyncThunk(\"enonce/getSujet\", async (idModele) => {\r\n    const response = await getSujetAPI(idModele);\r\n    return response.data;\r\n});\r\n\r\nexport const setQuestions = createAsyncThunk(\"enonce/setQuestions\", async (props) => {\r\n    const response = await setQuestionsAPI(props.idModele, props.enonce, props.tabQuestions);\r\n    return response.data;\r\n});\r\n\r\nexport const enoncesReducer = createSlice({\r\n    name: \"enonce\",\r\n    initialState: {\r\n        enonceContenu: \"\",\r\n        question: [{\r\n            contenu: undefined,\r\n            reponse: [{\r\n                selectCat: \"\",\r\n                selectForm: \"\",\r\n                margeErreur: 5,\r\n                unite: [{\r\n                    abr: \"\",\r\n                    puissance: 1\r\n                }],\r\n            }],\r\n        }],\r\n        actualise: false,\r\n        enregistre: false\r\n    },\r\n    reducers: {\r\n        addQuestion: (state, action) => {\r\n            state.question.push({\r\n                contenu: \"\",\r\n                reponse: [{\r\n                    selectCat: 0,\r\n                    selectForm: action.payload,\r\n                    margeErreur: 5,\r\n                    unite: [{\r\n                        abr: \"\",\r\n                        puissance: 1\r\n                    }],\r\n                }],\r\n            });\r\n        },\r\n        removeQuestion: (state, action) => {\r\n            state.question.splice(action.payload, 1);\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeQuestion: (state, action) => {\r\n            state.question[action.payload.index].contenu = action.payload.contenu;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeSelect: (state, action) => {\r\n            state.question[action.payload.index].reponse = action.payload.reponse;\r\n            state.enregistre = false;\r\n\r\n        },\r\n        handleChangeUnite: (state, action) => {\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].unite = action.payload.tabUnite;\r\n            state.enregistre = false;\r\n        },\r\n        addReponse: (state, action) => {\r\n            state.question[action.payload.id].reponse.push({\r\n                selectCat: 0,\r\n                selectForm: action.payload.formule1,\r\n                margeErreur: 5,\r\n                unite: [{ abr: \"\", puissance: 1 }],\r\n            });\r\n            state.enregistre = false;\r\n        },\r\n        enregistre: (state) => {\r\n            state.enregistre = true;\r\n        },\r\n        handleChangeCat: (state, action) => {\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectCat = action.payload.value;\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectForm = action.payload.formule1;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeForm: (state, action) => {\r\n            state.question[action.payload.idQuestion].reponse[action.payload.idReponse].selectForm = action.payload.value;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeMargeErreur: (state, action) => {\r\n            state.question[action.payload.indexQuestion].reponse[action.payload.indexReponse].margeErreur = action.payload.marge;\r\n            state.enregistre = false;\r\n        },\r\n        handleChangeEnonce: (state, action) => {\r\n            state.enonceContenu = action.payload;\r\n            state.enregistre = false;\r\n        },\r\n        removeReponse: (state, action) => {\r\n            state.question[action.payload.indexQuestion].reponse.splice(action.payload.indexReponse, 1);\r\n            state.enregistre = false;\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getSujet.pending]: (state) => {\r\n            state.actualise = false;\r\n        },\r\n        [getSujet.rejected]: (state) => {\r\n            state.enonceContenu = \"\";\r\n            state.question = [{\r\n                contenu: \"\",\r\n                reponse: [{\r\n                    selectCat: \"\",\r\n                    selectForm: \"\",\r\n                    margeErreur: 5,\r\n                    unite: [{ abr: \"\", puissance: 1 }],\r\n                }],\r\n            }];\r\n            state.actualise = true;\r\n            state.enregistre = true;\r\n        },\r\n        [getSujet.fulfilled]: (state, action) => {\r\n            let question = [];\r\n            state.enonceContenu = action.payload.enonce;\r\n            action.payload.questions.forEach(element => {\r\n                let reponse = [];\r\n                element.reponses.forEach(elem => {\r\n                    reponse.push({\r\n                        selectCat: elem.selectCat,\r\n                        selectForm: elem.selectForm,\r\n                        margeErreur: elem.margeErreur,\r\n                        unite: elem.unite\r\n                    });\r\n                });\r\n                question.push({ contenu: element.contenu, reponse: reponse });\r\n            });\r\n            state.question = question;\r\n            state.actualise = true;\r\n            state.enregistre = true;\r\n        },\r\n        [setQuestions.fulfilled]: (state) => {\r\n            state.enregistre = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { handleChangeEnonce, removeReponse, handleChangeMargeErreur, addQuestion, removeQuestion, handleChangeQuestion, handleChangeSelect, addReponse, handleChangeUnite, handleChangeCat, handleChangeForm } = enoncesReducer.actions;\r\n\r\nexport const selectEnonce = (state) => state.enonce;\r\n\r\nexport const selectTabReponse = (index) => (state) => state.enonce.question[index].reponse;\r\n\r\nexport const selectActualiseEnonce = (state) => state.enonce.actualise;\r\n\r\nexport const selectEnregistreEnonce = (state) => state.enonce.enregistre;\r\n\r\nexport const selectMargeErreur = (indexQuestion, indexReponse) => (state) => state.enonce.question[indexQuestion].reponse[indexReponse].margeErreur;\r\n\r\nexport const selectTabQuestionLength = (state) => state.enonce.question.length;\r\n\r\nexport const selectContenuEnonce = (state) => state.enonce.enonceContenu;\r\n\r\nexport const selectQuestion = (index) => (state) => state.enonce.question[index].contenu;\r\n\r\nexport const selectReponse = (indexQuestion, indexReponse) => (state) => state.enonce.question[indexQuestion].reponse[indexReponse];\r\n\r\nexport const selectReponseLength = (index) => (state) => state.enonce.question[index].reponse.length;\r\n\r\nexport default enoncesReducer.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addUniteAPI, getAllUniteAPI } from \"../utils/api.js\";\r\nimport _ from \"lodash\";\r\n\r\nexport const getAllUnite = createAsyncThunk(\"unite/getAllUnite\", async () => {\r\n\tconst response = await getAllUniteAPI();\r\n\treturn response.data;\r\n});\r\n\r\nexport const enregistreUnites = createAsyncThunk(\"unite/addunite\", async (tabUnites) => {\r\n\tconst response = await addUniteAPI(tabUnites);\r\n\treturn response.data;\r\n});\r\n\r\nexport const uniteSlice = createSlice({\r\n\tname: \"unite\",\r\n\tinitialState: {\r\n\t\ttabUnites: []\r\n\t\t// [{\r\n\t\t//   nom : undefined,\r\n\t\t//   abrev : undefined,\r\n\t\t// }]\r\n\t\t,\r\n\t\tindexEnModif: -1, //l'index de l'unité qui est en modif (-1 coorespond à aucune unité en modif)\r\n\t\tactualise: false, //indique si l'importation des données est terminée\r\n\t\tenregistre: false\r\n\t},\r\n\treducers: {\r\n\t\t//ajoute une unité dans le tableau Unité (ATTENTION : n'enregistre pas dans la BD)\r\n\t\t//paramètres : nomComplet de l'unité, abréviation\r\n\t\taddUnite: (state) => {\r\n\t\t\tlet index = state.tabUnites.push({\r\n\t\t\t\tnom: \"\",\r\n\t\t\t\tabrev: \"\"\r\n\t\t\t});\r\n\t\t\tstate.indexEnModif = index - 1;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\t//change le nom complet d'une unité\r\n\t\t//paramètres : nom complet de l'unité et index\r\n\t\tchangeNomComplet: (state, action) => {\r\n\t\t\tlet { index, value } = action.payload;\r\n\t\t\tstate.tabUnites[index].nom = value;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\t//change l'abréviation d'une unité\r\n\t\t//paramètres : abréviation de l'unité et index\r\n\t\tchangeAbreviation: (state, action) => {\r\n\t\t\tlet { index, value } = action.payload;\r\n\t\t\tstate.tabUnites[index].abrev = value;\r\n\t\t\tstate.enregistre = false;\r\n\t\t},\r\n\t\t//supprime l'unité dans le tableau\r\n\t\t//paramètres : index\r\n\t\tdeleteUnite: (state, action) => {\r\n\t\t\tlet index = action.payload;\r\n\t\t\tstate.indexEnModif = -1;\r\n\t\t\tstate.enregistre = false;\r\n\t\t\tstate.tabUnites.splice(index, 1);\r\n\t\t},\r\n\t\tsetIndexEnModif: (state, action) => {\r\n\t\t\tstate.indexEnModif = action.payload;\r\n\t\t},\r\n\t\tsetEnregistre: (state, action) => {\r\n\t\t\tstate.enregistre = action.payload;\r\n\t\t},\r\n\t\tsetTest: (state) => {\r\n\t\t\tstate.tabUnites = [\r\n\t\t\t\t{ nom: \"Sans Unité\", abrev: \" \" },\r\n\t\t\t\t{ nom: \"Gramme\", abrev: \"g\" },\r\n\t\t\t\t{ nom: \"Newton\", abrev: \"N\" }\r\n\t\t\t];\r\n\t\t}\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[getAllUnite.fulfilled]: (state, action) => {\r\n\t\t\tstate.tabUnites = [];\r\n\t\t\tconst sansUnite = _.remove(action.payload, function (o) {\r\n\t\t\t\treturn o.nom === \"Sans Unité\"\r\n\t\t\t});\r\n\r\n\t\t\tif (sansUnite.length !== 0){\r\n\t\t\t\tstate.tabUnites.push(sansUnite[0]);\r\n\t\t\t}else{ //si sans unité n'est pas dans le base de donnée\r\n\t\t\t\tstate.tabUnites.push({\r\n\t\t\t\t\tnom : \"Sans Unité\",\r\n\t\t\t\t\tabrev : \"\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\taction.payload.forEach(unite => {\r\n\t\t\t\tstate.tabUnites.push({\r\n\t\t\t\t\tnom: unite.nom,\r\n\t\t\t\t\tabrev: unite.abrev\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tstate.actualise = true;\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t\t[getAllUnite.pending]: (state, action) => {\r\n\t\t\tstate.actualise = false;\r\n\t\t},\r\n\t\t[enregistreUnites.fulfilled]: (state, action) => {\r\n\t\t\tstate.indexEnModif = -1;\r\n\t\t\tstate.enregistre = true;\r\n\t\t},\r\n\t}\r\n});\r\n\r\nexport const { setTest, addUnite, changeNomComplet, changeAbreviation, deleteUnite, setIndexEnModif, setEnregistre } = uniteSlice.actions;\r\n\r\nexport const selectUnites = (state) => state.unite.tabUnites;\r\n\r\nexport const selectActualise = (state) => state.unite.actualise;\r\n\r\nexport const selectIndexEnMofid = (state) => state.unite.indexEnModif;\r\n\r\nexport const selectEnregistreUnite = (state) => state.unite.enregistre;\r\n\r\nexport default uniteSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAllModeleAPI, deleteModeleAPI, addModeleAPI } from \"../utils/api.js\";\r\n\r\nexport const getModele = createAsyncThunk(\"modele/getAllModele\", async () => {\r\n\tconst response = await getAllModeleAPI();\r\n\treturn response.data;\r\n});\r\n\r\nexport const removeModele = createAsyncThunk(\"modele/removeModele\", async (idModele) => {\r\n\tconst response = await deleteModeleAPI(idModele);\r\n\treturn response.data;\r\n});\r\n\r\nexport const addNewModele = createAsyncThunk(\"modele/new\", async (nom) => {\r\n\tconst response = await addModeleAPI(nom);\r\n\treturn response.data;\r\n});\r\n\r\nlet myStorage = window.localStorage;\r\n\r\nexport const modeleSlice = createSlice({\r\n\tname: \"modele\",\r\n\tinitialState: {\r\n\t\ttabName: [],\r\n\t\tidModeleSelectionne: myStorage.getItem(\"modele\"),\r\n\t\tactualise: false\r\n\t},\r\n\treducers: {\r\n\t\tselectionnerModele: (state, action) => {\r\n\t\t\tstate.idModeleSelectionne = action.payload;\r\n\t\t\tmyStorage.setItem(\"modele\", action.payload);\r\n\t\t},\r\n\t},\r\n\r\n\textraReducers: {\r\n\t\t[getModele.rejected]: (state) => {\r\n\t\t\tstate.actualise = true;\r\n\t\t},\r\n\t\t[getModele.fulfilled]: (state, action) => {\r\n\t\t\tif (!state.actualise) {\r\n\t\t\t\tlet array = action.payload;\r\n\t\t\t\tarray.forEach((element) => {\r\n\t\t\t\t\tstate.tabName[element.id_modele] = {\r\n\t\t\t\t\t\tnom: element.nom_modele,\r\n\t\t\t\t\t\tindex: element.id_modele\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tstate.actualise = true;\r\n\t\t\t\tstate.chargementSuppression = false;\r\n\t\t\t\t//si n'existe plus dans le cache ou avec une valeur éronnée\r\n\t\t\t\tif (!array.some(elem => Number(elem.id_modele) === Number(state.idModeleSelectionne))){\r\n\t\t\t\t\tstate.idModeleSelectionne = array[0].id_modele;\r\n\t\t\t\t\tmyStorage.setItem(\"modele\", array[0].id_modele);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[removeModele.pending]: (state, action) => {\r\n\t\t\tstate.tabName.splice(action.meta.arg, 1);\r\n\t\t},\r\n\t\t[addNewModele.fulfilled]: (state, action) => {\r\n\t\t\tstate.tabName[action.payload.insertId] = {\r\n\t\t\t\tnom: action.meta.arg,\r\n\t\t\t\tindex: action.payload.insertId,\r\n\t\t\t};\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { selectionnerModele } = modeleSlice.actions;\r\n\r\nexport const selectModele = (state) => state.modele;\r\n\r\nexport const selectActualise = (state) => state.modele.actualise;\r\n\r\nexport const selectChargementSupp = (state) => state.modele.chargementSuppression;\r\n\r\nexport const selectIdModeleSelectionne = (state) => state.modele.idModeleSelectionne;\r\n\r\nexport const selectModeleActuel = (state) => state.modele.tabName[state.modele.idModeleSelectionne];\r\n\r\nexport default modeleSlice.reducer;","import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, DialogContentText, Input, MenuItem, FormControl, Select, TextField, Fab, makeStyles } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategoriesFormules } from \"../slice/FormulesSlice\";\r\nimport { getAllVariables } from \"../slice/VariablesAleatoiresSlice\";\r\nimport { getSujet } from \"../slice/EnoncesSlice\";\r\nimport { getAllUnite } from '../slice/UniteSlice';\r\nimport { selectionnerModele, addNewModele, removeModele, selectModele, selectActualise } from \"../slice/ModeleSlice\";\r\n\r\n//setClose pour fermer la PopUp (fonction)\r\n//open pour connaitre l'état de la pop u (ouvert ou fermé)\r\n//tard pour savoir si on autorise a selectionner plus tard le modèle\r\nconst SelectionModele = ({ setClose, open, tard }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divNouveauModele: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"80% 20%\",\r\n            gridGap: \"7%\",\r\n            marginTop: 30\r\n        },\r\n        fabAdd: {\r\n            marginLeft: \"5%\"\r\n        },\r\n        form: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginBottom: 20\r\n        },\r\n        divSelectModele: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"80% 20%\",\r\n            gridGap: \"7%\",\r\n            marginTop: 15\r\n        },\r\n        selectModele: {\r\n            width: 200\r\n        },\r\n        menuItem: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        fabDelete: {\r\n            margin: \"5%\",\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        },\r\n        dialogActions: {\r\n            marginBottom: \"3%\",\r\n            justifyContent: \"space-around\"\r\n        },\r\n        buttonLater: {\r\n            backgroundColor: theme.palette.primary.light\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const modele = useSelector(selectModele);\r\n    const actualise = useSelector(selectActualise);\r\n\r\n    const [select, setSelect] = useState(modele.idModeleSelectionne === null ? \"\" : modele.idModeleSelectionne);\r\n    const [nouveauModele, setNouveauModele] = useState({ etat: false, nom: \"\", error: false });\r\n    const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setSelect(event.target.value);\r\n        event.target.value === \"Créer nouveau modèle\"\r\n            ? setNouveauModele({ etat: true, nom: nouveauModele.nom, error: false })\r\n            : setNouveauModele({ etat: false, nom: nouveauModele.nom, error: false });\r\n    };\r\n\r\n    const choisirModele = () => {\r\n        if (select !== modele.idModeleSelectionne) { // Le toString ne fonctionne pas ici (voir si cela pose probleme mais fix l'erreur fatal temporairement)\r\n            dispatch(selectionnerModele(select));\r\n            dispatch(getCategoriesFormules(select));\r\n            dispatch(getAllVariables(select));\r\n            dispatch(getSujet(select));\r\n            dispatch(getAllUnite());\r\n        }\r\n        setClose();\r\n    }\r\n\r\n    const onChangeNouveauModele = (e) => {\r\n        setNouveauModele({ etat: true, nom: e.target.value, error: false });\r\n    }\r\n\r\n    const addNouveauModele = () => {\r\n        if (modele.tabName.includes(nouveauModele.nom)) {\r\n            setNouveauModele({ etat: true, nom: nouveauModele.nom, error: true });\r\n        } else {\r\n            dispatch(addNewModele(nouveauModele.nom));\r\n            setNouveauModele({ etat: true, nom: \"\", error: false });\r\n        }\r\n    }\r\n\r\n    const supprModele = () => {\r\n        dispatch(removeModele(select));\r\n        setOpenConfirm(false);\r\n    }\r\n\r\n    const displayNouveauModele = () => {\r\n        return (\r\n            nouveauModele.etat\r\n                ? <div className={classes.divNouveauModele}>\r\n                    <TextField autoFocus size=\"small\" label=\"Nom du modèle\" variant=\"outlined\" required\r\n                        error={nouveauModele.error}\r\n                        value={nouveauModele.nom}\r\n                        onChange={e => onChangeNouveauModele(e)}\r\n                    />\r\n                    <Fab className={classes.fabAdd}\r\n                        size=\"small\" color=\"primary\" aria-label=\"add\"\r\n                        disabled={nouveauModele.nom === \"\" ? true : false}\r\n                        onClick={() => addNouveauModele()}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </div>\r\n                : null\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={() => setClose()}>\r\n                <DialogTitle>Selection du modèle de sujet</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={classes.form}>\r\n                        <FormControl>\r\n                            <InputLabel>Modèle</InputLabel>\r\n                            <div className={classes.divSelectModele}>\r\n                                <Select className={classes.selectModele} value={select} onChange={handleChange} input={<Input />}>\r\n                                    <MenuItem className={classes.menuItem} value=\"Créer nouveau modèle\">Créer nouveau modèle</MenuItem>\r\n                                    {!actualise ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{ margin: \"30px auto\", display: \"flex\", justifyContent: \"center\" }} /> : modele.tabName.map(item => <MenuItem key={item.index} value={item.index}>{item.nom}</MenuItem>)}\r\n                                </Select>\r\n                                <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\"\r\n                                    disabled={select === \"\" || nouveauModele.etat}\r\n                                    onClick={() => setOpenConfirm(true)}\r\n                                >\r\n                                    <DeleteIcon />\r\n                                </Fab>\r\n                            </div>\r\n                            {displayNouveauModele()}\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className={classes.dialogActions}>\r\n                    {tard ? <Button className={classes.buttonLater} variant=\"contained\" onClick={() => setClose()}>Choisir plus tard</Button> : null}\r\n                    <Button disabled={select === \"\" || select === \"Créer nouveau modèle\" ? true : false} onClick={e => choisirModele()} variant=\"contained\" color=\"primary\">Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={openConfirm} onClose={() => setOpenConfirm(false)}>\r\n                <DialogTitle>Suppression</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Voulez-vous vraiment supprimer ce modèle ?</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenConfirm(false)} color=\"primary\">Annuler</Button>\r\n                    <Button onClick={() => supprModele()} disabled={select === \"\"} color=\"primary\" autoFocus>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(SelectionModele);","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContentText, DialogActions, DialogContent, Button } from '@material-ui/core';\r\n\r\nimport { getModelPromoAPI, desatributionSujetAPI } from \"../utils/api\";\r\n\r\nimport PopUp from './PopUp';\r\nimport useKeyPress from './use/useKeyPressCtrlS';\r\nimport useUnload from './use/useUnload';\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Enregistrement = ({ isEnregistre, action, disabled }) => {\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(true);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [listePromo, setListePromo] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const touche = useKeyPress();\r\n\r\n    //ne pas quitter la page si pas enregistré dans la BD\r\n    useUnload(!isEnregistre);\r\n\r\n    useEffect(() => setOpenPopUp(true), [isEnregistre]);\r\n\r\n    const envoyer = useCallback(() => {\r\n        if (!isEnregistre && !disabled) {\r\n            dispatch(action).then((e) => {\r\n                if (e.meta.requestStatus === \"rejected\") {\r\n                    if (e.error.message === \"Request failed with status code 405\") {\r\n                        if (listePromo.length === 0) {\r\n                            getModelPromoAPI().then((d) => {\r\n                                setListePromo(d.data);\r\n                            });\r\n                        }\r\n                        setOpenDialog(true);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [dispatch, action, isEnregistre, disabled, listePromo]);\r\n\r\n    const suppAsso = (e) => {\r\n        desatributionSujetAPI(e.id_promo).then().catch();\r\n        let tempTab = [...listePromo];\r\n        tempTab.splice(listePromo.indexOf(e), 1);\r\n        setListePromo(tempTab);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (touche) {\r\n            envoyer();\r\n        }\r\n    }, [touche, envoyer]); //ne pas ajouter envoyer ! sinon ca ne marche plus\r\n\r\n    return (\r\n        <>\r\n            <PopUp\r\n                severity={isEnregistre ? \"success\" : \"warning\"}\r\n                message={isEnregistre ? \"Enregistré\" : \"Enregistrer les modifications\"}\r\n                actionName={isEnregistre ? null : \"Enregistrer\"}\r\n                action={() => { if (!isEnregistre) envoyer() }}\r\n                disabled={disabled}\r\n                open={openPopUp}\r\n                handleClose={() => { if (isEnregistre) setOpenPopUp(false) }}\r\n                pos=\"left\"\r\n            />\r\n            <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n                <DialogTitle>Attention</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Le sujet est associé à une architecture, que voulez-vous faire ?</DialogContentText>\r\n                    {listePromo.map((e, index) => (\r\n                        <div key={index} style={{ display: \"flex\" }}>\r\n                            <p style={{ margin: \"auto 0\" }}>Promotion : {e.nom_promo}</p>\r\n                            <Button onClick={() => suppAsso(e)} size=\"small\" variant=\"contained\" style={{ marginLeft: 20 }}>Supprimer l'association</Button>\r\n                        </div>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)} color=\"primary\">Abandonner</Button>\r\n                    <Button onClick={() => {\r\n                        envoyer();\r\n                        setOpenDialog(false);\r\n                    }} disabled={listePromo.length > 0} color=\"primary\" autoFocus>Enregistrer</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Enregistrement);","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useKeyPress() {\r\n\tconst [keyPressed, setKeyPressed] = useState(false);\r\n\r\n\tconst downHandler = (e) => {\r\n\t\tif ((window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) && e.keyCode === 83) {\r\n\t\t\te.preventDefault();\r\n\t\t\tsetKeyPressed(true);\r\n\t\t\tsetInterval(() => { \r\n\t\t\t\tsetKeyPressed(false);\r\n\t\t\t}, 500); //car si on appuie pas sur une autre touche, reste true\r\n\t\t} else {\r\n\t\t\tsetKeyPressed(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"keydown\", downHandler);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"keydown\", downHandler);\r\n\t\t};\r\n\t});\r\n\r\n\treturn keyPressed;\r\n}","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectEnregistreFormule, enregistrerFormules, selectCategorieFormule } from \"../../slice/FormulesSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nconst EnregistrementFormule = () => {\r\n\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const tabCatFormule = useSelector(selectCategorieFormule);\r\n\r\n    return (\r\n        <Enregistre isEnregistre={isEnregistre} action={enregistrerFormules({ tab: tabCatFormule, idModele: idModele })} disabled={tabCatFormule.some(cat => cat.modif) || tabCatFormule.some(cat => cat.tabFormule.some(formule => formule.modif))} />\r\n    );\r\n}\r\n\r\nexport default React.memo(EnregistrementFormule);","import React, { useState } from 'react';\r\nimport { Fab, makeStyles, Typography } from '@material-ui/core';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport Items from '../../components/formules/ItemCategorie';\r\nimport useConstructor from '../../components/use/useContructor';\r\nimport useUnload from '../../components/use/useUnload';\r\nimport SelectionModele from '../../components/SelectionModele';\r\nimport EnregistrementFormule from '../../components/formules/EnregistrementFormule';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectTabCategorieLength, selectActualiseFormule, selectEnregistreFormule, addCategorie, getCategoriesFormules } from \"../../slice/FormulesSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nexport default function TodoListAccordeon() {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        fab: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const tabCatLength = useSelector(selectTabCategorieLength);\r\n    const actualise = useSelector(selectActualiseFormule);\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const { max_catformule } = window;\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            idModele === null ? setOpen(true) : dispatch(getCategoriesFormules(idModele));\r\n        }\r\n    });\r\n\r\n    useUnload(!isEnregistre);\r\n\r\n    const displayFormule = () => {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h1\">FORMULES</Typography>\r\n                <hr className={classes.hr} />\r\n                <Fab className={classes.fab}\r\n                    disabled={tabCatLength >= max_catformule}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => dispatch(addCategorie())}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n                {Array(tabCatLength).fill(0).map((_, index) => (\r\n                    <Items index={index} key={index} length={tabCatLength} />\r\n                ))}\r\n                <EnregistrementFormule />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        idModele === null\r\n            ? <SelectionModele tard={false} setClose={() => setOpen(false)} open={open} />\r\n            : actualise ? displayFormule() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n    );\r\n}","import React from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default function Particules() {\r\n\r\n    return (\r\n        <Particles\r\n            style={{ position: \"absolute\", opacity: \"0.6\", top: 0 }}\r\n            height=\"100vh\"\r\n            width=\"100%\"\r\n            params={{\r\n                \"particles\": {\r\n                    \"number\": {\r\n                        \"value\": 35,\r\n                        \"density\": {\r\n                            \"enable\": true,\r\n                            \"value_area\": 1969.2792437967696\r\n                        }\r\n                    },\r\n                    \"color\": {\r\n                        \"value\": \"#043f4f\"\r\n                    },\r\n                    \"shape\": {\r\n                        \"type\": \"circle\",\r\n                        \"stroke\": {\r\n                            \"width\": 0,\r\n                            \"color\": \"#000000\"\r\n                        },\r\n                        \"polygon\": {\r\n                            \"nb_sides\": 6\r\n                        },\r\n                        \"image\": {\r\n                            \"src\": \"img/github.svg\",\r\n                            \"width\": 100,\r\n                            \"height\": 100\r\n                        }\r\n                    },\r\n                    \"opacity\": {\r\n                        \"value\": 1,\r\n                        \"random\": true,\r\n                        \"anim\": {\r\n                            \"enable\": true,\r\n                            \"speed\": 1,\r\n                            \"opacity_min\": 0,\r\n                            \"sync\": false\r\n                        }\r\n                    },\r\n                    \"size\": {\r\n                        \"value\": 4,\r\n                        \"random\": true,\r\n                        \"anim\": {\r\n                            \"enable\": false,\r\n                            \"speed\": 4,\r\n                            \"size_min\": 0.3,\r\n                            \"sync\": false\r\n                        }\r\n                    },\r\n                    \"line_linked\": {\r\n                        \"enable\": false,\r\n                        \"distance\": 126.03387160299326,\r\n                        \"color\": \"#00ff74\",\r\n                        \"opacity\": 1,\r\n                        \"width\": 1.7329657345411573\r\n                    },\r\n                    \"move\": {\r\n                        \"enable\": true,\r\n                        \"speed\": 0.8,\r\n                        \"direction\": \"bottom-left\",\r\n                        \"random\": true,\r\n                        \"straight\": false,\r\n                        \"out_mode\": \"out\",\r\n                        \"bounce\": false,\r\n                        \"attract\": {\r\n                            \"enable\": false,\r\n                            \"rotateX\": 1024.0252067743202,\r\n                            \"rotateY\": 945.2540370224496\r\n                        }\r\n                    }\r\n                }\r\n            }} \r\n        />\r\n    );\r\n}","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nexport default function CircularProgressLabel(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box position=\"relative\" display=\"inline-flex\">\r\n\t\t\t\t<CircularProgress\r\n\t\t\t\t\tvariant=\"determinate\"\r\n\t\t\t\t\tvalue={(props.value / props.valueMax) * 100}\r\n\t\t\t\t/>\r\n\t\t\t\t<Box\r\n\t\t\t\t\ttop={0}\r\n\t\t\t\t\tleft={0}\r\n\t\t\t\t\tbottom={0}\r\n\t\t\t\t\tright={0}\r\n\t\t\t\t\tposition=\"absolute\"\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"caption\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t>{`${props.value}`}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ParticulesFond from \"../../components/ParticulesFond\";\r\nimport useConstructor from \"../../components/use/useContructor\";\r\nimport CircularProgressLabel from \"../../components/CircularProgressLabel\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectModeleActuel, getModele } from \"../../slice/ModeleSlice\";\r\nimport { getCategoriesFormules, selectEnregistreFormule, selectTabCategorieLength } from \"../../slice/FormulesSlice\";\r\nimport { getAllVariables, selectEnregistreVariable, selectTabLength } from \"../../slice/VariablesAleatoiresSlice\";\r\nimport { getSujet, selectEnregistreEnonce, selectTabQuestionLength } from \"../../slice/EnoncesSlice\";\r\nimport { selectEnregistreUnite, getAllUnite } from \"../../slice/UniteSlice\";\r\nimport { Card, CardContent, makeStyles } from \"@material-ui/core\";\r\n\r\nexport default function Accueil() {\r\n\r\n\tconst useStyles = makeStyles(() => ({\r\n\t\trootCard: {\r\n\t\t\tmargin: \"auto\",\r\n\t\t\twidth: \"40%\",\r\n\t\t},\r\n\t\trootSkeleton: {\r\n\t\t\tmargin: \"auto\"\r\n\t\t},\r\n\t\telement: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\twidth: \"80%\",\r\n\t\t\tjustifyContent: \"space-between\",\r\n\t\t\tmarginTop: \"2%\",\r\n\t\t},\r\n        marginElement: {\r\n            marginTop: 10,\r\n        },\r\n    }));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [actualise, setActualise] = useState(false);\r\n\tconst modele = useSelector(selectModeleActuel);\r\n\tconst isEnregistreVariable = useSelector(selectEnregistreVariable);\r\n\tconst isEnregistreFormule = useSelector(selectEnregistreFormule);\r\n\tconst isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n\tconst isEnregistreUnite = useSelector(selectEnregistreUnite);\r\n\tconst tabCatLength = useSelector(selectTabCategorieLength);\r\n\tconst tabVarLength = useSelector(selectTabLength);\r\n\tconst tabQuestionLength = useSelector(selectTabQuestionLength);\r\n    const { max_variable, max_catformule, max_question } = window;\r\n\r\n\tuseConstructor(async () => {\r\n\t\tdispatch(getModele());\r\n\t\tif (!isEnregistreUnite) dispatch(getAllUnite());\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (modele) {\r\n\t\t\tif (!isEnregistreFormule) dispatch(getCategoriesFormules(modele.index));\r\n\t\t\tif (!isEnregistreVariable) dispatch(getAllVariables(modele.index));\r\n\t\t\tif (!isEnregistreEnonce) dispatch(getSujet(modele.index));\r\n\t\t\tsetActualise(true);\r\n\t\t}\r\n\t}, [modele, dispatch, isEnregistreFormule, isEnregistreVariable, isEnregistreEnonce, isEnregistreUnite]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ParticulesFond />\r\n\t\t\t{actualise ?\r\n\t\t\t\t<Card className={classes.rootCard}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<p>Modèle selectionné : <strong>{modele ? modele.nom : \"\"}</strong></p>\r\n\t\t\t\t\t\t<div className={classes.element}>\r\n\t\t\t\t\t\t\t<p className={classes.marginElement}>Nombre de variables créées pour le modèle actuel</p>\r\n\t\t\t\t\t\t\t<CircularProgressLabel value={tabVarLength} valueMax={max_variable} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.element}>\r\n\t\t\t\t\t\t\t<p className={classes.marginElement}>Nombre de catégories de formules créées pour le modèle actuel</p>\r\n\t\t\t\t\t\t\t<CircularProgressLabel value={tabCatLength} valueMax={max_catformule} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.element}>\r\n\t\t\t\t\t\t\t<p className={classes.marginElement}>Nombre de questions créées pour le modèle actuel</p>\r\n\t\t\t\t\t\t\t<CircularProgressLabel value={tabQuestionLength} valueMax={max_question} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t: null}\r\n\t\t</>\r\n\t);\r\n}","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\r\nimport imageCompression from 'browser-image-compression';\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default function DropFile(props) {\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tdivDrop: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.light\r\n\t\t\t},\r\n\t\t\tborder: \"dashed 2px\",\r\n\t\t\tborderColor: theme.palette.primary.main,\r\n\t\t\ttextAlign: \"center\",\r\n\t\t\tcursor: \"pointer\",\r\n\t\t\tpadding: \"0 2%\",\r\n\t\t\twidth: \"40%\",\r\n\t\t\tminWidth: \"250px\",\r\n\t\t\tmargin: \"auto\",\r\n\t\t\theight: 175,\r\n\t\t\tposition: \"relative\",\r\n\t\t\tzIndex: 10,\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: \"90%\",\r\n\t\t\t\tmarginBottom: \"2%\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tcloudIcon: {\r\n\t\t\tfontSize: \"400%\"\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\t//s'execute lors de l'ajout d'un (ou plusieurs) fichier(s) dans le dropFile\r\n\tconst onDrop = useCallback(accepted_files => {\r\n\t\t//pour lire tous les fichiers déposés\r\n\t\taccepted_files.forEach(async (file) => {\r\n\t\t\t//si on veut une compression d'image\r\n\t\t\tif (props.compressImage) {\r\n\t\t\t\tconst compressedFile = await imageCompression(file, { maxSizeMB: 1, maxWidthOrHeight: 800, useWebWorker: true });\r\n\t\t\t\t//retouner les fichiers à l'élément parent\r\n\t\t\t\tawait props.changeFile(compressedFile);\r\n\t\t\t} else {\r\n\t\t\t\t//retouner les fichiers à l'élément parent\r\n\t\t\t\tprops.changeFile(file);\r\n\t\t\t}\r\n\t\t})\r\n\t}, [props]);\r\n\r\n\t//définir les types de fichiers acceptés et le nombre de fichiers à déposer\r\n\tconst { acceptedFiles, getRootProps, getInputProps } = useDropzone({ onDrop, accept: props.typeFile, maxFiles: 1 });\r\n\r\n\t//affichage du nom des fichiers déposés\r\n\tconst files = acceptedFiles.map(file => (\r\n\t\t<p key={file.path}>{file.path.length > 20 ? file.path.substring(0, 20) + \"...\" : file.path}</p>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div {...getRootProps()} className={classes.divDrop}>\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<p>{props.message}</p>\r\n\t\t\t<CloudUploadOutlinedIcon className={classes.cloudIcon} />\r\n\t\t\t{files}\r\n\t\t</div>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { TextField, Button, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport DropFile from '../../components/DropFile';\r\n\r\nimport { addModele3DAPI, addArchiAPI, getVariablesArchiAPI } from '../../utils/api';\r\nimport PopUp from '../../components/PopUp';\r\n\r\nexport default function Architecture() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            paddingBottom: \"2%\",\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divImportModele: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n            padding: \"2%\"\r\n        },\r\n        divDropModele: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                flexWrap: \"wrap\"\r\n            }\r\n        },\r\n        divNumSujet: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"3%\"\r\n        },\r\n        saveButton1: {\r\n            display: \"block\",\r\n            margin: \"20px auto\"\r\n        },\r\n        saveButton2: {\r\n            marginLeft: 20\r\n        },\r\n        button: {\r\n            marginLeft: 20,\r\n        },\r\n        buttonVariable: {\r\n            display: \"block\",\r\n            margin: \"0 auto 2%\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [sujet, setSujet] = useState(\"\");\r\n    const [image1, setImage1] = useState(\"\");\r\n    const [image2, setImage2] = useState(\"\");\r\n    const [excel, setExcel] = useState(\"\");\r\n    const [openPopUpYesArchi, setopenPopUpYesArchi] = useState(false);\r\n    const [openPopUpNoArchi, setopenPopUpNoArchi] = useState(false);\r\n    const [openPopUpYesImages, setopenPopUpYesImages] = useState(false);\r\n    const [openPopUpNoImages, setopenPopUpNoImages] = useState(false);\r\n\r\n    const onChange = (e) => {\r\n        if (!isNaN(e.target.value)) setSujet(e.target.value);\r\n    }\r\n\r\n    const envoieModele3D = () => {\r\n        const data = new FormData();\r\n        data.append('image1', image1);\r\n        data.append('image2', image2);\r\n        addModele3DAPI({ sujet: sujet, images: data }).then(() => {\r\n            setopenPopUpYesImages(true);\r\n        }).catch(err => {\r\n            setopenPopUpNoImages(true)\r\n        });\r\n    }\r\n\r\n    const envoieArchi = () => {\r\n        const data = new FormData();\r\n        data.append('excel', excel);\r\n        addArchiAPI(data).then(() => {\r\n            setopenPopUpYesArchi(true);\r\n        }).catch(() => {\r\n            setopenPopUpNoArchi(true);\r\n        })\r\n    }\r\n\r\n    const getVariables = () => {\r\n        getVariablesArchiAPI().then(data => {\r\n            console.log(data)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h1\">Architecture</Typography>\r\n            <hr className={classes.hr} />\r\n            <Button className={classes.buttonVariable} variant=\"contained\" color=\"primary\" onClick={() => getVariables()}>Récupere la liste des variables d'architecture</Button>\r\n            <div>\r\n                <DropFile typeFile='.xlsx' compressImage={false} changeFile={e => setExcel(e)} message=\"Charger la liste des architectures\" />\r\n                <Button className={classes.saveButton1} disabled={excel === \"\"} variant=\"contained\" color=\"primary\" onClick={() => envoieArchi()}>Enregistrer</Button>\r\n            </div>\r\n            <div className={classes.divImportModele}>\r\n                <div className={classes.divDropModele}>\r\n                    <DropFile typeFile='image/*' compressImage={false} changeFile={e => setImage1(e)} message=\"Importer la PREMIERE image du modèle 3D\" />\r\n                    <DropFile typeFile='image/*' compressImage={true} changeFile={e => setImage2(e)} message=\"Importer la SECONDE image du modèle 3D\" />\r\n                </div>\r\n                <div className={classes.divNumSujet}>\r\n                    <TextField autoFocus size=\"small\" label=\"Numéro du sujet\" variant=\"outlined\" required value={sujet} onChange={e => onChange(e)} />\r\n                    <Button className={classes.saveButton2} disabled={image1 === \"\" || image2 === \"\" || sujet === \"\"} variant=\"contained\" color=\"primary\" onClick={() => envoieModele3D()}>Enregistrer</Button>\r\n                </div>\r\n            </div>\r\n            <PopUp severity=\"success\" message=\"Architecture ajoutée\" open={openPopUpYesArchi} handleClose={() => setopenPopUpYesArchi(false)} />\r\n            <PopUp severity=\"error\" message=\"L'ajout de l'architecture a échoué\" open={openPopUpNoArchi} handleClose={() => setopenPopUpNoArchi(false)} />\r\n            <PopUp severity=\"success\" message=\"Images ajoutées\" open={openPopUpYesImages} handleClose={() => setopenPopUpYesImages(false)} />\r\n            <PopUp severity=\"error\" message=\"L'ajout des images a échoué\" open={openPopUpNoImages} handleClose={() => setopenPopUpNoImages(false)} />\r\n        </div>\r\n    );\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getInfoPromoAPI, getAllPromoAPI, addPromoAPI, deletePromoAPI } from \"../utils/api.js\";\r\n\r\nexport const getEtudiantsPromo = createAsyncThunk(\"promo/getEtudiants\", async (idPromo) => {\r\n    const response = await getInfoPromoAPI(idPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const getAllPromo = createAsyncThunk(\"promo/getAllPromo\", async () => {\r\n    const response = await getAllPromoAPI();\r\n    return response.data;\r\n});\r\n\r\nexport const addPromo = createAsyncThunk(\"promo/addPromo\", async (nomPromo) => {\r\n    const response = await addPromoAPI(nomPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const removePromo = createAsyncThunk(\"promo/remove\", async (select) => {\r\n    const response = await deletePromoAPI(select.idPromo);\r\n    return response.data;\r\n});\r\n\r\nexport const promoSlice = createSlice({\r\n    name: 'promo',\r\n    initialState: {\r\n        tabPromo: [],\r\n        tabEtudiants: [],\r\n        idPromo: undefined,\r\n        enregistre: false\r\n        // tabEtudiants : [{\r\n        //     id : 0,\r\n        //     nom : 'undefined',\r\n        //     prenom : '',\r\n        //     promo : '',\r\n        //     avancement : '', // %\r\n        //     note : '' // /20\r\n        // }],\r\n    },\r\n    reducers: {\r\n        //change l'id de la promo que le prof est en train de corriger\r\n        setIdPromo: (state, action) => {\r\n            state.idPromo = action.payload\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getEtudiantsPromo.fulfilled]: (state, action) => {\r\n            state.tabEtudiants = [];\r\n            action.payload.forEach(etudiant => {\r\n                state.tabEtudiants.push({\r\n                    id: etudiant.id_auth,\r\n                    prenom: etudiant.prenom,\r\n                    nom: etudiant.nom,\r\n                    sujet: etudiant.id_architecture,\r\n                    image1 : etudiant.image1,\r\n                    image2 : etudiant.image2\r\n                });\r\n            });\r\n        },\r\n        [getAllPromo.fulfilled]: (state, action) => {\r\n            let promo = [];\r\n            action.payload.forEach(elem => promo.push({ idPromo: elem.id_promo, nom: elem.nom_promo }));\r\n            state.tabPromo = promo;\r\n            state.enregistre = true;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setIdPromo } = promoSlice.actions;\r\n\r\n//retourne tous le tableau d'étudiants\r\nexport const selectEtudiants = state => state.promo.tabEtudiants;\r\n\r\n//retourne l'id de promo qui est en train de se faire corriger\r\nexport const selectIdPromo = state => state.promo.idPromo;\r\n\r\nexport const selectPromo = state => state.promo.tabPromo;\r\n\r\nexport const selectEnregistrePromo = state => state.promo.enregistre;\r\n\r\nexport default promoSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getReponsesCorrigees, getEssaisEtudiant } from \"../utils/api.js\";\r\nimport _ from 'lodash';\r\n\r\nexport const getReponsesCorDB = createAsyncThunk(\"correction/getReponsesCorDB\", async (props) => {\r\n    const response = await getReponsesCorrigees(props.idPromo, props.idEtudiant);\r\n    return response.data;\r\n});\r\n\r\nexport const getEssaisDB = createAsyncThunk(\"correction/getEssaisDB\", async (props) => {\r\n    const response = await getEssaisEtudiant(props.idEtudiant);\r\n    return response.data;\r\n});\r\n\r\nexport const consulterSlice = createSlice({\r\n    name: 'consulter',\r\n    initialState: {\r\n        etudiant: {\r\n            id_promo: undefined,\r\n            nom: \"\",\r\n            prenom: \"\",\r\n            id_etudiant: undefined,\r\n        },\r\n        tabEssais: undefined\r\n        /*[{\r\n            corrige : false,\r\n            dateEssai : \"01/01/2020\",\r\n            tabQuestions : [{\r\n                justif : \"\",\r\n                commentProf : \"\",\r\n                note : \"\",\r\n                num : 1,\r\n                tabReponses : [{\r\n                    justeApp : true, //reponse juste d'après l'application\r\n                    justeProf : false, //reponse juste d'après le professeur\r\n                    valueCorrection : \"\",\r\n                    value : \"0\",\r\n                    unite : \"\",\r\n                }]\r\n            }]\r\n        }]*/,\r\n        tabReponsesJustes: undefined\r\n        /*[{\r\n            contenu : \"\",\r\n            num : 1,\r\n            tabReponses : [{\r\n                value : \"0\",\r\n                tabUnites : [{\r\n                    abr : '',\r\n                    puissance : '',\r\n                }]\r\n            }]\r\n        }]*/,\r\n        message: \"\"\r\n    },\r\n    reducers: {\r\n        //change la reponse\r\n        changeReponseJuste: (state, action) => {\r\n            let { indexE, indexQ, indexR } = action.payload\r\n            state.tabEssais[indexE].tabQuestions[indexQ].tabReponses[indexR].justeProf =\r\n                !state.tabEssais[indexE].tabQuestions[indexQ].tabReponses[indexR].justeProf\r\n        },\r\n        //importe un jeu d'essai pour faire des tests sur liste d'essais\r\n        setEssaisForTest: (state) => {\r\n            state.tabEssais = [\r\n                {\r\n                    dateEssai: \"05/01/2020\",\r\n                    corrige: false,\r\n                    tabQuestions: [{\r\n                        num: 1, justif: \"Scotland Forever󠁧󠁢\", commentProf: \"\", note: \"\",\r\n                        tabReponses: [{\r\n                            justeApp: true, justeProf: false, value: 12,\r\n                            unite: \"N^12\", valueCorrection: \"0.3\"\r\n                        }]\r\n                    }]\r\n                },\r\n                {\r\n                    dateEssai: \"05/01/2020\",\r\n                    corrige: false,\r\n                    tabQuestions: [{\r\n                        num: 1, justif: \"\", commentProf: \"\", note: \"\",\r\n                        tabReponses: [{\r\n                            justeApp: false, justeProf: false, value: 11,\r\n                            unite: \"N^11\", valueCorrection: \"1.3\"\r\n                        }]\r\n                    }]\r\n                }\r\n            ]\r\n        },\r\n        //change le message que le prof peut envoyer\r\n        //paramètres : valeur du message\r\n        changeMessage: (state, action) => {\r\n            state.message = action.payload;\r\n        },\r\n        //change le commentaire d'une question dans un essai\r\n        //paramètres : indexEssai, indexQuestion, commentaire\r\n        changeCommentaire: (state, action) => {\r\n            let { indexE, indexQ, commentaire } = action.payload;\r\n            state.tabEssais[indexE].tabQuestions[indexQ].commentProf = commentaire;\r\n        },\r\n        //change la note d'une question pour un essai\r\n        //paramètres : indexEssai, indexQuestion, note\r\n        changeNote: (state, action) => {\r\n            let { indexE, indexQ, note } = action.payload;\r\n            if ((!isNaN(note) && note <= 100 && note >= 0) || note === \"\") {\r\n                state.tabEssais[indexE].tabQuestions[indexQ].note = note;\r\n            }\r\n        },\r\n        //applique la correction en changeant le booléen revu\r\n        //paramètres : indexEssai\r\n        setCorrigeTrue: (state, action) => {\r\n            let indexE = action.payload;\r\n            state.tabEssais[indexE].corrige = true;\r\n        },\r\n        //met les infos des étudiants\r\n        //paramètres : id, nom et prénom de l'étudiant\r\n        setEtudiantConsulter: (state, action) => {\r\n            let { id_promo, id_etudiant, prenom, nom } = action.payload;\r\n            state.etudiant = {\r\n                id_promo: id_promo,\r\n                id_etudiant: id_etudiant,\r\n                prenom: prenom,\r\n                nom: nom,\r\n            };\r\n        },\r\n        //Met l'avis de l'application sur l'essai\r\n        setAvisApplication: (state) => {\r\n            console.log(state.tabReponsesJustes);\r\n            //operation faite pour chaque essai présent\r\n            state.tabEssais.forEach(essai => {\r\n\r\n                //on regarde pour chaque question présente dans l'essai\r\n                essai.tabQuestions.forEach(question => {\r\n                    //on regarde la question corrigée lié à la question de l'essai\r\n                    const questionJuste = _.find(state.tabReponsesJustes, (o) => { return o.num === question.num })\r\n\r\n                    if (questionJuste !== undefined){\r\n                        //on regarde pour chaque réponse de la question corrigée\r\n                        questionJuste.tabReponses.forEach(repCor => {\r\n\r\n                            //on essai de trouver une réponse juste dans l'essai pour cette réponse corrigée\r\n                            const reponse = _.find(question.tabReponses, (o) => {\r\n                                return !o.justeApp &&\r\n                                    o.value >= repCor.value * (1 - repCor.margeErreur / 100) &&\r\n                                    o.value <= repCor.value * (1 + repCor.margeErreur / 100)\r\n                            });\r\n\r\n                            //si il y en a une, on met qu'elle est juste\r\n                            if (reponse !== undefined) {\r\n                                reponse.justeApp = true;\r\n                                reponse.valueCorrection = repCor.value;\r\n                                reponse.uniteCorrection = repCor.unite;\r\n                            }\r\n                        });\r\n\r\n                        //on s'interesse aux reponses fausses\r\n                        const repFausses = _.filter(question.tabReponses, (o) => { return !o.justeApp })\r\n\r\n                        //on regarde chacune des réponses fausses\r\n                        repFausses.forEach(rep => {\r\n                            let min = undefined\r\n\r\n                            questionJuste.tabReponses.forEach(repCor => {\r\n                                if (min === undefined) {\r\n                                    min = Math.abs(rep.value - repCor.value)\r\n                                } else {\r\n                                    min = Math.min(min, Math.abs(rep.value - repCor.value))\r\n                                }\r\n                            });\r\n\r\n                            rep.valueCorrection = min;\r\n                        });\r\n                    }else{ //si la question Juste n'est pas bonne\r\n                        console.error(\"Poblème dans le calcul des avis de l'application 'Consulter Slice'\")\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [getReponsesCorDB.fulfilled]: (state, action) => {\r\n\r\n            state.tabReponsesJustes = []\r\n\r\n            action.payload.forEach(question => {\r\n                let index = state.tabReponsesJustes.push({\r\n                    contenu: question.contenu,\r\n                    num: question.id_question,\r\n                    tabReponses: [],\r\n                }) - 1;\r\n\r\n                question.reponses.forEach(reponse => {\r\n                    state.tabReponsesJustes[index].tabReponses.push({\r\n                        value: reponse.value,\r\n                        margeErreur: reponse.margeErreur,\r\n                        tabUnites: reponse.tabUnites\r\n                    });\r\n                })\r\n            });\r\n        },\r\n        [getReponsesCorDB.rejected]: (state, action) => {\r\n            state.tabReponsesJustes = undefined\r\n        },\r\n        [getEssaisDB.fulfilled]: (state, action) => {\r\n            let essaisDB = action.payload;\r\n            state.tabEssais = [];\r\n\r\n            //on regarde par rapport aux lignes données\r\n            essaisDB.forEach(essaiQuestionDB => {\r\n                //on recherche si un essai à cette date existe déjà\r\n                let essai = _.find(state.tabEssais, (o) => { return o.dateEssai === essaiQuestionDB.date });\r\n\r\n                //si l'essai n'existe pas, on le crée\r\n                if (essai === undefined) {\r\n                    let taille = state.tabEssais.push({\r\n                        corrige: false,\r\n                        dateEssai: essaiQuestionDB.date,\r\n                        tabQuestions: []\r\n                    });\r\n                    essai = state.tabEssais[taille - 1];\r\n                }\r\n\r\n                //on push la question\r\n                let indexQ = essai.tabQuestions.push({\r\n                    justif: \"\",\r\n                    commentProf: \"\",\r\n                    note: \"\",\r\n                    num: essaiQuestionDB.id_question,\r\n                    tabReponses: []\r\n                }) - 1;\r\n\r\n                let question = essai.tabQuestions[indexQ];\r\n\r\n                //on push les réponses données par l'étudiant pour cette question\r\n                essaiQuestionDB.reponses.forEach(reponseDB => {\r\n                    question.tabReponses.push({\r\n                        justeApp: false,\r\n                        justeProf: false,\r\n                        valueCorrection: \"\",\r\n                        value: reponseDB.value,\r\n                        unite: reponseDB.tabUnite,\r\n                        uniteCorrection: []\r\n                    });\r\n                });\r\n            });\r\n\r\n        },\r\n        [getEssaisDB.rejected]: (state, action) => {\r\n            state.tabEssais = undefined;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setEssaisForTest, changeReponseJuste, changeMessage, changeCommentaire, changeNote, setCorrigeTrue, setEtudiantConsulter, setAvisApplication } = consulterSlice.actions;\r\n\r\n//retourne tous le tableau des essais\r\nexport const selectEssais = state => state.consulter.tabEssais;\r\n\r\n//retourne le message que le professeur peut envoyer à l'étudiant\r\nexport const selectMessage = state => state.consulter.message;\r\n\r\n//retourne un essai particulier suivant un ID\r\nexport const selectEssaisWithID = index => state => state.consulter.tabEssais[index];\r\n\r\n//retourne tous le tableau des reponses justes\r\nexport const selectReponsesJustes = state => state.consulter.tabReponsesJustes;\r\n\r\n//retourne l'objet étudiant\r\nexport const selectEtudiantConsulter = state => state.consulter.etudiant;\r\n\r\n//retourne le nombre de réponses dans le tableau des réponses justes\r\nexport const selectNbReponsesAAvoir = numQuestion => state => {\r\n    let indexQ = _.findIndex(state.consulter.tabReponsesJustes, function (o) { return o.num === numQuestion; })\r\n    return state.consulter.tabReponsesJustes[indexQ].tabReponses.length\r\n}\r\n\r\nexport const selectUneQuestionJuste = numQuestion => state => _.find(state.consulter.tabReponsesJustes, (o) => {\r\n    return o.num === numQuestion;\r\n});\r\n\r\nexport default consulterSlice.reducer;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setEtudiantConsulter } from '../../slice/ConsulterSlice';\r\nimport { selectEtudiants, selectIdPromo } from '../../slice/PromoSlice';\r\n\r\nexport default function StickyHeadTable() {\r\n\r\n\tconst useStyles = makeStyles(() => ({\r\n\t\tlinkConsulter: {\r\n\t\t\ttextDecoration: \"none\",\r\n\t\t\tcolor: \"white\"\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [page, setPage] = useState(0);\r\n\r\n\tconst rowsPerPage = 10;\r\n\r\n\tconst tabEtudiants = useSelector(selectEtudiants);\r\n\r\n\tconst idPromo = useSelector(selectIdPromo);\r\n\r\n\tconst columns = [\r\n\t\t{ id: 'nom', label: 'Nom', minWidth: 170 },\r\n\t\t{ id: 'prenom', label: 'Prénom', minWidth: 170 },\r\n\t\t{ id: 'avancement', label: 'Avancement', minWidth: 170, align: 'right' },\r\n\t\t{ id: 'note', label: 'Note actuelle', minWidth: 170, align: 'right' },\r\n\t\t{ id: 'sujet', label: \"Sujet de l'éleve\", minWidth: 170, align: 'right' },\r\n\t];\r\n\r\n\tconst columnConsulterSujet = columns[columns.length - 1];\r\n\r\n\t//si la colonne demande quelque chose d'autre à ajouter, le rajoutera\r\n\tconst affichageEnplus = (id) => {\r\n\t\tlet string;\r\n\t\tswitch (id) {\r\n\t\t\tcase \"note\":\r\n\t\t\t\tstring = \"/20\";\r\n\t\t\t\tbreak\r\n\t\t\tcase \"avancement\":\r\n\t\t\t\tstring = \"%\";\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tstring = \"\";\r\n\t\t}\r\n\t\treturn string;\r\n\t}\r\n\r\n\t//gère le changement de page\r\n\tconst handleChangePage = (event, newPage) => {\r\n\t\tsetPage(newPage);\r\n\t};\r\n\r\n\tconst handleClickConsulter = (etudiant) => {\r\n\t\tdispatch(setEtudiantConsulter({\r\n\t\t\tid_promo: idPromo,\r\n\t\t\tid_etudiant: etudiant.id,\r\n\t\t\tprenom: etudiant.prenom,\r\n\t\t\tnom: etudiant.nom\r\n\t\t}));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table stickyHeader aria-label=\"sticky table\">\r\n\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n\t\t\t\t\t\t\t\t\t{column.label}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t{/* affiche les lignes de rowd une par une dans le tableau */}\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{/* affiche les lignes 10 par 10 */}\r\n\t\t\t\t\t\t{tabEtudiants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow hover tabIndex={-1} key={row.nom}>\r\n\t\t\t\t\t\t\t\t\t{/* affiche les infos pour chaque colonne d'élément de rows */}\r\n\t\t\t\t\t\t\t\t\t{columns.map((column) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\tcolumn.id !== 'sujet' ?\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t//cas des données du tableau d'étudiants\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{row[column.id]}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* affiche /20 ou % dans certains cas */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{affichageEnplus(column.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t//cas de la colonne consulter sujet\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={'sujet'} align={columnConsulterSujet.align}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={e => handleClickConsulter(row)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={classes.linkConsulter} to={\"/prof/correction/\" + row.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tConsulter\r\n                          \t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\r\n\t\t\t<TablePagination\r\n\t\t\t\trowsPerPageOptions={[]}\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tcount={tabEtudiants.length}\r\n\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\tpage={page}\r\n\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t/>\r\n\t\t</Paper>\r\n\t);\r\n}","import React from 'react';\r\nimport { makeStyles, MenuItem, Typography, TextField } from \"@material-ui/core\";\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getEtudiantsPromo, selectIdPromo, setIdPromo, getAllPromo, selectEnregistrePromo, selectPromo } from '../../slice/PromoSlice';\r\nimport Table from '../../components/correction/TableConsulter';\r\n\r\nexport default function Correction() {\r\n    const useStyles = makeStyles(() => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divTable: {\r\n            width: \"90%\",\r\n            margin: \"0 auto 2% auto\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        choixPromoDiv: {\r\n            width: \"200px\",\r\n            margin: \"auto\",\r\n        },\r\n        choixPromoField: {\r\n            width: \"100%\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const idPromo = useSelector(selectIdPromo);\r\n    const isEnregistrePromo = useSelector(selectEnregistrePromo);\r\n    const tabPromos = useSelector(selectPromo);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useConstructor(() => { \r\n        if (!isEnregistrePromo) dispatch(getAllPromo());\r\n    });\r\n\r\n    //change l'id de promo qui est corrigée et importe les étudiants de cette promo\r\n    const handleChangePromo = (e) => {\r\n        dispatch(setIdPromo(e.target.value));\r\n        dispatch(getEtudiantsPromo(e.target.value));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h1\">Correction</Typography>\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Select pour le choix de la promo */}\r\n            <div className={classes.choixPromoDiv}>\r\n                <TextField select value={idPromo} onChange={e => handleChangePromo(e)} className={classes.choixPromoField}\r\n                    helperText=\"Choisissez la promotion\" >\r\n                    {tabPromos.map((element) => {\r\n                        return (\r\n                            <MenuItem key={element.idPromo} value={element.idPromo}>\r\n                                {element.nom}\r\n                            </MenuItem>\r\n                        );\r\n                    })}\r\n                </TextField>\r\n            </div>\r\n\r\n            { /* Table pour la correction */}\r\n            {idPromo !== undefined \r\n                ? <div className={classes.divTable}>\r\n                    <Table />\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport SunEditor from \"suneditor-react\";\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectQuestion } from \"../../slice/EnoncesSlice\";\r\n\r\nexport default function QuestionEnonce({ index, handleChange }) {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        divQuestion: {\r\n            display: \"block\",\r\n            margin: \"auto\",\r\n            width: '100%',\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.3)\",\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    const value = useSelector(selectQuestion(index))\r\n\r\n    return (\r\n        <div className={classes.divQuestion}>\r\n            <SunEditor\r\n                defaultValue={value}\r\n                onChange={handleChange}\r\n                setOptions={{\r\n                    buttonList: [\r\n                        ['undo', 'redo'],\r\n                        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                        ['table', 'list'],\r\n                        ['removeFormat'],\r\n                    ]\r\n                }}\r\n                lang=\"fr\"\r\n                placeholder=\"Tapez votre question ici...\"\r\n                height=\"200\"\r\n                setDefaultStyle=\"background-color: lightgrey\"\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n//donne en html l'unité en fonction d'un tableau d'unités\r\n//props -> tabUnites ({abr, puissance})\r\nexport function afficherUnites(tabUnites) {\r\n    return (\r\n        <div>\r\n            {tabUnites.map((i, index) => (\r\n                <var key={index}>\r\n                    {i.abr}\r\n                    <sup> {i.puissance !== 1 && i.abr !== \" \" ? i.puissance : null} </sup>\r\n                </var>\r\n            )\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport _ from \"lodash\";\r\n\r\nimport { Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, makeStyles, TextField, MenuItem, InputAdornment } from '@material-ui/core';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUnites, getAllUnite } from '../../slice/UniteSlice';\r\nimport useConstructor from '../use/useContructor';\r\n\r\n//props\r\n//  => open (booléen pour savoir si le dialog est ouvert ou fermé)\r\n//  => unite (tableau de parties unités faisant l'unité d'une réponse [{abr : string, puissance : int }])\r\n//  => setTabUnite() (fonction changeant le tableau d'unités)\r\n//  => handleClose() (fonction appelé à la fermeture du dialog (doit s'occupe de fermer le dialog))\r\nexport default function ChoixUnite(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        alignementHorizontal: {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            columnGap: \"20px\",\r\n            alignItems: \"center\",\r\n            flexWrap: \"wrap\"\r\n        },\r\n        buttonDelete: {\r\n            color: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                color: theme.palette.error.dark,\r\n            }\r\n        },\r\n        buttonGap: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            columnGap: \"10px\"\r\n        },\r\n        choixInput: {\r\n            marginBottom: \"10px\"\r\n        },\r\n        puissance: {\r\n            width: \"40px\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    //Partie unité : 'Kg^3' est une partie d'unité de 'm^2.Kg^3'\r\n    //caractérisé par un id (identifiant de l'unité dans le tableau unites)\r\n\r\n    const [actualise, setActualise] = useState(false);\r\n\r\n    const [tabUnites, setUnites] = useState([{ index: 0, puissance: 1 }]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const unitesReference = useSelector(selectUnites);\r\n\r\n    useConstructor(() => {\r\n        if (unitesReference.length === 0) {\r\n            dispatch(getAllUnite());\r\n        }\r\n    });\r\n\r\n    const NB_MAX_PARTIES_UNITE = 6;\r\n    const MAX_WIDTH = \"lg\"; //taille de la boite de dialogue\r\n\r\n    //gère l'ajout d'une partie d'unité dans l'unité de la réponse\r\n    const handleAjouterUnite = () => {\r\n        let newTab = [...tabUnites, { index: 0, puissance: 1 }];\r\n        setUnites(newTab);\r\n    }\r\n\r\n    //remete l'unité à [{id : 0, puissance : 1}], soit sans unité\r\n    const handleRemettreAZero = () => {\r\n        setUnites([{ index: 0, puissance: 1 }]);\r\n    }\r\n\r\n    const actualiseOpen = () => {\r\n        if (props.open && !actualise && props.unite.length !== 0) {\r\n\r\n            const newTab = [];\r\n            props.unite.forEach( (i) => {\r\n                newTab.push({\r\n                    index : _.findIndex(unitesReference, (o) => { return o.abrev === i.abr }),\r\n                    puissance : i.puissance,\r\n                })\r\n            })\r\n\r\n            setUnites(newTab);\r\n            //setUnites(_.cloneDeep(props.unite));\r\n            setActualise(true);\r\n        } else if (!props.open && actualise) {\r\n            setActualise(false);\r\n        }\r\n    }\r\n\r\n    //gère le changement d'unité par action sur le select\r\n    const handleChangeUnite = (index, event) => {\r\n        let newTab = [...tabUnites];\r\n        newTab[index].index = event.target.value;\r\n        setUnites(newTab);\r\n    }\r\n\r\n    //gère la suppression de cette partie d'unité\r\n    const handleDeleteUnite = (index) => {\r\n        let newTab = [...tabUnites];\r\n        newTab.splice(index, 1);\r\n        setUnites(newTab);\r\n    }\r\n\r\n    //gère le changement de la puissance au fur et à mesure que l'étudiant la tape\r\n    //n'accepte que nombres entre -100 et 100\r\n    const handleChangePuissance = (index, event) => {\r\n        let value = event.target.value\r\n        if ((!isNaN(value) && Math.abs(value) < 100) || value === '-') {\r\n            changePuissance(index, value);\r\n        }\r\n    }\r\n\r\n    //lorque l'on quitte le focus sur la puissance, s'assure que la puissance soit bonne\r\n    //si valeur est égal à 0, ou à '-' ou à '', transforme en 1\r\n    const handleBlurUnite = (index) => {\r\n        let pow = tabUnites[index].puissance\r\n        if (parseInt(pow) === 0 || pow === '-' || pow === '') {\r\n            changePuissance(index, 1);\r\n        }\r\n    }\r\n\r\n    //change directement la puissance d'une unité\r\n    const changePuissance = (index, value) => {\r\n        let newTab = [...tabUnites];\r\n        newTab[index].puissance = value;\r\n        setUnites(newTab);\r\n    }\r\n\r\n    //gère la fermeture de la fenêtre avec annulation\r\n    const handleAnnuler = () => {\r\n        props.handleClose();\r\n    }\r\n\r\n    //gère la fermeture de la fenêtre avec application\r\n    const handleAppliquer = () => {\r\n        supprimerIterationsSansUnite();\r\n\r\n        const newTab = [];\r\n        tabUnites.forEach( (i) =>{\r\n            newTab.push({\r\n                abr : unitesReference[i.index].abrev,\r\n                puissance : i.puissance,\r\n            })\r\n        })\r\n\r\n        props.setTabUnite(newTab);\r\n        props.handleClose();\r\n    }\r\n\r\n    //supprime les itérations de Sans Unité (abr : \" \") qui ne sont pas utiles\r\n    //si le tableau ne contient que des Sans unité, il n'en restera qu'un\r\n    const supprimerIterationsSansUnite = () => {\r\n        _.remove(tabUnites, function (o) {\r\n            return o.index === 0;\r\n        })\r\n\r\n        if (tabUnites.length === 0) {\r\n            tabUnites.push({ index: 0, puissance: 1 });\r\n        }\r\n    }\r\n\r\n    //affiche une partie d'unité\r\n    const partieUnite = (unite, index) => {\r\n        return (\r\n            <div className={classes.choixInput}>\r\n                <div className={classes.buttonGap}>\r\n                    {tabUnites.length > 1\r\n                        ?\r\n                        <IconButton className={classes.buttonDelete} size=\"small\" onClick={e => handleDeleteUnite(index)} >\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                        : null\r\n                    }\r\n                </div>\r\n\r\n                {/* Select de l'unité */}\r\n                <TextField select value={unite.index} onChange={e => handleChangeUnite(index, e)}>\r\n                    {unitesReference.map((elem, index) =>\r\n                        <MenuItem key={index} value={index} >\r\n                            {elem.nom}\r\n                        </MenuItem>)}\r\n                </TextField>\r\n\r\n                {/* affiche la modif de puissance que si n'est pas Sans unité */}\r\n                {unite.index !== 0 ?\r\n                    <>\r\n                        {/* modif puissance */}\r\n                        <TextField value={unite.puissance} className={classes.puissance}\r\n                            onChange={e => handleChangePuissance(index, e)}\r\n                            onBlur={e => handleBlurUnite(index)}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        ^\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }} />\r\n                    </>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open} //ouverture gérée dans ItemReponse\r\n            maxWidth={MAX_WIDTH}\r\n            fullWidth={false}\r\n        >\r\n            {actualiseOpen()}\r\n            <DialogTitle className={classes.alignementHorizontal}>\r\n                Choix de l'unité\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <div className={classes.alignementHorizontal}>\r\n                    {/* affiche un à un les différentes parties d'unités*/}\r\n                    {tabUnites.map((i, index) =>\r\n                        <div key={index}>\r\n                            {partieUnite(i, index)}\r\n\r\n                            {/* interserction avec des . entre les parties d'unité */}\r\n                            {/*index < tabUnites.length-1 ? <b>.</b> : null*/}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* boutons d'action dans la fenêtre */}\r\n                <div className={classes.alignementHorizontal}>\r\n\r\n                    {/* bouton ajout de partie d\"unité */}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleAjouterUnite}\r\n\r\n                        //disabled si on atteint la limite de partie d'unité (6)\r\n                        disabled={tabUnites.length >= NB_MAX_PARTIES_UNITE}\r\n                    >\r\n                        Ajouter Unite\r\n                    </Button>\r\n\r\n                    {/* bouton pour remettre à zéro cette unité en entière */}\r\n                    <IconButton size=\"small\" color=\"primary\" onClick={handleRemettreAZero}\r\n                        title=\"remettre à 0\">\r\n                        <LoopIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </DialogContent>\r\n\r\n            {/* boutons de fermeture de boite de dialogue */}\r\n            <DialogActions>\r\n\r\n                {/* bouton pour annuler la modification de l'unité */}\r\n                <Button onClick={handleAnnuler}>\r\n                    Annuler\r\n                </Button>\r\n\r\n                {/* bouton pour appliquer à toutes les réponses de la question cette même unité */}\r\n                {/*\r\n                <Button onClick={e=>props.handleClose(\"appliquer a tous\")} \r\n                    title=\"appliquer l'unité à toutes les réponses de la question\">\r\n                    Appliquer à tous\r\n                </Button>\r\n                */}\r\n\r\n                {/* bouton pour appliquer uniquement à cette réponse cette unité */}\r\n                <Button onClick={handleAppliquer}>\r\n                    Appliquer\r\n                </Button>\r\n\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useCallback } from 'react';\r\nimport { Typography, Slider, makeStyles } from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { handleChangeMargeErreur, selectMargeErreur } from '../../slice/EnoncesSlice';\r\n\r\nconst SliderBar = ({ indexQuestion, indexReponse }) => {\r\n\r\n\tconst useStyles = makeStyles(() => ({\r\n\t\tdivSlideBar: {\r\n\t\t\twidth: \"70%\",\r\n\t\t\tmargin: \"5% auto 0 auto\"\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst margeErreur = useSelector(selectMargeErreur(indexQuestion, indexReponse));\r\n\r\n\tconst handleClickAway = useCallback((value) => {\r\n\t\tdispatch(handleChangeMargeErreur({ indexQuestion: indexQuestion, indexReponse: indexReponse, marge: value }));\r\n\t}, [dispatch, indexQuestion, indexReponse]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.divSlideBar}>\r\n\t\t\t<Typography variant=\"caption\" gutterBottom>Marge d'erreur autorisée</Typography>\r\n\t\t\t<Slider\r\n\t\t\t\tdefaultValue={margeErreur}\r\n\t\t\t\tmarks={[{ value: 0, label: '0%' }, { value: 100, label: \"100%\" }]}\r\n\t\t\t\tstep={5}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={100}\r\n\t\t\t\tonChangeCommitted={(_, value) => handleClickAway(value)}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\taria-labelledby=\"discrete-slider-always\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default React.memo(SliderBar);","import React, { useCallback, useState } from \"react\";\r\nimport { Button, Input, makeStyles, MenuItem, Select } from \"@material-ui/core\";\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport { afficherUnites } from '../unite/UniteFunctions';\r\nimport ChoixUnite from '../unite/ChoixUnite';\r\nimport SlideBar from './SlideBarMarge';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { handleChangeCat, handleChangeForm, handleChangeUnite, selectReponse } from '../../slice/EnoncesSlice';\r\nimport { selectActualiseFormule, selectCategorieFormule } from \"../../slice/FormulesSlice\";\r\n\r\nconst Reponse = ({ indexReponse, indexQuestion }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divReponse: {\r\n            marginTop: 20,\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\r\n            gap: \"0 1%\",\r\n            border: \"solid 1px\",\r\n            borderColor: theme.palette.primary.light,\r\n            borderRadius: 3,\r\n            padding: \"2% 1% 2% 2%\"\r\n        },\r\n        select: {\r\n            width: 200,\r\n            maxHeight: \"38px !important\",\r\n            top: 26\r\n        },\r\n        divUniteMarge: {\r\n            height: 40,\r\n            position: \"relative\",\r\n            margin: \"auto\",\r\n            gridColumn: 3,\r\n            marginLeft: \"15%\"\r\n        },\r\n        affichageUnite: {\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            bottom: 10\r\n        },\r\n        divMarge: {\r\n            gridColumn: 4\r\n        },\r\n        buttonAjouterUnite: {\r\n            display: \"block\",\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        center: {\r\n            textAlign: \"center\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const actualise = useSelector(selectActualiseFormule);\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = useState(false);\r\n    const element = useSelector(selectReponse(indexQuestion, indexReponse));\r\n    const tabCatForm = useSelector(selectCategorieFormule);\r\n\r\n    const changeCat = useCallback((e) => {\r\n        dispatch(handleChangeCat({ idQuestion: indexQuestion, idReponse: indexReponse, value: e.target.value, formule1: tabCatForm[e.target.value].tabFormule[0].nomFormule }));\r\n    }, [dispatch, indexQuestion, indexReponse, tabCatForm]);\r\n\r\n    const changeForm = useCallback((e) => {\r\n        dispatch(handleChangeForm({ idQuestion: indexQuestion, idReponse: indexReponse, value: e.target.value }));\r\n    }, [dispatch, indexQuestion, indexReponse]);\r\n\r\n    return (\r\n        <div key={indexReponse} className={classes.divReponse}>\r\n            <Select className={classes.select} value={element.selectCat} onChange={e => changeCat(e)} input={<Input />}>\r\n                {!actualise ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{ margin: \"30px auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n                    : tabCatForm.map((item, index) => <MenuItem key={index} value={index}>{item.nom}</MenuItem>)}\r\n            </Select>\r\n            <Select className={classes.select} value={element.selectForm} onChange={e => changeForm(e)} input={<Input />}>\r\n                {tabCatForm[element.selectCat] === undefined ? null : tabCatForm[element.selectCat].tabFormule.map((item, index) => <MenuItem key={index} value={item.nomFormule}>{item.nomFormule}</MenuItem>)}\r\n            </Select>\r\n            <div className={classes.divUniteMarge}>\r\n                <Button variant=\"contained\" className={classes.buttonAjouterUnite} onClick={() => setOpen(true)}>Choisir les unités</Button>\r\n                <div className={classes.center}>{afficherUnites(element.unite)}</div>\r\n            </div>\r\n            <ChoixUnite open={open} handleClose={() => setOpen(false)} unite={element.unite} setTabUnite={e => dispatch(handleChangeUnite({ idQuestion: indexQuestion, idReponse: indexReponse, tabUnite: e }))} />\r\n            <div className={classes.divMarge}>\r\n                <SlideBar key={indexReponse} indexQuestion={indexQuestion} indexReponse={indexReponse} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Reponse);","import React, { useCallback, useState } from \"react\";\r\nimport { Button, makeStyles, Accordion, AccordionSummary, AccordionDetails, Fab } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Reponse from './ItemReponse';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectEnregistreFormule, selectPremiereFormule } from \"../../slice/FormulesSlice\";\r\nimport { addReponse, selectTabReponse, removeReponse, selectReponseLength } from '../../slice/EnoncesSlice';\r\n\r\nconst ListeReponses = ({ index }) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        divListeReponses: {\r\n            width: \"100%\",\r\n            marginTop: \"1%\"\r\n        },\r\n        buttonSupprimerReponse: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark,\r\n            },\r\n            \"&:disabled\": {\r\n                backgroundColor: theme.palette.secondary.main,\r\n            },\r\n            position: \"absolute\",\r\n            right: \"2.5%\",\r\n        },\r\n        accordionDetails: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-around\"\r\n        },\r\n        divReponse: {\r\n            marginTop: 20\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isEnregistre = useSelector(selectEnregistreFormule);\r\n    const tabReponse = useSelector(selectTabReponse(index))\r\n    const [expanded, setExpanded] = useState(true);\r\n    const tabReponseLength = useSelector(selectReponseLength(index));\r\n    const premierFormule = useSelector(selectPremiereFormule);\r\n    const { max_reponse } = window;\r\n\r\n    const add = useCallback(() => {\r\n        dispatch(addReponse({ id: index, formule1: premierFormule }));\r\n    }, [dispatch, index, premierFormule]);\r\n\r\n    const remove = useCallback((indexReponse) => {\r\n        dispatch(removeReponse({ indexQuestion: index, indexReponse: indexReponse }));\r\n    }, [dispatch, index]);\r\n\r\n    return (\r\n        <div className={classes.divListeReponses}>\r\n            <Accordion square expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>Réponses à la question {index + 1}</AccordionSummary>\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n                    <Button\r\n                        disabled={tabReponse.length >= max_reponse}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => add()}\r\n                    >\r\n                        Ajouter une réponse\r\n                        </Button>\r\n                    {!isEnregistre ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{ margin: \"30px auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n                        :\r\n                        Array(tabReponseLength).fill(0).map((_, indexReponse) => (\r\n                            <div className={classes.divReponse} key={indexReponse}>\r\n                                <Fab className={classes.buttonSupprimerReponse} size=\"small\" aria-label=\"delete\"\r\n                                    disabled={tabReponse.length === 1}\r\n                                    onClick={() => remove(indexReponse)}\r\n                                >\r\n                                    <DeleteIcon />\r\n                                </Fab>\r\n                                <Reponse key={indexReponse} indexReponse={indexReponse} indexQuestion={index} />\r\n                            </div>\r\n                        ))}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ListeReponses);\r\n","import React from 'react';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nconst MyEditor = ({ handleChange, value }) => {\r\n\r\n    return (\r\n        <div>\r\n            <SunEditor\r\n                onChange={handleChange}\r\n                defaultValue={value}\r\n                setOptions={{\r\n                    buttonList: [\r\n                        ['undo', 'redo'],\r\n                        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                        ['table', 'list'],\r\n                        ['removeFormat'],\r\n                        ['outdent', 'indent'],\r\n                        ['fullScreen']\r\n                    ]\r\n                }}\r\n                lang=\"fr\"\r\n                placeholder={value === \"\" ? null : \"Tapez votre énoncé ici...\"}\r\n                height=\"300\"\r\n                setDefaultStyle=\"background-color: lightgrey\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyEditor;","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectEnonce, selectEnregistreEnonce, setQuestions } from \"../../slice/EnoncesSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nconst EnregistrementEnonce = () => {\r\n\r\n    const isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const enonce = useSelector(selectEnonce);\r\n\r\n    return (\r\n        <Enregistre isEnregistre={isEnregistreEnonce} action={setQuestions({ idModele: idModele, enonce: enonce.enonceContenu, tabQuestions: enonce.question })} />\r\n    );\r\n}\r\n\r\nexport default React.memo(EnregistrementEnonce);","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Button, makeStyles, Fab, Typography } from \"@material-ui/core\";\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport QuestionEnonce from \"../../components/enonce/QuestionEnonce\";\r\nimport useConstructor from \"../../components/use/useContructor\";\r\nimport ListeReponses from \"../../components/enonce/ListeReponses\";\r\nimport SelectionModele from '../../components/SelectionModele';\r\nimport MyEditor from '../../components/enonce/EnTete';\r\nimport useUnload from '../../components/use/useUnload';\r\nimport EnregistrementEnonce from '../../components/enonce/EnregistrementEnonce';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\nimport { addQuestion, removeQuestion, handleChangeEnonce, handleChangeQuestion, selectActualiseEnonce, selectTabQuestionLength, selectEnregistreEnonce, getSujet, selectContenuEnonce } from \"../../slice/EnoncesSlice\";\r\nimport { getCategoriesFormules, selectEnregistreFormule, selectPremiereFormule, selectChangement } from \"../../slice/FormulesSlice\";\r\n\r\nexport default function Enonces() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        enonceSujet: {\r\n            width: \"70%\",\r\n            margin: \"auto\"\r\n        },\r\n        divQuestion: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            width: \"80%\",\r\n            margin: \"40px auto\",\r\n            padding: \"1% 2% 2%\"\r\n        },\r\n        divQuestionReponse: {\r\n            marginTop: 40,\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            flexWrap: \"wrap\",\r\n        },\r\n        buttonAddQuestion: {\r\n            display: \"block\",\r\n            margin: \"50px auto\"\r\n        },\r\n        fabDelete: {\r\n            float: \"right\",\r\n            marginLeft: 20,\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const actualiseEnonce = useSelector(selectActualiseEnonce);\r\n    const isEnregistreEnonce = useSelector(selectEnregistreEnonce);\r\n    const isEnregistreFormule = useSelector(selectEnregistreFormule);\r\n    const premierFormule = useSelector(selectPremiereFormule);\r\n    const tabQuestionLength = useSelector(selectTabQuestionLength);\r\n    const enTete = useSelector(selectContenuEnonce);\r\n    const changementFormule = useSelector(selectChangement);\r\n    const { max_question } = window;\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistreEnonce) {\r\n            if (idModele === null) {\r\n                setOpen(true);\r\n            }\r\n            if (!isEnregistreFormule) dispatch(getCategoriesFormules(idModele));\r\n            if (!isEnregistreEnonce) dispatch(getSujet(idModele));\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (changementFormule) {\r\n            dispatch(getCategoriesFormules(idModele));\r\n        }\r\n    }, [changementFormule, dispatch, idModele]);\r\n\r\n    useUnload(!isEnregistreEnonce);\r\n\r\n    const deleteQuestion = useCallback((index) => {\r\n        dispatch(removeQuestion(index));\r\n    }, [dispatch]);\r\n\r\n    const displayEnonce = () => {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h1\">énoncé</Typography>\r\n                <hr className={classes.hr} />\r\n                <div className={classes.enonceSujet}>\r\n                    <MyEditor value={enTete} handleChange={e => dispatch(handleChangeEnonce(e))} />\r\n                </div>\r\n                {Array(tabQuestionLength).fill(0).map((_, index) => (\r\n                    <div key={index} className={classes.divQuestion}>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <p style={{ fontSize: \"200%\", margin: \"auto 0\" }}>Question {index + 1}</p>\r\n                            <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\"\r\n                                disabled={tabQuestionLength === 1}\r\n                                onClick={() => deleteQuestion()}\r\n                            >\r\n                                <DeleteIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        <div className={classes.divQuestionReponse}>\r\n                            <QuestionEnonce index={index} handleChange={e => dispatch(handleChangeQuestion({ contenu: e, index: index }))} />\r\n                            <ListeReponses index={index} idModele={idModele} />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <Button\r\n                    disabled={tabQuestionLength >= max_question}\r\n                    className={classes.buttonAddQuestion}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => dispatch(addQuestion(premierFormule))}\r\n                >\r\n                    Ajouter une question\r\n                </Button>\r\n                <EnregistrementEnonce />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        idModele === null\r\n            ? <SelectionModele tard={false} setClose={() => setOpen(false)} open={open} />\r\n            : actualiseEnonce ? displayEnonce() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n    );\r\n}","import React, { useCallback } from 'react';\r\nimport { Typography, Slider, makeStyles } from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changePrecision, selectPrecision } from \"../../slice/VariablesAleatoiresSlice\";\r\n\r\nconst SlideBar = ({ index }) => {\r\n    const useStyles = makeStyles(() => ({\r\n        root: {\r\n            width: 120\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const precisionSlice = useSelector(selectPrecision(index));\r\n\r\n    const valueLabelFormat = (value) => {\r\n        if (value !== 0) {\r\n            return `10^${value}`;\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    const handleChange = useCallback((value) => {\r\n        dispatch(changePrecision({ index: index, precision: value }));\r\n    }, [dispatch, index]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Slider\r\n                defaultValue={precisionSlice}\r\n                min={-6}\r\n                step={1}\r\n                max={6}\r\n                getAriaValueText={valueLabelFormat}\r\n                valueLabelFormat={valueLabelFormat}\r\n                onChangeCommitted={(_, value) => handleChange(value)}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"non-linear-slider\"\r\n            />\r\n            <Typography gutterBottom>Précision</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(SlideBar);","import React, { useCallback } from 'react';\r\n\r\nimport { Fab, Typography, makeStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport DelayInput from '../InputAwait';\r\nimport SlideBar from './SlideBarVariable';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeNom, changeMax, changeMin, changeModif, selectElement, removeVariable } from \"../../slice/VariablesAleatoiresSlice\";\r\n\r\nconst ItemVariable = ({ index, length, onRemove }) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        typo: {\r\n            marginTop: 8\r\n        },\r\n        containerVariables: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"0.25fr 1fr 0.10fr 0.5fr 0.5fr 0.5fr 0.25fr\",\r\n            gridTemplateRows: \"1fr\",\r\n            gap: \"0px 30px\",\r\n            margin: \"auto\",\r\n            width: \"90%\",\r\n            marginTop: \"3%\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                gap: \"0px 12px\",\r\n                width: \"95%\",\r\n                marginTop: \"5%\"\r\n            }\r\n        },\r\n        center: {\r\n            margin: \"auto\",\r\n            display: \"block\",\r\n        },\r\n        fabDelete: {\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            },\r\n            color: \"white\"\r\n        },\r\n        fabSave: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fabModif: {\r\n            backgroundColor: theme.palette.primary.light\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const item = useSelector(selectElement(index));\r\n\r\n    const remove = useCallback(() => {\r\n        dispatch(removeVariable(index));\r\n        onRemove();\r\n    }, [dispatch, index, onRemove]);\r\n\r\n    const change = useCallback(() => dispatch(changeModif(index)), [dispatch, index]);\r\n\r\n    const displayModif = () => {\r\n        return (\r\n            <>\r\n                <Fab className={classes.fabSave} size=\"small\" aria-label=\"add\"\r\n                    disabled={item.nom === \"\" || parseFloat(item.min) > parseFloat(item.max)}\r\n                    onClick={() => change()}\r\n                >\r\n                    <SaveIcon />\r\n                </Fab>\r\n                <DelayInput\r\n                    label=\"Nom formule\"\r\n                    delay={300}\r\n                    value={item.nom}\r\n                    onChange={e => dispatch(changeNom({ index: index, event: e }))}\r\n                />\r\n                <ArrowRightIcon fontSize=\"large\" />\r\n                <DelayInput\r\n                    typeNumber={true}\r\n                    label=\"Min\"\r\n                    delayTimeout={300}\r\n                    value={item.min}\r\n                    onChange={e => dispatch(changeMin({ index: index, event: e }))}\r\n                />\r\n                <DelayInput\r\n                    typeNumber={true}\r\n                    label=\"Max\"\r\n                    delayTimeout={300}\r\n                    value={item.max}\r\n                    onChange={e => dispatch(changeMax({ index: index, event: e }))}\r\n                />\r\n                <SlideBar index={index} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const displayTxt = () => {\r\n        return (\r\n            <>\r\n                <Fab className={classes.fabModif}\r\n                    size=\"small\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => change()}\r\n                >\r\n                    <CreateIcon />\r\n                </Fab>\r\n                <Typography className={classes.typo}>{item.nom}</Typography>\r\n                <ArrowRightIcon fontSize=\"large\" />\r\n                <Typography align=\"center\">Min <br />{item.min}</Typography>\r\n                <Typography align=\"center\">Max <br />{item.max} </Typography>\r\n                <Typography align=\"center\">Précision <br />10^{item.precision}</Typography>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerVariables}>\r\n            {item.modif ? displayModif() : displayTxt()}\r\n            <Fab className={classes.fabDelete}\r\n                disabled={length <= 1}\r\n                size=\"small\"\r\n                aria-label=\"add\"\r\n                onClick={() => remove()}\r\n            >\r\n                <DeleteIcon className={classes.center} />\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ItemVariable);","import React from 'react';\r\n\r\nimport Enregistre from '../Enregistrement';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectVariablesAleatoires, selectEnregistreVariable, setVariables } from \"../../slice/VariablesAleatoiresSlice\";\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nconst Enregistrement = () => {\r\n\r\n     const tableauVariables = useSelector(selectVariablesAleatoires);\r\n     const idModele = useSelector(selectIdModeleSelectionne);\r\n     const isEnregistre = useSelector(selectEnregistreVariable);\r\n\r\n     return (\r\n          <Enregistre isEnregistre={isEnregistre} action={setVariables({ tab: tableauVariables, idModele: idModele })} disabled={tableauVariables.some(variables => variables.modif)} />\r\n     );\r\n}\r\n\r\nexport default React.memo(Enregistrement);","import React, { useState } from 'react';\r\nimport { Fab, makeStyles, Typography } from '@material-ui/core';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport ItemVariablesAleatoire from '../../components/variable/ItemVariableAleatoire';\r\nimport useConstructor from '../../components/use/useContructor';\r\nimport PopUp from '../../components/PopUp';\r\nimport SelectionModele from '../../components/SelectionModele';\r\nimport EnregistrementVariableAleatoires from '../../components/variable/EnregistrementVariableAleatoires';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectActualise, selectEnregistreVariable, addVariable, undoVariable, getAllVariables, selectTabLength } from \"../../slice/VariablesAleatoiresSlice\"\r\nimport { selectIdModeleSelectionne } from \"../../slice/ModeleSlice\";\r\n\r\nexport default function VariablesAleatoires() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            paddingBottom: \"2%\"\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        fab: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divItemvariable: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"2% 3% 4% 3%\",\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: \"90%\"\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    //gerer pop up pour le undo lors de suppression\r\n    const [openPopUpUndo, setOpenPopUpUndo] = useState(false);\r\n\r\n    //gere la pop up de selection de modelee\r\n    const [openModele, setOpenModele] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const lengthTab = useSelector(selectTabLength);\r\n    //savoir si les variables sont récupérées de la BD\r\n    const isEnregistre = useSelector(selectEnregistreVariable);\r\n    //savoir si la recupération les données sont conectées à la BD\r\n    const isActualise = useSelector(selectActualise)\r\n    const idModele = useSelector(selectIdModeleSelectionne);\r\n    const { max_variable } = window;\r\n\r\n\r\n    useConstructor(() => {\r\n        //si pas encore récupérées de la BD \r\n        if (!isEnregistre) {\r\n            idModele === null ? setOpenModele(true) : dispatch(getAllVariables(idModele));\r\n        }\r\n    });\r\n\r\n    const undo = () => {\r\n        dispatch(undoVariable());\r\n        setOpenPopUpUndo(false);\r\n    }\r\n\r\n    const displayVariable = () => {\r\n        return (\r\n            <div className={classes.root}>\r\n                <Typography variant=\"h1\">Variables aléatoires</Typography>\r\n                <hr className={classes.hr} />\r\n                <Fab className={classes.fab}\r\n                    disabled={lengthTab >= max_variable}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={() => dispatch(addVariable())}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n                <div className={classes.divItemvariable}>\r\n                    {/* EVITE DE FAIRE PASSER LE TABLEAU DE VARIABLE ET DE MODIFIER TOUTES LES VARIABLES A CHAQUE CHANGEMENT D'UNE */}\r\n                    {Array(lengthTab).fill(0).map((_, index) => (\r\n                        <ItemVariablesAleatoire onRemove={() => setOpenPopUpUndo(true)} length={lengthTab} key={index} index={index} />\r\n                    ))}\r\n                    <PopUp\r\n                        message=\"Variable supprimée\"\r\n                        actionName=\"RETOUR\"\r\n                        action={() => undo()}\r\n                        open={openPopUpUndo}\r\n                        handleClose={() => setOpenPopUpUndo(false)}\r\n                        pos=\"right\"\r\n                    />\r\n                </div>\r\n                <EnregistrementVariableAleatoires />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        idModele === null\r\n            ? <SelectionModele tard={false} setClose={() => setOpenModele(false)} open={openModele} />\r\n            : isActualise ? displayVariable() : <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport { Table, TableContainer, TableHead, TableRow, Paper, TableCell, TableBody, Typography, Collapse, Box, IconButton, DialogActions, Button, TextField, makeStyles } from '@material-ui/core';\r\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport { afficherUnites } from '../unite/UniteFunctions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeReponseJuste, selectEssaisWithID, changeCommentaire, changeNote, setCorrigeTrue, selectUneQuestionJuste, setAvisApplication } from '../../slice/ConsulterSlice';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    boxReponses: {\r\n        paddingBottom: 0,\r\n        paddingTop: 0,\r\n        backgroundColor: \"#f2f2f2\"\r\n    },\r\n    commentaire: {\r\n        width: \"100%\"\r\n    },\r\n    noteTextField: {\r\n        width: '30px'\r\n    },\r\n    noteInput: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nexport default function EssaiEtudiant(props) {\r\n    const essai = useSelector(selectEssaisWithID(props.indexEssai));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [actualise, setActu] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            if (!actualise) {\r\n                dispatch(setAvisApplication());\r\n                setActu(true);\r\n            }\r\n        }\r\n\r\n    }, [actualise, dispatch, props.open]);\r\n\r\n\r\n    const handleClose = () => {\r\n        setActu(false);\r\n        props.setOpen(false);\r\n    }\r\n\r\n    const appliquerCorrection = () => {\r\n        dispatch(setCorrigeTrue(props.indexEssai));\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        essai === undefined ?\r\n            null :\r\n            <Dialog\r\n                open={props.open}\r\n                maxWidth=\"md\"\r\n                fullWidth={true}\r\n                onClose={handleClose}>\r\n                <DialogTitle>\r\n                    Essai du {moment(essai.dateEssai).format(\"DD/MM/YYYY\")}\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" />\r\n                                    <TableCell align=\"center\">Numéro Question</TableCell>\r\n                                    <TableCell align=\"center\">Réponses Justes</TableCell>\r\n                                    <TableCell align=\"center\">Réponses Attendues</TableCell>\r\n                                    <TableCell align=\"center\">Question Juste?</TableCell>\r\n                                    <TableCell align=\"center\"\r\n                                        title=\"Attention, cette note est à titre indicatif et ne concerne que cet essai\"\r\n                                    >Votre Note</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {essai.tabQuestions.map((item, index) => {\r\n                                    return (\r\n                                        <Question question={item} indexQuestion={index} indexEssai={props.indexEssai} />\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={appliquerCorrection}>Appliquer la correction</Button>\r\n                    <Button onClick={handleClose}>Fermer</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n    )\r\n}\r\n\r\nconst IconeJuste = (props) => {\r\n    return (\r\n        props.juste\r\n            ?\r\n            <CheckIcon />\r\n            :\r\n            <ClearIcon />\r\n    )\r\n}\r\n\r\nconst Question = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const questionCorrigee = useSelector(selectUneQuestionJuste(props.question.num));\r\n\r\n    //s'occupe de changer le bouléen disant qu'une réponse est juste ou non d'après le prof\r\n    const handleClickJuste = (indexQ, indexR) => {\r\n        dispatch(changeReponseJuste({\r\n            indexE: props.indexEssai,\r\n            indexQ: indexQ,\r\n            indexR: indexR\r\n        }));\r\n    }\r\n\r\n    //s'occupe de changer le commentaire du prof sur une question\r\n    const handleChangeCommentaire = (event) => {\r\n        dispatch(changeCommentaire({\r\n            indexE: props.indexEssai,\r\n            indexQ: props.indexQuestion,\r\n            commentaire: event.target.value\r\n        }));\r\n    }\r\n\r\n    //s'occupe de changer la note\r\n    const handleChangeNote = (event) => {\r\n        dispatch(changeNote({\r\n            indexE: props.indexEssai,\r\n            indexQ: props.indexQuestion,\r\n            note: event.target.value\r\n        }));\r\n    }\r\n\r\n    //s'occupe de donner le nombre de réponses correctes dans cette question\r\n    const nbReponsesJuste = () => {\r\n        let nb = 0\r\n        props.question.tabReponses.forEach(reponse => {\r\n            if (reponse.justeProf) {\r\n                nb++\r\n            }\r\n        });\r\n        return nb;\r\n    }\r\n\r\n    //la flècle pour afficher plus ou moins d'information sur la question\r\n    const collapseArrow = () => {\r\n        return (\r\n            <IconButton onClick={() => setOpen(!open)}>\r\n                {\r\n                    open\r\n                        ?\r\n                        <KeyboardArrowUpIcon />\r\n                        :\r\n                        <KeyboardArrowDownIcon />\r\n                }\r\n            </IconButton>\r\n        );\r\n    }\r\n\r\n    const questionJuste = () => {\r\n        return (\r\n            <IconeJuste juste={\r\n                props.question.tabReponses.length === questionCorrigee.tabReponses.length &&\r\n                nbReponsesJuste() === questionCorrigee.tabReponses.length} />\r\n        );\r\n    }\r\n\r\n    //bouton du prof pour dire si une réponse est juste ou non\r\n    //paramètres : index de la question, index de la reponse, bool\r\n    const boutonJustePourProf = (indexQ, indexR, juste) => {\r\n        return (\r\n            <IconButton onClick={e => handleClickJuste(indexQ, indexR)}>\r\n                <IconeJuste juste={juste} />\r\n            </IconButton>\r\n        );\r\n    }\r\n\r\n    //affiche la zone où le professeur peut saisir son commentaire\r\n    const commentaireProf = () => {\r\n        return (\r\n            <>\r\n                <Typography variant=\"h6\" padding={5}>Vos commentaires sur ce travail :</Typography>\r\n                <TextField value={props.question.commentProf} onChange={handleChangeCommentaire}\r\n                    multiline rows={4} variant=\"outlined\" placeholder=\"Écrivez vos commentaires\"\r\n                    className={classes.commentaire} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const note = () => {\r\n        return (\r\n            <TextField className={classes.noteTextField} align=\"center\"\r\n                onChange={e => handleChangeNote(e)}\r\n                value={props.question.note}\r\n                InputProps={{\r\n                    className: classes.noteInput\r\n                }} \r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableRow>\r\n                {/* On affiche la fleche pour avoir plus/moins d'information */}\r\n                <TableCell align=\"center\">{collapseArrow()}</TableCell>\r\n                {/* Numéro de la question */}\r\n                <TableCell align=\"center\">{props.indexQuestion + 1}</TableCell>\r\n                {/* nombre de réponses justes dans la question */}\r\n                <TableCell align=\"center\">{nbReponsesJuste()}</TableCell>\r\n                {/* nombre de réponses attendues */}\r\n                <TableCell align=\"center\">{questionCorrigee.tabReponses.length}</TableCell>\r\n                {/* voit si la question est juste */}\r\n                <TableCell align=\"center\">{questionJuste()}</TableCell>\r\n                {/* note */}\r\n                <TableCell align=\"center\">{note()}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell className={classes.boxReponses} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom >Contenu de la question</Typography>\r\n                            {ReactHtmlParser(questionCorrigee.contenu)}\r\n                            <Typography variant=\"h6\" gutterBottom >Reponses</Typography>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">\r\n                                            Valeur donnée\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            Unité\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            Valeur juste la plus proche\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            Unité juste\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            Conseil de l'application\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            Votre avis\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {props.question.tabReponses.map((reponse, indexReponse) =>\r\n                                        <TableRow>\r\n                                            {/* Valeur donnée par l'étudiant */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                {reponse.value}\r\n                                            </TableCell>\r\n                                            {/* Unité donnée par l'étudiant */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                {afficherUnites(reponse.unite)}\r\n                                            </TableCell>\r\n                                            {/* valeur de la correction avec la valeur juste */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                {reponse.valueCorrection}\r\n                                            </TableCell>\r\n                                            {/* Unité donnée par l'application */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                {reponse.uniteCorrection}\r\n                                            </TableCell>\r\n                                            {/* l'avis de l'application pour savoir si la réponse est juste */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                <IconeJuste juste={reponse.justeApp} />\r\n                                            </TableCell>\r\n                                            {/* Réponse juste où non */}\r\n                                            <TableCell align=\"center\" padding='none'>\r\n                                                {boutonJustePourProf(props.indexQuestion, indexReponse, reponse.justeProf)}\r\n                                            </TableCell>\r\n                                        </TableRow>)\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                            {\r\n                                props.question.justif !== \"\" ?\r\n                                    <>\r\n                                        <Typography variant=\"h6\" padding={5}>Justification de l'étudiant :</Typography>\r\n                                        <p>{props.question.justif}</p>\r\n                                    </>\r\n                                    :\r\n                                    <Typography variant=\"h6\">Pas de justification de l'étudiant</Typography>\r\n                            }\r\n\r\n                            {commentaireProf()}\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Typography, TextField, Button, makeStyles } from '@material-ui/core';\r\n\r\nexport default function Message(props) {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        messageField: {\r\n            width: \"100%\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    //s'occupe du changement du message\r\n    const handleChangeMessage = (event) => {\r\n        props.handleChangeMessage(event.target.value);\r\n    }\r\n\r\n    //ferme le dialog\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    //envoie le message\r\n    const handleSend = () => {\r\n        props.handleSend();\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            maxWidth=\"md\"\r\n            fullWidth={true}\r\n            onClose={handleClose}\r\n            rows={4}\r\n        >\r\n            <DialogTitle>\r\n                <Typography variant=\"h6\">Message adressé à {props.destinataire}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField className={classes.messageField} autoFocus multiline rows={4}\r\n                    variant=\"outlined\" placeholder=\"Saisissez votre message\"\r\n                    onChange={e => handleChangeMessage(e)} value={props.message} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>Annuler</Button>\r\n                <Button onClick={handleSend}>Envoyer</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { ListItemText, ListItem, List, Divider, Button, ListItemAvatar, Avatar, makeStyles } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectEssais, selectMessage, selectReponsesJustes, selectEtudiantConsulter, changeMessage, getReponsesCorDB, getEssaisDB } from '../../slice/ConsulterSlice';\r\n\r\nimport EssaiEtudiant from '../../components/correction/EssaiEtudiant';\r\nimport Message from '../../components/correction/Message';\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nexport default function Consulter() {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        messageBouton: {\r\n            float: \"right\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //le tableau d'essai\r\n    const tabEssais = useSelector(selectEssais);\r\n\r\n    //tableau des réponses qui sont justes\r\n    const tabReponsesJustes = useSelector(selectReponsesJustes);\r\n\r\n    //message qui est à envoyer\r\n    const message = useSelector(selectMessage);\r\n\r\n    //index de l'essai sur lequel les détails du dialogue EssaiEtudiant\r\n    const [indexEssaiDialog, setIndexEssai] = useState(0);\r\n\r\n    //booléen pour l'ouvertire des détails de l'essai\r\n    const [openDetails, setOpenDetails] = useState(false);\r\n\r\n    //booléen pour l'ouverture du message\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n\r\n    //numéro de l'étudiant\r\n    const etudiant = useSelector(selectEtudiantConsulter);\r\n\r\n    useConstructor(() => {\r\n        dispatch(getReponsesCorDB({\r\n            idPromo: etudiant.id_promo,\r\n            idEtudiant: etudiant.id_etudiant\r\n        }));\r\n        dispatch(getEssaisDB({\r\n            idEtudiant: etudiant.id_etudiant\r\n        }));\r\n    });\r\n\r\n    //affiche un dialog lors d'un clic sur un essai pour avoir plus de détail\r\n    //Paramètres : l'index de l'essai\r\n    const handleClickDetails = (index) => {\r\n        setIndexEssai(index);\r\n        setOpenDetails(true);\r\n    }\r\n\r\n    //s'occupe de l'ouverture de l'éditeur du message\r\n    const hancleClickMessage = () => {\r\n        setOpenMessage(true);\r\n    }\r\n\r\n    //s'occupe du changement du message au fur et à mesure de sa saisie\r\n    const handleChangeMessage = (msg) => {\r\n        dispatch(changeMessage(msg));\r\n    }\r\n\r\n    //PAS ENCORE FAIT LE LIEN A L'API\r\n    //envoie le message à l'étudiant\r\n    const handleSend = () => {\r\n        //console.log(\"lien avec l'api pour envoyer pas encore fait\")\r\n        //console.log(message)\r\n    }\r\n\r\n    //le nombre de question juste dans un essai\r\n    //Paramètre : index de l'essai\r\n    const nbQuestionsJustes = (index) => {\r\n        //le nombre de questions justes\r\n        let nb = 0;\r\n        //on analyse chaque question\r\n        tabEssais[index].tabQuestions.forEach(question => {\r\n            //on regarde si il y a le bon nombre de réponses justes\r\n            let indexQ = _.findIndex(tabReponsesJustes, function (o) {\r\n                return o.num === question.num;\r\n            });\r\n\r\n            if (indexQ !== -1){\r\n\r\n                let questionJuste = question.tabReponses.length === tabReponsesJustes[indexQ].tabReponses.length;\r\n                let i = 0;\r\n                //on regarde si toutes les réponses sont justes\r\n                while (questionJuste && i < question.tabReponses.length) {\r\n                    questionJuste = question.tabReponses[i].justeProf;\r\n                    i++;\r\n                }\r\n                if (questionJuste) {\r\n                    nb++;\r\n                }\r\n                \r\n            }else{\r\n                console.error(\"Problème pour le calcul du nombre de réponses justes 'Consulter Etudiant'\")\r\n            }\r\n\r\n        })\r\n        return nb;\r\n    }\r\n\r\n    //retourne le nombre de questions\r\n    const nbQuestions = () => {\r\n        return tabReponsesJustes.length;\r\n    }\r\n\r\n    //s'occupe de l'icone qui indique si l'essai a été revu par le professeur\r\n    const corrigeIcon = (revu) => {\r\n        if (revu) {\r\n            return (\r\n                <Avatar color=\"primary\">\r\n                    <CheckIcon />\r\n                </Avatar>\r\n            )\r\n        } else {\r\n            return (\r\n                <Avatar color=\"error\">\r\n                    <CloseIcon />\r\n                </Avatar>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        //on redirige vers la page de correction si il n'y a pas d'id étudiant donné\r\n        etudiant.id_etudiant === undefined\r\n            ? <Redirect to=\"/prof/gestion-correction\" />\r\n            : <div>\r\n                <Button className={classes.messageBouton} variant=\"contained\" color=\"primary\" onClick={hancleClickMessage}>\r\n                    <SendIcon />Envoyer un message à l'étudiant\r\n                    </Button>\r\n                <h1>\r\n                    Etudiant : {etudiant.prenom + ' ' + etudiant.nom}\r\n                </h1>\r\n\r\n                {tabEssais === undefined || tabReponsesJustes === undefined \r\n                    ? null \r\n                    : <>\r\n                        <List>\r\n                            <Divider />\r\n                            {tabEssais.map((item, index) => (\r\n                                <>\r\n                                    <ListItem button onClick={e => handleClickDetails(index)}>\r\n                                        <ListItemText\r\n                                            primary={\"Essai du \" + moment(item.dateEssai).format(\"DD/MM/YYYY\")}\r\n                                            secondary={\"Questions justes : \" + nbQuestionsJustes(index)\r\n                                                + \"/\" + nbQuestions()} />\r\n                                        <ListItemAvatar>\r\n                                            {corrigeIcon(item.corrige)}\r\n                                        </ListItemAvatar>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                        </List>\r\n                        <EssaiEtudiant indexEssai={indexEssaiDialog} open={openDetails} setOpen={setOpenDetails} />\r\n                    </>\r\n                }\r\n\r\n                <Message open={openMessage} destinataire={etudiant.prenom + \" \" + etudiant.nom} setOpen={setOpenMessage}\r\n                    message={message} handleChangeMessage={handleChangeMessage} handleSend={handleSend} />\r\n\r\n            </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nimport { Dialog, Button, DialogTitle, DialogContent, DialogActions, DialogContentText, Select, InputLabel, Input, MenuItem, FormControl } from '@material-ui/core';\r\n\r\nimport PopUp from '../PopUp';\r\n\r\nimport { selectModele } from \"../../slice/ModeleSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { attributionSujetAPI } from '../../utils/api';\r\n\r\nexport default function DialogAssociationModele({ open, setClose, selectPromo }) {\r\n\r\n    const modele = useSelector(selectModele);\r\n\r\n    const [openPopUpYes, setOpenPopUpYes] = useState(false);\r\n    const [openPopUpNo, setOpenPopUpNo] = useState(false);\r\n    const [selectionModele, setSelectionModele] = useState(\"\");\r\n\r\n    const envoieAttribution = () => {\r\n        attributionSujetAPI(selectPromo, selectionModele).then(() => {\r\n            setOpenPopUpYes(true);\r\n        }).catch(() => {\r\n            setOpenPopUpNo(true);\r\n        });\r\n        setSelectionModele(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={() => setClose()}>\r\n                <DialogTitle>Association à un modèle</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Associer une promotion à un modéle (empechera par la suite de modifier le modèle) ?</DialogContentText>\r\n                    <FormControl style={{ width: 200 }}>\r\n                        <InputLabel>Modèle selectionné</InputLabel>\r\n                        <Select value={selectionModele} onChange={e => setSelectionModele(e.target.value)} input={<Input />}>\r\n                            {modele.tabName.map((element, index) => (\r\n                                <MenuItem key={index} value={element.index}>{element.nom}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setClose()} color=\"primary\">Abandonner</Button>\r\n                    <Button disabled={selectionModele === \"\"} onClick={() => {\r\n                        envoieAttribution();\r\n                        setClose();\r\n                    }} color=\"primary\" autoFocus>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <PopUp severity=\"success\" message=\"Association réussie\" open={openPopUpYes} handleClose={() => setOpenPopUpYes(false)} />\r\n            <PopUp severity=\"error\" message=\"Association échouée\" open={openPopUpNo} handleClose={() => setOpenPopUpNo(false)} />\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Dialog, Button, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@material-ui/core';\r\nimport { CSVDownload  } from \"react-csv\";\r\n\r\nimport PopUp from '../PopUp';\r\nimport DropFile from '../DropFile';\r\n\r\nimport { etudiantNewAPI } from '../../utils/api';\r\n\r\nexport default function AjoutListeEtu({ open, setClose, selectPromo }) {\r\n\r\n    const [excel, setExcel] = useState(\"\");\r\n    const [csvData, setCsvData] = useState([]);\r\n    const [openPopUpYes, setOpenPopUpYes] = useState(false);\r\n    const [openPopUpNo, setOpenPopUpNo] = useState(false);\r\n\r\n    const envoieExcel = () => {\r\n        const data = new FormData();\r\n        data.append('fileUploaded', excel);\r\n        etudiantNewAPI(selectPromo, data).then(response => {                      \r\n            let tab = [];\r\n            response.data.forEach(elem => {\r\n                tab.push({\"Nom\" : elem.nom, \"Prenom\" : elem.prenom, \"Pseudo\" : elem.username, \"Mot de passe\" : elem.pwd});\r\n            })\r\n            setCsvData(tab);\r\n            setClose();\r\n            setOpenPopUpYes(true);\r\n        }).catch(err => {\r\n            setOpenPopUpNo(true);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {csvData.length > 0 ? <CSVDownload data={csvData} separator={\";\"}></CSVDownload> : null}\r\n        <Dialog open={open} onClose={() => setClose()}>\r\n            <DialogTitle>Charger une promotion</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>Charger la liste excel de vos étudiants </DialogContentText>\r\n                <DropFile typeFile='.xlsx' compressImage={false} changeFile={e => setExcel(e)} message=\"Charger la liste des étudiants de la promotion\" />\r\n                <PopUp severity=\"success\" message=\"Etudiants ajoutés à la promotion\" open={openPopUpYes} handleClose={() => setOpenPopUpYes(false)} />\r\n                <PopUp severity=\"error\" message=\"L'ajout de la promotion a échoué\" open={openPopUpNo} handleClose={() => setOpenPopUpNo(false)} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => setClose()} color=\"primary\">Abandonner</Button>\r\n                <Button disabled={excel === \"\"} onClick={() => envoieExcel()} color=\"primary\" autoFocus>Charger</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport _ from \"lodash\";\r\n\r\nimport { Button, Toolbar, Typography, Tooltip, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { selectEtudiants } from '../../slice/PromoSlice';\r\n\r\nexport default function StickyHeadTable() {\r\n\r\n\tconst [page, setPage] = useState(0);\r\n\tconst [filtre, setFiltre] = useState(false);\r\n\tconst tabEtudiants = useSelector(selectEtudiants);\r\n\tconst rowsPerPage = 10;\r\n\r\n\tconst columns = [\r\n\t\t{ id: 'nom', label: 'Nom', minWidth: 170 },\r\n\t\t{ id: 'prenom', label: 'Prénom', minWidth: 170 },\r\n\t\t{ id: 'mdp', label: 'Mot de passe', minWidth: 170, align: 'right' },\r\n\t\t{ id: 'sujet', label: 'Sujet n°', minWidth: 170, align: 'right' },\r\n\t\t{ id: 'modele', label: \"Modèle 3D\", minWidth: 170, align: 'right' },\r\n\t];\r\n\r\n\t//gère le changement de page\r\n\tconst handleChangePage = (_event, newPage) => {\r\n\t\tsetPage(newPage);\r\n\t};\r\n\r\n\tconst displayColumn = (column, row) => {\r\n\t\tif (column.id === 'mdp') {\r\n\t\t\treturn (\r\n\t\t\t\t<Button variant=\"outlined\" color=\"primary\">\r\n\t\t\t\t\tRéinitialiser mot de passe\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t} else if (column.id === 'modele') {\r\n\t\t\tif (row.id !== null) {\r\n\t\t\t\tlet indexEtu = _.findIndex(tabEtudiants, (o) => {return o.id === row.id});\r\n\r\n\t\t\t\tif (indexEtu === -1){\r\n\t\t\t\t\treturn null\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (tabEtudiants[indexEtu].image1 && tabEtudiants[indexEtu].image2 ){\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Button startIcon={<CheckIcon />} variant=\"outlined\" color={\"primary\"}>\r\n\t\t\t\t\t\t\tAjouter les modèles 3D pour ce sujet\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Button startIcon={<CloseIcon />} variant=\"outlined\" color={\"default\"}>\r\n\t\t\t\t\t\t\tAjouter les modèles 3D pour ce sujet\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn (row[column.id]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst EnhancedTableToolbar = () => {\r\n\t\treturn (\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Typography style={{ width: \"98%\" }} variant=\"h6\" id=\"tableTitle\" component=\"div\">Promotion</Typography>\r\n\t\t\t\t<Tooltip title=\"filtrer les modèles déja ajoutés\">\r\n\t\t\t\t\t<IconButton onClick={() => setFiltre(!filtre)} aria-label=\"filter list\">\r\n\t\t\t\t\t\t<FilterListIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Toolbar>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<EnhancedTableToolbar />\r\n\t\t\t<TableContainer >\r\n\t\t\t\t<Table stickyHeader aria-label=\"sticky table\">\r\n\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n\t\t\t\t\t\t\t\t\t{column.label}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t{/* affiche les lignes de row une par une dans le tableau */}\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{/* affiche les lignes 10 par 10 */}\r\n\t\t\t\t\t\t{tabEtudiants.filter(elem => filtre ? elem.id === 87 : true).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow hover tabIndex={-1} key={row.nom}>\r\n\t\t\t\t\t\t\t\t\t{/* affiche les infos pour chaque colonne d'élément de rows */}\r\n\t\t\t\t\t\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align}>\r\n\t\t\t\t\t\t\t\t\t\t\t{displayColumn(column, row)}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</TableBody>\r\n\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\r\n\t\t\t<TablePagination\r\n\t\t\t\trowsPerPageOptions={[]}\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tcount={tabEtudiants.length}\r\n\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\tpage={page}\r\n\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t/>\r\n\t\t</Paper>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { TextField, Button, Select, MenuItem, Input, InputLabel, FormControl, makeStyles, Fab, Typography } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\r\n\r\nimport AssociationModele from '../../components/promo/DialogAssociationModele';\r\nimport AjoutListeEtu from '../../components/promo/AjoutListeEtu';\r\nimport Table from '../../components/promo/TableEtudiant';\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllPromo, selectPromo, selectEnregistrePromo, addPromo, removePromo, getEtudiantsPromo } from \"../../slice/PromoSlice\";\r\nimport { desatributionSujetAPI } from \"../../utils/api\";\r\nimport PopUp from '../../components/PopUp';\r\n\r\nexport default function Promo() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        mapDisplayEtu: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\"\r\n        },\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        divNomPromo: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: \"20%\",\r\n            margin: \"3% auto 0 auto\"\r\n        },\r\n        button: {\r\n            display: \"block\",\r\n            margin: \"20px auto\"\r\n        },\r\n        divPromo: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"1% 0.5%\",\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n        },\r\n        typo: {\r\n            textAlign: \"center\"\r\n        },\r\n        form: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginBottom: 20\r\n        },\r\n        formControl: {\r\n            display: \"block\",\r\n            margin: \"30px auto\",\r\n            width: \"100%\"\r\n        },\r\n        divSelectPromo: {\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr\",\r\n            margin: \"auto\",\r\n            width: \"18%\",\r\n            gridGap: 20\r\n        },\r\n        labelSelectPromo: {\r\n            position: \"relative\"\r\n        },\r\n        selectPromo: {\r\n            width: 200,\r\n            marginTop: \"0 !important\"\r\n        },\r\n        menuItem: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        fabDelete: {\r\n            color: \"white\",\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [nouvellePromo, setNouvellePromo] = useState([]);\r\n    const [select, setSelect] = useState(\"\");\r\n    const [assoModele, setAssoModele] = useState(false);\r\n    const [listEtu, setListEtu] = useState(false);\r\n    const [popUpAssoYes, setPopUpAssoYes] = useState(false);\r\n    const isEnregistre = useSelector(selectEnregistrePromo);\r\n    const tabPromo = useSelector(selectPromo);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) dispatch(getAllPromo());\r\n    });\r\n\r\n    const ajouterPromo = () => {\r\n        dispatch(addPromo(nouvellePromo)).then(() => dispatch(getAllPromo()));\r\n        setNouvellePromo(\"\");\r\n    }\r\n\r\n    const remove = () => {\r\n        dispatch(removePromo(select)).then(() => dispatch(getAllPromo()));\r\n        setSelect(\"\");\r\n    }\r\n\r\n    const changePromo = (e) => {\r\n        setSelect(e.target.value);\r\n        if (e.target.value !== undefined) dispatch(getEtudiantsPromo(e.target.value.idPromo));\r\n    }\r\n\r\n    const suppAsso = () => {\r\n        desatributionSujetAPI(select.idPromo).then((data) => {\r\n            setPopUpAssoYes(true);\r\n        }).catch();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h1\">PROMOTION</Typography>\r\n            <hr className={classes.hr} />\r\n            <div className={classes.divPromo}>\r\n                <form className={classes.form}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <div className={classes.divSelectPromo}>\r\n                            <div>\r\n                                <InputLabel className={classes.labelSelectPromo}>Promotion selectionnée</InputLabel>\r\n                                <Select className={classes.selectPromo} value={select} onChange={(e) => changePromo(e)} input={<Input />}>\r\n                                    <MenuItem className={classes.menuItem} value={\"ajoutPromo\"}>Ajouter promotion</MenuItem>\r\n                                    {tabPromo === undefined ? <PropagateLoader size={15} color={\"rgb(7, 91, 114)\"} css={{ margin: \"30px auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n                                        : tabPromo.map((element, index) => (\r\n                                            <MenuItem key={index} value={element}>{element.nom}</MenuItem>\r\n                                        ))}\r\n                                </Select>\r\n                            </div>\r\n                            <Fab className={classes.fabDelete} size=\"small\" aria-label=\"delete\" disabled={select.idPromo === \"\" || select === \"ajoutPromo\"} onClick={() => remove()}>\r\n                                <DeleteIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        {select !== \"ajoutPromo\"\r\n                            ? <>\r\n                                <Button className={classes.button} disabled={select === \"\"} variant=\"contained\" color=\"primary\" onClick={() => setAssoModele(true)}>Associer à un modèle</Button>\r\n                                <Button className={classes.button} disabled={select === \"\"} variant=\"contained\" color=\"primary\" onClick={() => setListEtu(true)}>Ajouter une liste d'étudiants</Button>\r\n                                <Button className={classes.button} disabled={select === \"\"} variant=\"contained\" color=\"primary\" onClick={() => suppAsso()}>Supprimer l'association</Button>\r\n                                <AssociationModele selectPromo={select.idPromo} open={assoModele} setClose={() => setAssoModele(false)} />\r\n                                <AjoutListeEtu selectPromo={select.idPromo} open={listEtu} setClose={() => setListEtu(false)} />\r\n                                {select !== \"\" ? <Table /> : null}\r\n                            </>\r\n                            : <div className={classes.divNomPromo}>\r\n                                <TextField autoFocus size=\"small\" label=\"Nom de la promo\" variant=\"outlined\" required value={nouvellePromo} onChange={e => setNouvellePromo(e.target.value)} />\r\n                                <Button className={classes.button} disabled={nouvellePromo === \"\"} variant=\"contained\" color=\"primary\" onClick={() => ajouterPromo()}>Créer</Button>\r\n                            </div>\r\n                        }\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n            <PopUp severity=\"success\" message=\"Suppression d'association réussie\" open={popUpAssoYes} handleClose={() => setPopUpAssoYes(false)} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Button, Table, TableCell, TableHead, TableRow, TableBody, TextField, Typography, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport CircleLoader from \"react-spinners/CircleLoader\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { getAllUnite, selectUnites, enregistreUnites, selectActualise, addUnite, setIndexEnModif, selectIndexEnMofid, changeNomComplet, changeAbreviation, deleteUnite, selectEnregistreUnite, setEnregistre } from '../../slice/UniteSlice';\r\nimport PopUp from '../../components/PopUp';\r\n\r\nexport default function GestionUnites() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        hr: {\r\n            width: \"80%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        tableauUnite: {\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        addButton: {\r\n            marginLeft: \"3%\",\r\n            marginBottom: \"2%\"\r\n        },\r\n        deleteButton: {\r\n            backgroundColor: theme.palette.error.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.error.dark\r\n            },\r\n            color: \"white\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n        },\r\n        modifButton: {\r\n            backgroundColor: theme.palette.primary.light,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.secondary.main\r\n            },\r\n            color: \"black\",\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            marginRight: \"10%\"\r\n        },\r\n        tableCell: {\r\n            textAlign: \"center\"\r\n        },\r\n        tableRow: {\r\n            backgroundColor: theme.palette.secondary.light\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const tabUnites = useSelector(selectUnites);\r\n    const actualise = useSelector(selectActualise);\r\n    const indexEnModif = useSelector(selectIndexEnMofid);\r\n    const isEnregistre = useSelector(selectEnregistreUnite);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            dispatch(getAllUnite());\r\n        }\r\n    });\r\n\r\n    //permet de savoir si ce nom est utilisé une seule fois dans le tabUnites\r\n    //renvoie aussi une valeur fausse si les chaines sont vides\r\n    const modifIsUnique = () => {\r\n\r\n        if (indexEnModif < 0) { // si il n'y pas de champ qui est en train d'être modifié\r\n            return true;\r\n        } else if (tabUnites[indexEnModif].abrev.length === 0 ||\r\n            tabUnites[indexEnModif].nom.length === 0) { // si l'un des champ est vide\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i < tabUnites.length; i++) {\r\n            let verif = (i === indexEnModif) || (tabUnites[i].nom !== tabUnites[indexEnModif].nom && tabUnites[i].abrev !== tabUnites[indexEnModif].abrev);\r\n            if (!verif) return false; // renvoie faux si le nom ou l'abreviation est retrouvée autre part\r\n        }\r\n\r\n        return true // retourne vrai par défaut\r\n    }\r\n\r\n    //change le nom complet d'une unité au fur et à mesure de sa saisie\r\n    //paramètres : index de l'unité et event (valeur)\r\n    const handleChangeNomComplet = (index, event) => {\r\n        dispatch(changeNomComplet({\r\n            index: index,\r\n            value: event.target.value\r\n        }));\r\n    }\r\n\r\n    //change le nom complet d'une unité au fur et à mesure de sa saisie\r\n    //paramètres : index de l'unité et event (valeur)\r\n    const handleChangeAbreviation = (index, event) => {\r\n        dispatch(changeAbreviation({\r\n            index: index,\r\n            value: event.target.value\r\n        }));\r\n    }\r\n\r\n    //enregistre l'unité dans la base de données\r\n    const enregistrer = () => {\r\n        dispatch(enregistreUnites(tabUnites));\r\n        setEnregistre(true);\r\n    }\r\n\r\n    //ajoute une unité dans le tableau (n'enregistre pas dans la BD)\r\n    const handleAjouterUnite = () => {\r\n        dispatch(addUnite());\r\n    }\r\n\r\n    const handleDeleteUnite = (index) => {\r\n        if (tabUnites[index].nom !== \"Sans Unité\") {\r\n            dispatch(deleteUnite(index));\r\n        }\r\n    }\r\n\r\n    const handleModifUnite = (index) => {\r\n        dispatch(setIndexEnModif(index));\r\n    }\r\n\r\n    const handleSaveLocal = () => {\r\n        dispatch(setIndexEnModif(-1));\r\n    }\r\n\r\n    const buttonsUniteSansModif = (index) => {\r\n        return (\r\n            tabUnites[index].nom !== \"Sans Unité\"\r\n                ?\r\n                <div>\r\n                    <IconButton className={classes.modifButton} onClick={e => handleModifUnite(index)} disabled={!modifIsUnique()}>\r\n                        <CreateIcon />\r\n                    </IconButton>\r\n                    <IconButton className={classes.deleteButton} onClick={e => handleDeleteUnite(index)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </div>\r\n                :\r\n                null\r\n        )\r\n    }\r\n\r\n    //affiche l'unité en fonction du fait qu'il est en train d'être modifié ou non\r\n    const afficherUnite = (unite, index) => {\r\n        return (\r\n            index !== indexEnModif \r\n                ? <>\r\n                    <TableCell className={classes.tableCell}> {unite.nom} </TableCell>\r\n                    <TableCell className={classes.tableCell}> {unite.abrev} </TableCell>\r\n                    <TableCell className={classes.tableCell}> {buttonsUniteSansModif(index)} </TableCell>\r\n                </>\r\n\r\n                : <>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <TextField value={unite.nom}\r\n                            onChange={e => handleChangeNomComplet(index, e)} />\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <TextField value={unite.abrev}\r\n                            onChange={e => handleChangeAbreviation(index, e)} />\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                        <IconButton onClick={e => handleSaveLocal()} disabled={!modifIsUnique()}>\r\n                            <SaveIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={e => handleDeleteUnite(index)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </TableCell>\r\n                </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        !actualise\r\n            ? <CircleLoader size={50} color={\"rgb(7, 91, 114)\"} css={{ margin: \"auto\", display: \"flex\", justifyContent: \"center\" }} />\r\n            : <div>\r\n                <Typography variant=\"h1\">Gestion des unités</Typography>\r\n                <hr className={classes.hr} />\r\n\r\n                <Button className={classes.addButton} variant=\"contained\" color=\"primary\" onClick={handleAjouterUnite}> Ajouter une unité </Button>\r\n\r\n                <Table className={classes.tableauUnite}>\r\n                    <TableHead>\r\n                        <TableRow className={classes.tableRow}>\r\n                            <TableCell className={classes.tableCell}> Nom Complet </TableCell>\r\n                            <TableCell className={classes.tableCell}> Abréviation </TableCell>\r\n                            <TableCell /> {/*  Pour les boutons */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tabUnites.map((unite, index) => {\r\n                            return (\r\n                                <TableRow key={index}>\r\n                                    {afficherUnite(unite, index)}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n                <PopUp\r\n                    open={indexEnModif < 0 && !isEnregistre}\r\n                    handleClose={() => enregistrer()}\r\n                    actionName=\"enregistrer\"\r\n                    action={() => enregistrer()}\r\n                    message=\"Cliquez ici pour enregistrer les unités\"\r\n                    severity=\"warning\"\r\n                />\r\n            </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, TextField, Fab, InputAdornment, makeStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeReponse, peutSupprimer, deleteReponse, setUnite } from '../../slice/RepondreQuestionsSlice';\r\n\r\nimport ChoixUnite from '../unite/ChoixUnite';\r\nimport { afficherUnites } from '../unite/UniteFunctions';\r\n\r\nexport default function Item(props) {\r\n\r\n     const useStyles = makeStyles((theme) => ({\r\n          buttonDelete: {\r\n               color: \"white\",\r\n               backgroundColor: theme.palette.error.main,\r\n               \"&:hover\": {\r\n                    backgroundColor: theme.palette.error.dark\r\n               },\r\n          },\r\n          reponse: {\r\n               margin: \"5px 0px\",\r\n               display: \"flex\",\r\n               alignItems: \"center\",\r\n               columnGap: \"10px\"\r\n          },\r\n          inputAdornmentReponse: {\r\n               width: \"100px\",\r\n          }\r\n     }));\r\n\r\n     const classes = useStyles();\r\n\r\n     //indique si la boite de dialogue choix unité est ouverte ou fermée\r\n     const [choixUniteOpen, setOpen] = useState(false);\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     //booléen qui autorise la suppression d'une réponse si il y a plus d'une réponse affiché\r\n     const canDelete = useSelector(peutSupprimer(props.indexQuestion))\r\n\r\n     //s'occupe de changer la réponse au fur et à mesure que l'étudiant la tape\r\n     //s'assure que la réponse soit un nombre\r\n     const handleChangeReponse = (value) => {\r\n          dispatch(changeReponse({\r\n               indexQuestion: props.indexQuestion,\r\n               indexReponse: props.num,\r\n               value: value\r\n          }));\r\n     }\r\n\r\n     //dès que la réponse perd le focus, s'assure que la réponse ne puisse être un '-' tout seul\r\n     const handleBlurReponse = () => {\r\n          if (props.reponse.value === '-') {\r\n               dispatch(changeReponse({\r\n                    indexQuestion: props.indexQuestion,\r\n                    indexReponse: props.num,\r\n                    value: ''\r\n               }));\r\n          }\r\n     }\r\n\r\n     //gere la suppression de cette réponse\r\n     const handleDeleteReponse = () => {\r\n          dispatch(deleteReponse({\r\n               indexQuestion: props.indexQuestion,\r\n               indexReponse: props.num,\r\n          }));\r\n     }\r\n\r\n     //s'occupe de fermer la boite de dialogue du choix de l'unité\r\n     //et de s'occuper des différentes actions demandée par la boite à sa fermeture\r\n     //paramètre : string (seul \"annuler\" ou \"appliquer a tous\" sont gérés)\r\n     const handleClose = () => {\r\n          //ferme la boite de dialogue\r\n          setOpen(false);\r\n     }\r\n\r\n     //s'occupe de l'ouverture de la boite de dialogue choixUnité\r\n     const handleOpen = () => {\r\n          //ouvre la boite de dialogue\r\n          setOpen(true);\r\n     }\r\n\r\n     //remplace le tableau d'unités de cette réponse\r\n     const setUniteReponse = (tab) => {\r\n          dispatch(setUnite({\r\n               indexQuestion: props.indexQuestion,\r\n               indexReponse: props.num,\r\n               newTab: tab\r\n          }));\r\n     }\r\n\r\n     //affiche le bouton pour supprimer cette réponse\r\n     const buttonDelete = () => {\r\n          return (\r\n               <Fab className={classes.buttonDelete} size=\"small\" aria-label=\"delete\"\r\n                    onClick={handleDeleteReponse}\r\n               >\r\n                    <DeleteIcon />\r\n               </Fab>\r\n          )\r\n     }\r\n\r\n     return (\r\n          <div className={classes.reponse}>\r\n               {/* input de la réponse */}\r\n               <TextField label={\"Reponse \" + (props.num + 1)} variant=\"outlined\" size=\"small\"\r\n                    value={props.reponse.value} onChange={e => handleChangeReponse(e.target.value)}\r\n                    onBlur={handleBlurReponse}\r\n                    InputProps={{ //affichage unité\r\n                         endAdornment: (\r\n                              <InputAdornment className={classes.inputAdornmentReponse} position=\"start\">\r\n                                   {afficherUnites(props.reponse.tabUnite)}\r\n                              </InputAdornment>\r\n                         ),\r\n                    }} />\r\n\r\n               {/* bouton pour changer l'unité (ouvre la boite de dialogue) */}\r\n               <Button size=\"small\" onClick={e => handleOpen()}>Unite</Button>\r\n\r\n               {/* boite de dialogue pour changer l'unité */}\r\n               <ChoixUnite open={choixUniteOpen} unite={props.reponse.tabUnite}\r\n                    setTabUnite={setUniteReponse} handleClose={handleClose} />\r\n\r\n               {/* affiche le bouton de suppression si il est possible de supprimer */}\r\n               {canDelete ? buttonDelete() : null}\r\n          </div>\r\n     );\r\n}","import React from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addReponse, changeJustification } from '../../slice/RepondreQuestionsSlice';\r\n\r\nimport DelayInput from '../InputAwait';\r\nimport Reponse from './ItemReponse';\r\n\r\nexport default function Question(props) {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        listeReponses: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flexWrap: \"wrap\",\r\n            rowGap: \"30px\",\r\n            alignItems: \"center\",\r\n        },\r\n        listeQuestions: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"2% 3% 2% 3%\",\r\n        },\r\n        enonce: {\r\n            margin: \"4% 0 0 8%\",\r\n            fontSize: \"18px\",\r\n\r\n        },\r\n        buttonAjouterReponse: {\r\n            display: \"block\",\r\n            margin: \"20px auto\"\r\n        },\r\n        hr: {\r\n            border: \"1px dashed\",\r\n            width: \"50%\",\r\n            margin: \"50px auto\"\r\n        },\r\n        h2: {\r\n            textAlign: \"left\",\r\n            margin: \"1%\"\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //fonction pour ajouter une réponse (valeur vide) à cette question\r\n    const handleAddReponse = () => {\r\n        dispatch(addReponse(props.id));\r\n    }\r\n\r\n    //liste les différentes réponses\r\n    const listeReponses = () => {\r\n        return (\r\n            <div className={classes.listeReponses}>\r\n                {/* affichage des réponses une par une */}\r\n                {props.question.tabReponses.map((i, index) => (\r\n                    <Reponse key={index} num={index} reponse={i}\r\n                        indexQuestion={props.id} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr className={classes.hr} />\r\n            <div className={classes.listeQuestions} >\r\n                <h2 className={classes.h2}>Question {props.id + 1} :</h2>\r\n                {/* affichage énoncé de la question */}\r\n                <div className={classes.enonce}>{ReactHtmlParser(props.question.enonce)}</div>\r\n\r\n                <DelayInput\r\n                    style={{ width: \"100%\", margin: \"4% 0\" }}\r\n                    rows={4}\r\n                    label=\"Justification\"\r\n                    delayTimeout={300}\r\n                    value={props.question.justification}\r\n                    onChange={e => dispatch(changeJustification({ indexQuestion: props.id, justif: e }))}\r\n                />\r\n\r\n                {listeReponses()}\r\n\r\n                {/* bouton ajouter réponse visible uniquement si la question attend plus d'une réponse */}\r\n                {props.question.nbMaxReponses > 1 ?\r\n                    <Button variant=\"contained\"\r\n                        className={classes.buttonAjouterReponse}\r\n                        color=\"primary\"\r\n                        onClick={handleAddReponse}\r\n                        //est disabled dès que la limte de réponses possibles est atteinte\r\n                        disabled={props.question.tabReponses.length >= props.question.nbMaxReponses}\r\n                    >\r\n                        Ajouter Réponse\r\n                    </Button>\r\n                    : null\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { useCallback, useState } from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport jsPDF from 'jspdf';\r\nimport { Button, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectReponses, getSujet, enregistrerReponses, selectSujetEnregistre, etudiantVariables, getModele3D, getEtudiantModele } from \"../../slice/RepondreQuestionsSlice\";\r\n\r\nimport useConstructor from '../../components/use/useContructor';\r\nimport Question from '../../components/reponses/ItemQuestion';\r\nimport PopUp from '../../components/PopUp';\r\n\r\nexport default function RepondreQuestions() {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        hr: {\r\n            marginBottom: \"2%\"\r\n        },\r\n        contenant: {\r\n            width: \"80%\",\r\n            margin: \"auto\",\r\n        },\r\n        buttonFixed: {\r\n            position: \"absolute\",\r\n            top: \"30px\",\r\n            right: \"120px\"\r\n        },\r\n        sujet: {\r\n            boxShadow: \"0px 8px 20px -5px rgba(0,0,0,0.69)\",\r\n            padding: \"1% 2% 4% 2%\",\r\n            margin: \"4%\"\r\n        },\r\n        center: {\r\n            textAlign: \"center\",\r\n            display: \"block\",\r\n            margin: \"2% auto\"\r\n        },\r\n        modeles: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\"\r\n        },\r\n        image: {\r\n            width: 200\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const [popUp, setPopUp] = useState(false);\r\n    const reponses = useSelector(selectReponses);\r\n    const isEnregistre = useSelector(selectSujetEnregistre);\r\n    const dispatch = useDispatch();\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            dispatch(getEtudiantModele()).then(modele => {\r\n                if (modele.payload[0] !== undefined) {\r\n                    dispatch(getSujet(modele.payload[0].id_modele)).then((sujet) => {\r\n                        dispatch(etudiantVariables(sujet.payload.id_auth));\r\n                        dispatch(getModele3D(sujet.payload.id_auth));\r\n                    });\r\n                } else {\r\n                    alert(\"erreur, pas de sujet asoscié\");\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    const handleEnvoyerReponses = useCallback(() => {\r\n        dispatch(enregistrerReponses(reponses.tabQuestions));\r\n        setPopUp(true);\r\n    }, [dispatch, reponses]);\r\n\r\n    // Transforme le pdf en sujet\r\n    const downloadPdf = () => {\r\n        let sujetForPdf = `<div id=\"sujetPDF\"> ${reponses.sujet}<br/>`;\r\n\r\n        reponses.tabQuestions.forEach(elem => {\r\n            sujetForPdf += `${elem.enonce}<br/>`;\r\n        });\r\n        sujetForPdf += \"</div>\";\r\n\r\n        const pdf = new jsPDF();\r\n\r\n        pdf.html(sujetForPdf, {\r\n            callback: (doc) => {\r\n                doc.setFontSize(10);\r\n                doc.setFont(\"helvetica\", \"normal\");\r\n                doc.addPage();\r\n                const img = new Image();\r\n                img.src = reponses.image1;\r\n                doc.addImage(img, '', 50, 30, 100, 100);\r\n                const img2 = new Image();\r\n                img2.src = reponses.image2;\r\n                doc.addImage(img2, '', 50, 150, 100, 100);\r\n\r\n                const number_of_pages = doc.internal.getNumberOfPages();\r\n                for (let i = 1; i <= number_of_pages; ++i) {\r\n                    doc.setPage(i);\r\n\r\n                    //header\r\n                    doc.text(\"N° étudiant : 1 - N° sujet : 14559\", 15, 10);\r\n                    doc.text(\"Sujet de Pierre Dupont\", 190, 10, null, null, \"right\");\r\n\r\n                    //footer\r\n                    doc.setDrawColor(136, 139, 141);\r\n                    doc.setLineWidth(0.5);\r\n                    doc.line(10, 280, 200, 280);\r\n                    doc.text(\"Pierre Carillo\", 20, 290);\r\n                    doc.text(\"IUT du Limousin - GMP\", 105, 290, null, null, \"center\");\r\n                    doc.text(`Page ${i} / ${number_of_pages}`, 190, 290, null, null, \"right\");\r\n                }\r\n                doc.save('sujet.pdf');\r\n            },\r\n            x: 7,\r\n            y: 14,\r\n        });\r\n    }\r\n\r\n    //affiche les différentes questions avec leurs réponses\r\n    const displayQuestions = () => {\r\n        //n'affiche rien si il n'y a pas de questions\r\n        return (\r\n            reponses.tabQuestions.length === 0\r\n                ? <div>Pas de questions pour l'instant</div>\r\n                : reponses.tabQuestions.map((i, index) => (\r\n                    <Question key={i.indexQuestion} question={i} id={index} />\r\n                ))\r\n        );\r\n    }\r\n\r\n    return isEnregistre && (\r\n        <div className={classes.contenant}>\r\n            <Typography variant=\"h1\">Réponses aux questions</Typography>\r\n            <hr className={classes.hr} />\r\n            <div className={classes.buttonFixed} >\r\n                {/*bouton de téléchargement du sujet en pdf */}\r\n                <Button variant=\"contained\" color=\"primary\" onClick={downloadPdf}>\r\n                    <GetAppIcon />\r\n                    Télécharger\r\n                </Button>\r\n            </div>\r\n\r\n            {/* affichage du sujet */}\r\n            <div className={classes.sujet}>\r\n                <h2 className={classes.center}>Sujet</h2>\r\n                <div id=\"sujet\">{ReactHtmlParser(reponses.sujet)}</div>\r\n            </div>\r\n\r\n            <div className={classes.modeles}>\r\n                <div>\r\n                    <img className={classes.image} src={reponses.image1} alt=\"img modele1\" />\r\n                    <p className={classes.center}>modèle 1</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <img className={classes.image} src={reponses.image2} alt=\"img modele2\" />\r\n                    <p className={classes.center}>modèle 2</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* affichage des questions */}\r\n            {displayQuestions()}\r\n\r\n            <Button variant=\"contained\" color=\"primary\"\r\n                onClick={handleEnvoyerReponses}\r\n                className={classes.center}>\r\n                Envoyer les réponses\r\n            </Button>\r\n            <PopUp severity=\"success\" message=\"Envoie des réponses réussie\" open={popUp} handleClose={() => setPopUp(false)} />\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Avatar, IconButton, Menu, MenuItem, ListItemIcon, Typography, makeStyles, Tooltip } from '@material-ui/core';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport AccountBoxOutlinedIcon from '@material-ui/icons/AccountBoxOutlined';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport AppsOutlinedIcon from '@material-ui/icons/AppsOutlined';\r\n\r\nimport useConstructor from './use/useContructor';\r\nimport SelectionModele from './SelectionModele';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserName, getUserImage, logoutUser } from \"../slice/UserSlice\";\r\nimport { selectModeleActuel, selectActualise, getModele } from '../slice/ModeleSlice';\r\nimport { getAllPromo, selectEnregistrePromo } from '../slice/PromoSlice';\r\n\r\nexport default function MenuProfil() {\r\n    const useStyles = makeStyles((theme) => ({\r\n        divMenuProfil: {\r\n            position: \"absolute\",\r\n            right: 30,\r\n            top: 17.5,\r\n            display: \"flex\",\r\n            zIndex: 10\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.palette.error.main\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    //permet de placer le menu de profil correctement sur la page\r\n    const [openLocation, setOpenLocation] = useState(null);\r\n    //gerer ouverture/fermeture du modele\r\n    const [open, setOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(selectUserName);\r\n    const actualiseModele = useSelector(selectActualise);\r\n    const modele = useSelector(selectModeleActuel);\r\n    const isEnregistrePromo = useSelector(selectEnregistrePromo);\r\n\r\n    useConstructor(() => {\r\n        //gerer le stockage local\r\n        let myStorage = window.localStorage;\r\n        //si le nom de l'utilisateur est vide et que l'image est vide et que le stockage local de l'image est vide \r\n        if (user.name !== \"\" && user.image === undefined && myStorage.getItem(user.name) === null) dispatch(getUserImage(user.name));\r\n\r\n        //recupere les modeles\r\n        if (!actualiseModele && user.isProf) dispatch(getModele());\r\n\r\n        //recupère les promo\r\n        if (!isEnregistrePromo) dispatch(getAllPromo());\r\n    });\r\n\r\n    return (\r\n        <div className={classes.divMenuProfil}>\r\n            <Tooltip disableHoverListener={modele === undefined ? true : false} title={modele === undefined || !user.isProf ? \"\" : modele.nom}>\r\n                <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => setOpenLocation(e.currentTarget)}>\r\n                    {user.image === undefined\r\n                        ? <Avatar className={classes.avatar}>{user.name.substring(0, 1).toUpperCase()}</Avatar>\r\n                        : <Avatar src={user.image} />\r\n                    }\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                transformOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                disableScrollLock={true}\r\n                id=\"simple-menu\"\r\n                anchorEl={openLocation}\r\n                keepMounted\r\n                open={Boolean(openLocation)}\r\n                onClose={() => setOpenLocation(null)}\r\n            >\r\n                <MenuItem component={Link} to='/profil' onClick={() => setOpenLocation(null)}>\r\n                    <ListItemIcon>\r\n                        <AccountBoxOutlinedIcon />\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\">Profil</Typography>\r\n                </MenuItem>\r\n                {user.isProf\r\n                    ? <MenuItem onClick={e => setOpen(true)}>\r\n                        <ListItemIcon>\r\n                            <AppsOutlinedIcon />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\">Modèle</Typography>\r\n                    </MenuItem>\r\n                    : null}\r\n                <MenuItem onClick={e => dispatch(logoutUser())}>\r\n                    <ListItemIcon>\r\n                        <ExitToAppOutlinedIcon />\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\">Déconnexion</Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n            {user.isProf ? <SelectionModele tard={true} setClose={() => setOpen(false)} open={open} /> : null}\r\n            {user.isLogin ? null : <Redirect to='/' />}\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\nimport MenuProfil from '../../components/MenuProfil';\r\nimport useConstructor from '../../components/use/useContructor';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSujet, selectSujetEnregistre, etudiantVariables, getModele3D, getEtudiantModele } from \"../../slice/RepondreQuestionsSlice\";\r\nimport { logoutUser } from \"../../slice/UserSlice\";\r\n\r\nexport default function Accueil(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const isEnregistre = useSelector(selectSujetEnregistre);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useConstructor(() => {\r\n        if (!isEnregistre) {\r\n            dispatch(getEtudiantModele()).then(modele => {\r\n                if (modele.payload[0] !== undefined) {\r\n                    dispatch(getSujet(modele.payload[0].id_modele)).then((sujet) => {\r\n                        dispatch(etudiantVariables(sujet.payload.id_auth));\r\n                        dispatch(getModele3D(sujet.payload.id_auth));\r\n                    });\r\n                } else {\r\n                    setOpen(true);\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <MenuProfil info={props.info} />\r\n            <Dialog open={open} onClose={() => setOpen(true)}>\r\n                <DialogTitle>Sujet non attribué</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Ton sujet n'a pas encore été attribué, contactes le professeur en cas de problème ou reviens plus tard</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => dispatch(logoutUser())} color=\"primary\">Quitter</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport { FormControl, IconButton, InputAdornment, InputLabel, makeStyles, OutlinedInput } from '@material-ui/core'\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from \"clsx\";\r\n\r\n//label, nom du input \r\n//error si erreur\r\n//value : valeur du input\r\n//onChange quand changement\r\n//onKeyPress quand touche préssée\r\nexport default function InputPwd({ label, error, value, onChange, onKeyPress }) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divInputPassword: {\r\n            margin: \"auto\",\r\n            width: \"max-content\"\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n        textField: {\r\n            width: 225\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const [showMdp, setShowMdp] = useState(false);\r\n    const changeShowMdp = () => setShowMdp(!showMdp);\r\n\r\n    return (\r\n        <div className={classes.divInputPassword}>\r\n            <FormControl size=\"small\" variant=\"outlined\" className={clsx(classes.margin, classes.textField)}>\r\n                <InputLabel error={error} htmlFor=\"outlined-adornment-password\" required>{label}</InputLabel>\r\n                <OutlinedInput\r\n                    required\r\n                    label={label + \"*\"}\r\n                    error={error}\r\n                    id=\"outlined-adornment-password\"\r\n                    type={showMdp ? \"text\" : \"password\"}\r\n                    value={value}\r\n                    onChange={e => onChange(e)}\r\n                    onKeyPress={e => onKeyPress !== undefined ? onKeyPress(e) : null}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={() => changeShowMdp()}\r\n                                size=\"small\"\r\n                            >\r\n                                {showMdp ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\r\n\r\nimport InputPassword from '../components/InputPassword';\r\nimport PopUp from '../components/PopUp';\r\nimport DropFile from '../components/DropFile';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserName, setUserImage, deleteUserImage } from \"../slice/UserSlice\";\r\n\r\nimport { setPwdUserAPI, addNewProfAPI } from '../utils/api.js';\r\n\r\nexport default function Profile() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        carteProfil: {\r\n            display: \"flex\",\r\n            width: \"60%\",\r\n            height: \"max-content\",\r\n            margin: \"0 auto 2% auto\",\r\n            boxShadow: \"-2px 5px 12px 4px rgba(0,0,0,0.62)\",\r\n        },\r\n        imageProfil: {\r\n            width: 220,\r\n            height: \"100\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                display: \"none\"\r\n            }\r\n        },\r\n        wrapper: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n        },\r\n        dropPhotoProfil: {\r\n            height: \"40%\",\r\n            width: \"100%\",\r\n            margin: \"auto\"\r\n        },\r\n        buttonEnvoyerImageProfil: {\r\n            display: \"block\",\r\n            margin: \"3% auto\"\r\n        },\r\n        hr: {\r\n            width: \"70%\"\r\n        },\r\n        divPasswordChange: {\r\n            width: \"max-content\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: \"2% auto\",\r\n        },\r\n        buttonChangePwd: {\r\n            margin: \"2% auto\",\r\n        },\r\n        rootNewProf: {\r\n            display: \"flex\",\r\n            width: \"max-content\",\r\n            flexDirection: \"column\",\r\n            margin: \"2% auto 4%\",\r\n            alignItems: \"center\",\r\n        },\r\n        marginNewProf: {\r\n            margin: \"4px\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const user = useSelector(selectUserName);\r\n    const dispatch = useDispatch();\r\n\r\n    const [popUp, setPopUp] = useState({ message: \"\", severity: \"\", open: false });\r\n    const [password, setPassword] = useState({ oldPassword: \"\", newPassword: \"\", error: false });\r\n    const [image, setImage] = useState(\"\");\r\n    const [prof, setProf] = useState({ username: \"\", password: \"\" });\r\n\r\n    const changePasswordAPI = () => {\r\n        setPwdUserAPI(user.name, { oldPassword: password.oldPassword, newPassword: password.newPassword }).then(() => {\r\n            setPopUp({ message: \"Changement de mot de passe réussi\", severity: \"success\", open: true });\r\n        }).catch(() => {\r\n            setPassword({ oldPassword: password.oldPassword, newPassword: password.newPassword, error: true });\r\n            setPopUp({ message: \"Échec du changement de mot de passe\", severity: \"error\", open: true });\r\n        });\r\n    }\r\n\r\n    const addNewProf = () => {\r\n        console.log(prof)\r\n        addNewProfAPI(prof.username, prof.password).then(() => {\r\n            setPopUp({ message: \"Ajout d'un nouveau compte professeur réussi\", severity: \"success\", open: true });\r\n        }).catch(() => {\r\n            setPopUp({ message: \"Ajout d'un nouveau compte professeur échoué\", severity: \"error\", open: true });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.carteProfil}>\r\n            {(user.image === undefined || user.image === \"\") ? null : <div className={classes.imageProfil} style={{ backgroundImage: \"url('\" + user.image + \"')\" }} />}\r\n            <div className={classes.wrapper}>\r\n                <Typography align=\"center\" gutterBottom variant=\"h2\" component=\"h2\">{user.name.charAt(0).toUpperCase() + user.name.slice(1)}</Typography>\r\n                <div className={classes.dropPhotoProfil}>\r\n                    <DropFile typeFile='image/*' compressImage={true} changeFile={e => setImage(e)} message=\"Importer une nouvelle image de profil\" />\r\n                    <Button\r\n                        className={classes.buttonEnvoyerImageProfil}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={image === \"\"}\r\n                        onClick={() => {\r\n                            dispatch(setUserImage({ name: user.name, image: image })).then(() => {\r\n                                setPopUp({ message: \"L'image a été ajouté avec succès\", severity: \"success\", open: true });\r\n                            }).catch(() => {\r\n                                setPopUp({ message: \"Échec de l'ajout de l'image\", severity: \"error\", open: true });\r\n                            });\r\n                        }}\r\n                    >\r\n                        Enregistrer l'image\r\n                    </Button>\r\n                    <Button\r\n                        className={classes.buttonEnvoyerImageProfil}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                            dispatch(deleteUserImage()).then(() => {\r\n                                setPopUp({ message: \"L'image a été suprimée avec succès\", severity: \"success\", open: true });\r\n                            }).catch(() => {\r\n                                setPopUp({ message: \"Échec de la suppression de l'image\", severity: \"error\", open: true });\r\n                            });\r\n                        }}\r\n                    >\r\n                        Supprimer l'image actuelle\r\n                    </Button>\r\n                </div>\r\n                <hr className={classes.hr} />\r\n                <div className={classes.divPasswordChange} id=\"divPasswordChange\">\r\n                    <InputPassword label={\"Mot de passe actuel\"} error={password.error}\r\n                        onChange={e => setPassword({ oldPassword: e.target.value, newPassword: password.newPassword, error: false })}\r\n                    />\r\n                    <InputPassword label={\"Nouveau mot de passe\"} error={password.error}\r\n                        onChange={e => setPassword({ oldPassword: password.oldPassword, newPassword: e.target.value, error: false })}\r\n                    />\r\n                    <Button className={classes.buttonChangePwd} variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => changePasswordAPI()}>Changer de mot de passe</Button>\r\n                </div>\r\n                {user.name === \"root\"\r\n                    ?\r\n                    <>\r\n                        <hr className={classes.hr} />\r\n                        <div className={classes.rootNewProf}>\r\n                            <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">Création d'un nouveau compte professeur</Typography>\r\n                            <TextField style={{ margin: \"4px\" }} label=\"Nom d'utilisateur\" size=\"small\" variant=\"outlined\" onChange={e => setProf({ username: e.target.value, password: prof.password })} />\r\n                            <InputPassword className={classes.marginNewProf} label={\"Mot de passe\"} onChange={e => setProf({ username: prof.username, password: e.target.value })} />\r\n                            <Button className={classes.marginNewProf} variant=\"contained\" color=\"primary\" size=\"small\" disabled={prof.username === \"\" || prof.password === \"\"} onClick={() => addNewProf()}>Ajouter le nouveau compte</Button>\r\n                        </div>\r\n                    </>\r\n                    : null}\r\n                <PopUp severity={popUp.severity} message={popUp.message} open={popUp.open} handleClose={() => setPopUp({ message: \"\", severity: \"success\", open: false })} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default function Particules() {\r\n\r\n\treturn (\r\n\t\t<Particles\r\n\t\t\tstyle={{ position: \"absolute\", opacity: \"0.6\", top: 0 }}\r\n\t\t\theight=\"100vh\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\tparams={{\r\n\t\t\t\tparticles: {\r\n\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\tvalue: \"#000000\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tline_linked: {\r\n\t\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\t\tvalue: \"#000000\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnumber: {\r\n\t\t\t\t\t\tvalue: 50\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsize: {\r\n\t\t\t\t\t\tvalue: 3\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"interactivity\": {\r\n\t\t\t\t\t\"events\": {\r\n\t\t\t\t\t\t\"onhover\": {\r\n\t\t\t\t\t\t\t\"enable\": true,\r\n\t\t\t\t\t\t\t\"mode\": \"repulse\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button, makeStyles, FormControl } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\r\n\r\nimport PopUp from '../components/PopUp';\r\nimport Particules from '../components/ParticulesBackLogin';\r\nimport useConstructor from '../components/use/useContructor';\r\nimport InputPassword from '../components/InputPassword';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userDetails, loginUser, selectError, setError, selectIsProf, selectIsLogin } from \"../slice/UserSlice\";\r\n\r\nexport default function Login() {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        divLogin: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"120px\",\r\n            margin: \"30px auto\"\r\n        },\r\n        backgroundLogin: {\r\n            display: \"block\",\r\n            margin: \"10% auto 0 auto\",\r\n            border: \"solid  2px\",\r\n            borderColor: theme.palette.primary.main,\r\n            borderRadius: \"2%\",\r\n            padding: \"2% 3%\",\r\n            backgroundColor: \"rgba(255,255,255,0.6)\",\r\n            zIndex: 2\r\n        },\r\n        buttonConnexion: {\r\n            display: \"block\",\r\n            margin: \"20px auto 10px auto\",\r\n            backgroundColor: theme.palette.primary.main,\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.primary.dark,\r\n            },\r\n            border: \"none\",\r\n            color: \"white\"\r\n        },\r\n        fieldLogin: {\r\n            display: \"flex\",\r\n            marginTop: \"20px\",\r\n        },\r\n        textField: {\r\n            width: 225,\r\n        },\r\n        iconLogin: {\r\n            marginRight: \"29px\",\r\n            marginTop: \"8px\"\r\n        },\r\n        iconPwd: {\r\n            marginRight: \"25px\",\r\n            marginTop: \"10px\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const error = useSelector(selectError);\r\n    const isProf = useSelector(selectIsProf);\r\n    const isLogin = useSelector(selectIsLogin);\r\n\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [loginConnect, setLoginConnect] = useState({ user: \"\", pwd: \"\" });\r\n\r\n    useConstructor(() => {\r\n        dispatch(userDetails())\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (error) setOpenPopUp(true)\r\n    }, [error]);\r\n\r\n    const connexionRedirection = () => {\r\n        return isLogin ? (isProf ? <Redirect push to='/prof/home' /> : <Redirect push to='/etu/home' />) : null;\r\n    }\r\n\r\n    const onChangeUserName = (e) => {\r\n        dispatch(setError(false));\r\n        setLoginConnect({ user: e.target.value, pwd: loginConnect.pwd });\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        dispatch(setError(false));\r\n        setLoginConnect({ user: loginConnect.user, pwd: e.target.value });\r\n    }\r\n\r\n    const connectClick = () => {\r\n        dispatch(loginUser({ name: loginConnect.user, password: loginConnect.pwd }));\r\n    }\r\n\r\n    return (\r\n        (isLogin === undefined)\r\n            ? null\r\n            : <div className={classes.divLogin}>\r\n                <Particules />\r\n                <div className={classes.backgroundLogin}>\r\n                    <div className={classes.fieldLogin}>\r\n                        <AccountCircleOutlinedIcon className={classes.iconLogin} />\r\n                        <FormControl size=\"small\" variant=\"outlined\">\r\n                            <TextField id=\"outlined-login\" className={classes.textField} autoFocus size=\"small\" variant=\"outlined\" required error={error}\r\n                                value={loginConnect.user}\r\n                                label=\"Login\"\r\n                                onChange={e => onChangeUserName(e)}\r\n                                onKeyPress={(e) => { if (e.code === \"Enter\") connectClick() }}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className={classes.fieldLogin}>\r\n                        <VpnKeyOutlinedIcon className={classes.iconPwd} />\r\n                        <InputPassword label={\"Mot de passe\"} error={error}\r\n                            onKeyPress={e => { if (e.code === \"Enter\") connectClick() }}\r\n                            value={loginConnect.pwd}\r\n                            onChange={e => onChangePassword(e)}\r\n                        />\r\n                    </div>\r\n                    <Button type=\"submit\" className={classes.buttonConnexion} variant=\"outlined\" onClick={() => connectClick()}>Connexion</Button>\r\n                    <PopUp severity=\"error\" message=\"Identification invalide\" open={openPopUp} handleClose={() => setOpenPopUp(false)} />\r\n                </div>\r\n                {connexionRedirection()}\r\n            </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { ListItemIcon, ListItemText, Divider, ListItem, List, SwipeableDrawer, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport SchoolOutlinedIcon from \"@material-ui/icons/SchoolOutlined\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PolymerIcon from '@material-ui/icons/Polymer';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser, selectUserName } from \"../slice/UserSlice\";\r\n\r\nexport default function NavBar() {\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tdivNavigation: {\r\n\t\t\tpadding: \"5px 10px\",\r\n\t\t\tzIndex: 99\r\n\t\t},\r\n\t\tdivider: {\r\n\t\t\tmargin: \"3% 0\"\r\n\t\t},\r\n\t\tdeconnexionNav: {\r\n\t\t\tbackgroundColor: theme.palette.error.main,\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tbackgroundColor: theme.palette.error.dark,\r\n\t\t\t},\r\n\t\t\tborderRadius: \"3px\",\r\n\t\t},\r\n\t\tdeconnexionText: {\r\n\t\t\tcolor: \"white\"\r\n\t\t},\r\n\t\tdeconnexionIcon: {\r\n\t\t\tcolor: \"white\"\r\n\t\t},\r\n\t\tdivNavBar: {\r\n\t\t\tmarginBottom: 100\r\n\t\t},\r\n\t\tburger: {\r\n\t\t\tposition: \"fixed\",\r\n\t\t\tleft: \"20px\",\r\n\t\t\ttop: \"20px\",\r\n\t\t\tzIndex: 10\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\tconst user = useSelector(selectUserName);\r\n\tconst dispatch = useDispatch();\r\n\r\n\t//gerer ouverture/fermeture du burger\r\n\tconst [menu, setMenu] = useState(false);\r\n\r\n\t//gerer la liste des pages affichées pour le prof\r\n\tconst listeProf = [\r\n\t\t{\r\n\t\t\ticon: <HomeOutlinedIcon />,\r\n\t\t\tnom: \"Accueil\",\r\n\t\t\troute: \"/prof/home\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <AccountCircleOutlinedIcon />,\r\n\t\t\tnom: \"Profil\",\r\n\t\t\troute: \"/profil\",\r\n\t\t\tdivider: true\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SystemUpdateAltIcon />,\r\n\t\t\tnom: \"Architecture\",\r\n\t\t\troute: \"/prof/architecture\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SchoolIcon />,\r\n\t\t\tnom: \"Promotion\",\r\n\t\t\troute: \"/prof/promo\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <AllInclusiveIcon />,\r\n\t\t\tnom: \"Création variables aléatoires\",\r\n\t\t\troute: \"/prof/variable-aleatoires\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <FunctionsIcon />,\r\n\t\t\tnom: \"Enregistrement des formules\",\r\n\t\t\troute: \"/prof/formules\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <PolymerIcon />,\r\n\t\t\tnom: \"Gérer les unités\",\r\n\t\t\troute: \"/prof/unites\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <PostAddIcon />,\r\n\t\t\tnom: \"Création des énoncés\",\r\n\t\t\troute: \"/prof/enonces\",\r\n\t\t\tdivider: true\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SchoolOutlinedIcon />,\r\n\t\t\tnom: \"Gestion de la correction\",\r\n\t\t\troute: \"/prof/gestion-correction\",\r\n\t\t\tdivider: true\r\n\t\t},\r\n\t];\r\n\r\n\t//gerer la liste des pages affichées pour les étudiants\r\n\tconst listeEtudiant = [\r\n\t\t{\r\n\t\t\ticon: <HomeOutlinedIcon />,\r\n\t\t\tnom: \"Accueil\",\r\n\t\t\troute: \"/etu/home\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <AccountCircleOutlinedIcon />,\r\n\t\t\tnom: \"Profil\",\r\n\t\t\troute: \"/profil\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SchoolOutlinedIcon />,\r\n\t\t\tnom: \"Répondre aux Questions\",\r\n\t\t\troute: \"/etu/repondre-questions\",\r\n\t\t\tdivider: true\r\n\t\t}\r\n\t];\r\n\r\n\t//selectionne la bonne liste de pages\r\n\tconst liste = user.isProf ? listeProf : listeEtudiant;\r\n\r\n\tconst navigation = () => (\r\n\t\t<SwipeableDrawer onOpen={() => setMenu(true)} open={menu} onClose={() => setMenu(false)}>\r\n\t\t\t<nav className={classes.divNavigation}>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{liste.map((item) => (\r\n\t\t\t\t\t\t<div key={item.nom}>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} to={item.route}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{item.icon}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText>{item.nom}</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t{item.divider == null ? null : <Divider className={classes.divider} />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<ListItem className={classes.deconnexionNav} button onClick={() => dispatch(logoutUser())}>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<ExitToAppIcon className={classes.deconnexionIcon} />\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText className={classes.deconnexionText}>Déconnexion</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</nav>\r\n\t\t</SwipeableDrawer>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={classes.divNavBar}>\r\n\t\t\t<IconButton className={classes.burger} onClick={(e) => setMenu(true)}>\r\n\t\t\t\t<MenuRoundedIcon fontSize=\"large\" />\r\n\t\t\t</IconButton>\r\n\t\t\t{navigation()}\r\n\t\t</div>\r\n\t);\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport MenuProfil from \"./MenuProfil\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserName, selectJustLogin, setJustLogin, userDetails} from \"../slice/UserSlice\";\r\n\r\nexport default function PrivateRoute({ forProf, component: Component, ...rest }) {\r\n\r\n\tconst dispatch = useDispatch();\r\n\t//information de l'utilisateur \r\n\tconst user = useSelector(selectUserName);\r\n\t//savoir si la personne vient juste de se connecter\r\n\tconst justLogin = useSelector(selectJustLogin);\r\n\r\n\tconst selection = (props) => {\r\n\t\t//si l'utilisateur n'était pas connecté et que ce n'est pas une connexion depuis la page de login, récuperer les informations\r\n\t\tif (!justLogin || user.isLogin === undefined) {\r\n\t\t\tdispatch(userDetails());\r\n\t\t\tsetJustLogin(false);\r\n\t\t}\r\n\r\n\t\tif (user.isLogin !== undefined) {\r\n\t\t\treturn user.isProf === forProf || forProf === undefined ? (\r\n\t\t\t\t//si tout est ok, afficher la nav bar et le menu profil sur toutes les pages et le composant (la page) en question\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<MenuProfil />\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t//si ce n'est pas un prof et qu'il veut acceder a une page prof, redirection \r\n\t\t\t\t//le window location recharge la page ! \r\n\t\t\t\t<>\r\n\t\t\t\t\t{window.location.href = '/'}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn <Route {...rest} render={(props) => selection(props)} />;\r\n}","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport userReducer from '../slice/UserSlice';\r\nimport formuleReducer from '../slice/FormulesSlice';\r\nimport modeleReducer from '../slice/ModeleSlice';\r\nimport variablesAleatoiresReducer from '../slice/VariablesAleatoiresSlice';\r\nimport reponseReducer from '../slice/RepondreQuestionsSlice';\r\nimport enoncesReducer from '../slice/EnoncesSlice';\r\nimport promoReducer from '../slice/PromoSlice';\r\nimport consulterReducer from '../slice/ConsulterSlice';\r\nimport uniteReducer from '../slice/UniteSlice';\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tuser: userReducer,\r\n\t\tformule: formuleReducer,\r\n\t\tmodele: modeleReducer,\r\n\t\tvariableAleatoire: variablesAleatoiresReducer,\r\n\t\treponse: reponseReducer,\r\n\t\tenonce: enoncesReducer,\r\n\t\tpromo: promoReducer,\r\n\t\tconsulter: consulterReducer,\r\n\t\tunite: uniteReducer,\r\n\t},\r\n\tmiddleware: getDefaultMiddleware({\r\n\t\tserializableCheck: false\r\n\t}),\r\n});","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { MuiThemeProvider, unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\r\n//unstable_createMuiStrictModeTheme pour éviter les warnings strict mod de theme material ui\r\nimport frFR from '@material-ui/core/locale';\r\n\r\nimport Formules from './pages/Prof/Formules';\r\nimport AccueilProf from './pages/Prof/AccueilProf';\r\nimport Architecture from './pages/Prof/Architecture';\r\nimport Correction from './pages/Prof/Correction';\r\nimport Enonces from \"./pages/Prof/Enonces\";\r\nimport VariableAleatoires from './pages/Prof/VariablesAleatoires';\r\nimport Consulter from './pages/Prof/ConsulterEtudiant';\r\nimport Promo from './pages/Prof/Promo';\r\nimport GestionUnites from './pages/Prof/GestionUnites';\r\n\r\nimport RepondreQuestions from './pages/Etu/RepondreQuestions';\r\nimport AccueilEtu from './pages/Etu/AccueilEtu';\r\n\r\nimport Profil from './pages/Profil';\r\nimport Login from './pages/Login';\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './utils/store';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nexport default function App() {\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                light: '#c0dff8',\r\n                main: '#075b72'\r\n            },\r\n            secondary: {\r\n                main: '#cfcfcf'\r\n            },\r\n            error: {\r\n                main: '#c51150'\r\n            },\r\n            warning: {\r\n                main: '#ffa016',\r\n                dark: '#b75c08'\r\n            },\r\n            success: {\r\n                main: '#5bb65f',\r\n                dark: '#244826'\r\n            },\r\n        },\r\n        typography: {\r\n            fontFamily: \"Amaranth\",\r\n            h1: {\r\n                fontSize: 28,\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n                textTransform: \"uppercase\",\r\n                color: \"#393939\",\r\n            },\r\n            button: {\r\n                height: 36,\r\n                width: \"max-content\",\r\n            }\r\n        },\r\n    }, frFR);\r\n\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <Provider store={store}>\r\n                <CssBaseline />\r\n                <BrowserRouter>\r\n                    <Switch>\r\n\r\n                        {/* LOGIN */}\r\n                        <Route exact path='/' component={Login} />\r\n\r\n                        {/* PROF */}\r\n\r\n                        <PrivateRoute forProf={true} exact path='/prof/home' component={AccueilProf} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/gestion-sujets' component={AccueilProf} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/promo' component={Promo} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/unites' component={GestionUnites} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/enonces' component={Enonces} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/formules' component={Formules} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/architecture' component={Architecture} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/gestion-correction' component={Correction} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/variable-aleatoires' component={VariableAleatoires} />\r\n                        <PrivateRoute forProf={true} exact path='/prof/correction/:value' component={Consulter} />\r\n\r\n                        {/* ETU */}\r\n                        <PrivateRoute forProf={false} exact path='/etu/home' component={AccueilEtu} />\r\n                        <PrivateRoute forProf={false} exact path='/etu/repondre-questions' component={RepondreQuestions} />\r\n\r\n                        {/* POUR LES DEUX */}\r\n                        <PrivateRoute exact path='/profil' component={Profil} />\r\n\r\n                        {/* REDIRECTION */}\r\n                        <Route render={() => <Redirect to=\"/\" />} />\r\n\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </MuiThemeProvider>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}